<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bossylobster Blog</title><link href="/" rel="alternate"></link><link href="/feeds/danny-hermes-dhermesbossylobstercom.atom.xml" rel="self"></link><id>/</id><updated>2014-09-28T00:00:00-07:00</updated><entry><title>Quantitative Interview Brain Teaser: Computer Assistance</title><link href="/2014/09/quantitative-interview-brain-teaser.html" rel="alternate"></link><updated>2014-09-28T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2014-09-28:2014/09/quantitative-interview-brain-teaser.html</id><summary type="html">&lt;p&gt;In a &lt;a href="/2014/09/quantitative-brain-teaser-brain-only.html"&gt;previous post&lt;/a&gt;
I discussed a recent brain teaser I had come across:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a &lt;strong&gt;10-digit number&lt;/strong&gt;, where each digit represents the
number of that ordinal number in the whole number. So, the
&lt;strong&gt;first digit represents the number of 0's&lt;/strong&gt; in the whole 10 digits. The
second digit represents the number of 1's in the whole 10 digits. And
so on. The first digit is not a 0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As I promised at the end of the "brain only" post, we'll do better than
simply finding &lt;strong&gt;an&lt;/strong&gt; answer, we'll find all of them (with the aid of a
computer).&lt;/p&gt;
&lt;h4&gt;Making the Problem Smaller&lt;/h4&gt;
&lt;p&gt;Without any thinking, there are 9 billion
(&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/p&gt;
&lt;p&gt;total choices. This is not only intractable for the human brain, but
becomes difficult for a computer too. A 3 GHz processor in the most
optimal case can only perform 3 billion operations per second but there
is a lot of counting, lists to create, and otherwise to find a number
which fits the criteria. To start, we write our number as&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Since there are 10 digits in total and each of the digits represent a
subcount of occurrences, the total number of occurrences can be
represented as the sum:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Additionally, (for example) since each 3 contributes a value of 3 to the
digit sum, we must also have&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;This second equation (which requires the first to make sense) limits our
choices of digits a great deal:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8804;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8804;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;The last four are obvious since (for example)
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="mrel"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.
We can also say that
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.
It is clearly no bigger than 2 but in the case that
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
we'd also have
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
meaning
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mrel"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.
Thus to brute force the problem we can choose digits 5 through
9 (5 digits in total) from the 32 (&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
different possible ways to make them 0 or 1.&lt;/p&gt;
&lt;h4&gt;Listing All Choices&lt;/h4&gt;
&lt;p&gt;Now for the fun part: programming (in Python). We now have 90,000
(&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) choices for our first 5 digits
and 32 choices for our last 5 digits.&lt;/p&gt;
&lt;p&gt;We can use Python's &lt;code&gt;range(10**4, 10**5)&lt;/code&gt; to represent the 5-digit
numbers between 10,000 and 99,999 (inclusive). For the 32 choices
for the last 5 digits, we use &lt;code&gt;itertools.product&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To see it in action on a smaller set of data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;   &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When we ask for 5 repeated
copies of the tuple &lt;code&gt;(0, 1)&lt;/code&gt; we get 32 possible 5-tuples as expected:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="mi"&gt;32&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Checking Candidates&lt;/h4&gt;
&lt;p&gt;Before we can iterate through all of our combinations, we need a way to
check if a given number fits the criterion. To do that we implement&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fits_criterion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;digit_list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;digit_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;digit_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This
takes a &lt;code&gt;list&lt;/code&gt; of digits, so as we loop over all choices, we'll turn
them into lists.&lt;/p&gt;
&lt;h4&gt;Exhaustive Search&lt;/h4&gt;
&lt;p&gt;Now we can use our accumulated tools, loop through all choices and print
any matches&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;first5&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;first5_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;last5&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;digit_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;first5_list&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;last5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# last5 is a tuple&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;fits_criterion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;digit_list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;digit_list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As luck would have it, the output is simply&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In other words,
the only number which fits the criteria is the one we found with our
brains alone:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;This serves to make the interview question that much more difficult,
since there is a unique solution.&lt;/p&gt;</summary><category term="Brain Teaser"></category><category term="Combinatorics"></category><category term="Digit Counting"></category><category term="Interview Questions"></category><category term="itertools"></category><category term="Mathematics"></category><category term="Programming"></category><category term="Python"></category></entry><entry><title>Quantitative Brain Teaser: Brain Only</title><link href="/2014/09/quantitative-brain-teaser-brain-only.html" rel="alternate"></link><updated>2014-09-22T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2014-09-22:2014/09/quantitative-brain-teaser-brain-only.html</id><summary type="html">&lt;p&gt;I've recently been working some atrophied mental muscles and came across
a brain teaser that was pretty nifty:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a &lt;strong&gt;10-digit number&lt;/strong&gt;, where each digit represents the
number of that ordinal number in the whole number. So, the
&lt;strong&gt;first digit represents the number of 0's&lt;/strong&gt; in the whole 10 digits. The
second digit represents the number of 1's in the whole 10 digits. And
so on. The first digit is not a 0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Example&lt;/h4&gt;
&lt;p&gt;If we shortened from 10 digits to 4 digit, the number&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;works since we have
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
and two 0's (in the second and fourth slots),
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
since the number has no 1's,
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
since the number has two 2's (in the first and third slots) and
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
since the number has no 3's.&lt;/p&gt;
&lt;h4&gt;Shorthand Notation&lt;/h4&gt;
&lt;p&gt;In order to refer to each digit, for search we name them all:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;We can see this in the above example when we refer to the digits in the
four digit number&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;h4&gt;A Practical Approach, Breaking Into Subproblems&lt;/h4&gt;
&lt;p&gt;Our search space is massive, and with only our wits, we need to quickly
find a way to focus on a small space of possibilities. Since the first
digit allows us to place a number of 0's we try to set it equal to
values starting from the largest. By doing this we only have a little
wiggle room to find the places which don't hold a zero.&lt;/p&gt;
&lt;h4&gt;First Case: &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;In this case our only choice is&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;since we must have nine 0's. However since we have one 9,
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
should not occur.&lt;/p&gt;
&lt;p&gt;Thus we see &lt;strong&gt;none of our choices are possible&lt;/strong&gt; when
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Second Case: &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Here we must have eight 0's and
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
so our possible solutions must look like&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8727;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;But this leaves us with
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
as our only choice since we can't place any more 8's. But now the
presence of a 1 in&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;can't coexist with
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
so we again see &lt;strong&gt;none of our choices are possible&lt;/strong&gt; when
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Third Case: &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Here we have seven 0's and know that
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
It must be at least 1 since the first digit is a 7. It can't be 2
because the presence of another 7 would mean another digit (other than
0) would occur 7 times, which is impossible since there are only 10
total digits.&lt;/p&gt;
&lt;p&gt;Since we know
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
our possible solutions must look like&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;But again here we reach an impossible point. If we set
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
then that digit would contradict itself since it is the second
occurrence of 1. If
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
it would contradict
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
and so on for higher values. In addition, we have used all our
digits, so can't increase the value of
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
by placing more 1's in our number.&lt;/p&gt;
&lt;p&gt;Thus we see &lt;strong&gt;none of our choices are possible&lt;/strong&gt; when
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Fourth Case: &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Here we have six 0's and must have
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
since (as above), two different digits can't occur six times among 10
digits.&lt;/p&gt;
&lt;p&gt;Also as before we can't have
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
but now have some extra freedom (an extra digit which doesn't have to
be 0) so consider the case
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.
This corresponds to an occurrence of the digit 2, hence we set
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.84444em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;d&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now we have 4 non-zero digits along with six 0's to place:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Thus &lt;strong&gt;we have found a number&lt;/strong&gt; which satisfies the criteria!
The zero digits in the 3, 4, 5, 7, 8, and 9 places correspond to the
absence of those digits. The non-zero digits in the 0, 1, 2, and 6
places also are the correct counts of each of those digits.&lt;/p&gt;
&lt;p&gt;As a math nerd, I was still curious to know how to find every possible
number that satisfies the criteria, but that task is too tedious to
handle with the brain alone (or at least to be worth reading about when
solved by hand). In my follow up to this, I'll show how a combination of
smarts and programming can perform an exhaustive search in under 10
seconds.&lt;/p&gt;</summary><category term="Brain Teaser"></category><category term="Combinatorics"></category><category term="Digit Counting"></category><category term="Interview Questions"></category><category term="Mathematics"></category></entry><entry><title>Math for Humans, A Second Attempt</title><link href="/2014/08/math-for-humans-second-attempt.html" rel="alternate"></link><updated>2014-08-22T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2014-08-22:2014/08/math-for-humans-second-attempt.html</id><summary type="html">&lt;p&gt;The morning after posting my latest
&lt;a href="http://blog.bossylobster.com/2014/07/conditional-probabilities-in-thinking.html"&gt;blog post&lt;/a&gt;,
I woke up still thinking about how to explain the concept.&lt;/p&gt;
&lt;p&gt;More importantly, I realized that my goal of writing
&lt;strong&gt;math for humans&lt;/strong&gt; failed miserably.&lt;/p&gt;
&lt;p&gt;So here is a second go at it.&lt;/p&gt;
&lt;p&gt;First we're told we're in a world where &lt;strong&gt;85% of cabs are Green&lt;/strong&gt;
and the rest are Blue. Humans love tables (and they are
easy to understand). So we start off with a representative sample of 100
cabs:&lt;/p&gt;
&lt;!--- http://blogknowhow.blogspot.com/2011/01/how-add-table-blogger-blogspot-post.html --&gt;

&lt;style type="text/css"&gt;
.nobrtable br { display: none }
.nobrtable tr {text-align: center;}
.nobrtable tr.alt td {background-color: #eeeecc; color: black;}
.nobrtable td {text-align: center;}
.nobrtable caption {caption-side:bottom;}
&lt;/style&gt;

&lt;div style="margin-left: auto; margin-right: auto; text-align: center;"&gt;
&lt;div class="nobrtable"&gt;
&lt;table border="2" bordercolor="#0033FF" cellpadding="10" cellspacing="0" style="background-color: #99ffff; border-collapse: collapse; color: black; margin-left: auto; margin-right: auto; width: 100%px;"&gt;
&lt;tbody&gt;
&lt;tr style="background-color: #0033ff; color: white; padding-bottom: 4px; padding-top: 5px;"&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Green&lt;/th&gt;
&lt;th&gt;Blue&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr class="alt"&gt;
&lt;td&gt;Cabs&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;After this, we're told that a bystander
&lt;strong&gt;correctly identifies a cab 80% of the time&lt;/strong&gt;, or 4 out of every 5.
Applying this to the 85 Green cabs (85 is 17 times 5), this bystander
will mis-identify 17 as Blue (1 out of 5) and the other 68 will
correctly be identified as Green:&lt;/p&gt;
&lt;div style="margin-left: auto; margin-right: auto; text-align: center;"&gt;
&lt;div class="nobrtable"&gt;
&lt;table border="2" bordercolor="#0033FF" cellpadding="10" cellspacing="0" style="background-color: #99ffff; border-collapse: collapse; color: black; margin-left: auto; margin-right: auto; width: 100%px;"&gt;
&lt;tbody&gt;
&lt;tr style="background-color: #0033ff; color: white; padding-bottom: 4px; padding-top: 5px;"&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Green&lt;/th&gt;
&lt;th&gt;Blue&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr class="alt"&gt;
&lt;td&gt;Cabs&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ID'd Green&lt;/td&gt;
&lt;td&gt;&lt;b&gt;68&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="alt"&gt;
&lt;td&gt;ID'd Blue&lt;/td&gt;
&lt;td&gt;&lt;b&gt;17&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Similarly, of the 15 Blue cabs (15 is 3 times 5), this bystander will
mis-identify 3 as Green (1 out of 5) and the other 12 will correctly be
identified as Blue:&lt;/p&gt;
&lt;div style="margin-left: auto; margin-right: auto; text-align: center;"&gt;
&lt;div class="nobrtable"&gt;
&lt;table border="2" bordercolor="#0033FF" cellpadding="10" cellspacing="0" style="background-color: #99ffff; border-collapse: collapse; color: black; margin-left: auto; margin-right: auto; width: 100%px;"&gt;
&lt;tbody&gt;
&lt;tr style="background-color: #0033ff; color: white; padding-bottom: 4px; padding-top: 5px;"&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Green&lt;/th&gt;
&lt;th&gt;Blue&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr class="alt"&gt;
&lt;td&gt;Cabs&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ID'd Green&lt;/td&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;td&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="alt"&gt;
&lt;td&gt;ID'd Blue&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;b&gt;12&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Now Kahneman wants us to use the data at hand to determine what the
probability is that a cab is &lt;span&gt;actually Blue&lt;/span&gt; given the
bystander &lt;strong&gt;identified the cab as Blue&lt;/strong&gt;. To determine this
probability, we simply need to consider the final row of the table:&lt;/p&gt;
&lt;div style="margin-left: auto; margin-right: auto; text-align: center;"&gt;
&lt;div class="nobrtable"&gt;
&lt;table border="2" bordercolor="#0033FF" cellpadding="10" cellspacing="0" style="background-color: #99ffff; border-collapse: collapse; color: black; margin-left: auto; margin-right: auto; width: 100%px;"&gt;
&lt;tbody&gt;
&lt;tr style="background-color: #0033ff; color: white; padding-bottom: 4px; padding-top: 5px;"&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Green&lt;/th&gt;
&lt;th&gt;Blue&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr class="alt"&gt;
&lt;td&gt;ID'd Blue&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;b&gt;29&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This rows tells us that only 29 cabs will be identified as Blue, and
among those, 12 will actually be Blue. Hence the probability will be&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.845108em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8776;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;What this really shows is that even though the bystander has a large
chance (80%) of getting the color right, the number of Green cabs is
so much larger it overwhelms the correctly identified Blue cabs with
incorrectly identified Green ones.&lt;/p&gt;
&lt;h2&gt;What I Overlooked&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dense text is always bad&lt;/li&gt;
&lt;li&gt;Using colors and breaking up text makes reading easier (more
    modular)&lt;/li&gt;
&lt;li&gt;Introducing mathematical notation is almost always overkill&lt;/li&gt;
&lt;li&gt;Tables and samples are a good way to discuss probabilities&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Bayes"></category><category term="Bayesian"></category><category term="Kahneman"></category><category term="Layman"></category><category term="Mathematics"></category><category term="Probability"></category></entry><entry><title>Bayes' Law Primer</title><link href="/2014/07/bayes-law-primer.html" rel="alternate"></link><updated>2014-07-29T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2014-07-29:2014/07/bayes-law-primer.html</id><summary type="html">&lt;p&gt;I'm currently writing a blog post that uses
&lt;a href="http://en.wikipedia.org/wiki/Bayes%27_law"&gt;Bayes' Law&lt;/a&gt;
but don't want to muddy the post with a review in layman's terms. So
I have something to link, here is a short description and a chance to flex my
&lt;a href="http://math.berkeley.edu/~dhermes/"&gt;teaching&lt;/a&gt; muscles before the school
year starts.&lt;/p&gt;
&lt;h2&gt;Bayes' Law&lt;/h2&gt;
&lt;p&gt;For those who aren't sure, Bayes' Law tells us that the probability
event
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
occurs given we know that event
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
has occurred can
easily be computed. It is written as
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
vertical bar is meant like the word "given", in other words, the event
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
is distinct from the event
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
(&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; given &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;).
Bayes' law, states that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.01em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="text mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.485em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;This effectively is a re-scaling of the events by the total probability
of the given event:
(&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For example, if &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the event that a &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
is rolled on a fair die and &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the event that the roll
is odd. We know of course that
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.845108em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
since half of the rolls are odd. The event
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.69444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
in this case is the same as &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; since the roll can only be
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; if the roll is already odd. Thus&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.845108em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;and we can compute the conditional probability
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.01em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.485em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;As we expect, one out of every three odd rolls is a &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="extended"&gt;Bayes' Law Extended Form&lt;/h2&gt;
&lt;p&gt;Instead of considering a single event &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we can consider
a range of &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; possible events
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
occur. We require that one of these &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-events must occur
and that they cover all possible events that could occur. For example
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the event that H&lt;sub&gt;2&lt;/sub&gt;O is vapor,
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the event that H&lt;sub&gt;2&lt;/sub&gt;O is water and
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the event that H&lt;sub&gt;2&lt;/sub&gt;O is ice.&lt;/p&gt;
&lt;p&gt;In such a case we know that since the &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-events are distinct&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Using Bayes' law, we can reinterpret as&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.036108em;vertical-align:-0.286108em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05724em;"&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05724em;"&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05724em;"&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;and the above becomes&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;X&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.22222em;"&gt;Y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.22222em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;The same is true if we replace &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; with an arbitrary number of
events &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;</summary><category term="Bayes"></category><category term="Layman"></category><category term="Mathematics"></category><category term="Probability"></category></entry><entry><title>Conditional Probabilities in "Thinking Fast and Slow"</title><link href="/2014/07/conditional-probabilities-in-thinking.html" rel="alternate"></link><updated>2014-07-29T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2014-07-29:2014/07/conditional-probabilities-in-thinking.html</id><summary type="html">&lt;p&gt;I'm currently reading
&lt;a href="http://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555"&gt;Thinking Fast and Slow&lt;/a&gt;
by &lt;a href="http://en.wikipedia.org/wiki/Daniel_Kahneman"&gt;Daniel Kahneman&lt;/a&gt;.
(Thanks to Elianna for letting me borrow it.) I'm not finished yet, but
60% of the way through I definitely recommend it.&lt;/p&gt;
&lt;p&gt;While reading the "Causes Trump Statistics" chapter (number 16), there
is a description of a study about cabs and hit-and-run accidents. It
describes a scenario where participants are told that 85% of cabs are
Green, 15% are Blue and a given observer has an 80% chance of correctly
identifying the color of a given cab. Given this data, the chapter
presents a scenario where a bystander identifies a cab in an accident as
Blue and Kahneman goes on to explain how we fail to take the data into
consideration. I really enjoyed this chapter, but won't wreck the book
for you.&lt;/p&gt;
&lt;p&gt;Instead, I want to do some math (big surprise, I know). However, I want
to make it accessible to non-mathematicians (atypical for my posts).&lt;/p&gt;
&lt;p&gt;Given the data, Kahneman tells us that the true probability that the cab
was Blue is 41% though we likely bias our thinking towards the 80%
probability of the identification being correct. I was on the
&lt;a href="http://www.sfmta.com/"&gt;bus&lt;/a&gt; and it kept bothering me, to the point that
I couldn't continue reading. Eventually I figured it out (when I got to
the &lt;a href="http://www.bart.gov/"&gt;train&lt;/a&gt;) and I wanted to explain how this is
computed using &lt;a href="http://en.wikipedia.org/wiki/Bayes%27_law"&gt;Bayes' Law&lt;/a&gt;.
As a primer, I wrote a
&lt;a href="/2014/07/bayes-law-primer.html"&gt;post&lt;/a&gt; using
layman's terms explaining how we use Bayes' Law. (There is some notation
introduced but I hope it isn't too confusing.)&lt;/p&gt;
&lt;h2&gt;Putting Bayes' Law to Use&lt;/h2&gt;
&lt;p&gt;We need to understand what 41% even corresponds to before we can compute
it. What's actually happened is that we know the event
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; has occurred -- the cab has been identified
(&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) as Blue (&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;).
What we want is the probability that the cab &lt;strong&gt;is Blue&lt;/strong&gt; given we know
it has been identified -- we want:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Using Bayes' Law, we can write&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.01em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="text mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.485em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.01em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="text mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.485em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;identified 80% of the time hence&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;(i.e. the probability of correct ID
as Blue given it is actually Blue). We're also told that 15% of the cabs
are Blue hence&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;We can combine these with the second
application of Bayes' Law above to show that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;The only piece of data missing now to finish our computation is
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Using the
&lt;a href="http://blog.bossylobster.com/2014/07/bayes-law-primer.html#extended"&gt;extended form&lt;/a&gt;
of Bayes' Law, since we know that the events &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;G&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (the cab is Blue or Green) are exclusive and cover all
possibilities for the cab, we can say that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit"&gt;G&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;G&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Since there is only an 80% chance of correct identification, we know that
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit"&gt;G&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (the probability of
misidentifying a Green cab as Blue). We also know that 85% of the cabs are
Green hence we can plug these in (along with numbers already computed) to get&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Putting it all together we get our answer&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.01em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mspace thinspace"&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="text mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.485em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="text mord scriptstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;b&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8776;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Fantastic! Now we can get back to reading...&lt;/p&gt;</summary><category term="Bayes"></category><category term="Bayesian"></category><category term="Kahneman"></category><category term="Layman"></category><category term="Mathematics"></category><category term="Probability"></category></entry><entry><title>Trigonometry and Nested Radicals</title><link href="/2013/11/trigonometry-and-nested-radicals.html" rel="alternate"></link><updated>2013-11-25T00:00:00-08:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2013-11-25:2013/11/trigonometry-and-nested-radicals.html</id><summary type="html">&lt;p&gt;Early last month, I was chatting with one of my officemates about a
curious problem I had studied in high school. I hadn't written any of
the results down, so much of the discussion involved me rediscovering
the results and proving them with much more powerful tools than I once
possessed.&lt;/p&gt;
&lt;p&gt;Before writing about the problem I had played around with, I want to
give a
&lt;span style="text-decoration: line-through;"&gt;brief&lt;/span&gt;
motivation. For as long as humans have been
doing mathematics, finding values of &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; has been deemed
worthwhile (or every generation has just found it worthwhile to waste time
computing digits).&lt;/p&gt;
&lt;p&gt;One such way the Greeks (particularly
&lt;a href="http://www.math.utah.edu/~alfeld/Archimedes/Archimedes.html"&gt;Archimedes&lt;/a&gt;)
computed &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; was by approximating a circle by a regular polygon
and letting the number of sides grow large enough so that the error
between the area of the unit circle (&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) and the
area of the polygon would be smaller than some fixed threshold. Usually
these thresholds were picked to ensure that the first &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.69444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03148em;"&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; digits
were fully accurate (for some appropriate value of &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.69444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03148em;"&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;In many introductory Calculus courses, this problem is introduced
exactly when the limit is introduced and students are forced to think
about the &lt;a href="http://www.qbyte.org/puzzles/p045s.html"&gt;area problem&lt;/a&gt; in the
regular polygon:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Compute pi from polygons" src="/images/p045.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Given &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sides, the area is &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;T&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
where &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;T&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the area of each individual triangle given by
one side of the polygon and the circumcenter.&lt;/p&gt;
&lt;p&gt;Call one such triangle &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#0916;&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and let
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; be the side that is also a side of the polygon while the
other sides have &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
since the polygon is inscribed in a unit circle. The angle
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.845108em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8736;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; since each of the triangles
has the same internal
angle and there are &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; of them. If we can find the
perpendicular height &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.69444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; from &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, the area will be
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8801079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.2251079999999999em;vertical-align:-0.345em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit"&gt;h&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. But we also
know that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8801079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.400108em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8736;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="minner scriptstyle cramped"&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.07153em;"&gt;C&lt;/span&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;"&gt;&amp;#8739;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;hence&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;h&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Combining all of these, we can approximate &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; with
the area:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.01em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8776;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.34500000000000003em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.485em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner scriptstyle uncramped"&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped" style="top:0em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0.7em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;As I've shown my
&lt;a href="http://math.berkeley.edu/courses/choosing/lowerdivcourses/math1A"&gt;Math 1A&lt;/a&gt;
students, we see that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.427em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:2.363em;vertical-align:-0.936em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="reset-textstyle displaystyle textstyle uncramped"&gt;&lt;span class="mop op-limits"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.644331em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8594;&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8734;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:2.7755575615628914e-17em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="mop"&gt;lim&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="minner reset-textstyle displaystyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.686em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle cramped"&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.2300000000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.677em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped"&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mord"&gt;/&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;span class="mop op-limits"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.617108em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8594;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:2.7755575615628914e-17em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class="mop"&gt;lim&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle displaystyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.686em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle cramped"&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.677em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped"&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;so these are indeed good approximations.&lt;/p&gt;
&lt;h3&gt;Theory is Nice, But I Thought We Were Computing Something&lt;/h3&gt;
&lt;p&gt;Unfortunately for us (and Archimedes), computing
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is not quite as simple
as dividing by &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, so often special values of
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; were chosen. In fact, starting from &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
and then using &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, the areas could be computed via a special
way of averaging the previous areas. Lucky for us, such a method is equivalent
to the trusty
&lt;a href="http://en.wikipedia.org/wiki/List_of_trigonometric_identities#Double-angle.2C_triple-angle.2C_and_half-angle_formulae"&gt;half angle identities&lt;/a&gt;
(courtesy of
&lt;a href="http://en.wikipedia.org/wiki/Abraham_de_Moivre"&gt;Abraham De Moivre&lt;/a&gt;).
To keep track of these polygons with a power of two as the number of
sides, we call&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.86338em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.21339em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.289em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Starting out with the simplest polygon, the square with
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10903em;"&gt;N&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sides, we have&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Jumping to the
&lt;a href="http://en.wikipedia.org/wiki/Octagon"&gt;octagon&lt;/a&gt; (no not that
"&lt;a href="https://www.google.com/search?q=%22the+octagon%22&amp;amp;tbm=isch"&gt;The Octagon&lt;/a&gt;"),
we have&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.054554em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.404564em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.08650571428571419em;"&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8293628571428571em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.06722000000000006em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8272200000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;So far, the toughest thing we've had to deal with is a
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.674115em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.674115em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8728;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; angle and haven't yet had to lean on Abraham
(&lt;a href="/images/abraham-de-moivre.jpg"&gt;him&lt;/a&gt;, &lt;a href="/images/abraham-lincoln.jpg"&gt;not him&lt;/a&gt;)
for help. The &lt;a href="http://en.wikipedia.org/wiki/Hexadecagon"&gt;hexadecagon&lt;/a&gt; wants
to change that:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.46751em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.967743em;vertical-align:-0.5002329999999999em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.27751000000000015em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner reset-textstyle textstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.6125em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mop"&gt;cos&lt;/span&gt;&lt;span class="minner scriptstyle cramped"&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;"&gt;(&lt;/span&gt;&lt;span class="minner reset-scriptstyle scriptstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22142857142857142em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.38751em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.14978700000000011em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner reset-textstyle textstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.08650571428571419em;"&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8293628571428571em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.259787em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.1822250000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.06722000000000006em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8272200000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.9922250000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;To really drill home the point (and motivate my next post) we'll compute
this for the &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-gon (past the point where polygons
have worthwhile names):&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.46751em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.84002em;vertical-align:-0.3725099999999999em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="mop"&gt;sin&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.27751000000000015em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner reset-textstyle textstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.6125em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mop"&gt;cos&lt;/span&gt;&lt;span class="minner scriptstyle cramped"&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;"&gt;(&lt;/span&gt;&lt;span class="minner reset-scriptstyle scriptstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22142857142857142em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.38751em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Before, we could rely on the fact that we know that a
45-45-90 triangle looked like, but now, we come across
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;cos&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, a value
which we haven't seen before. Luckily, Abraham has help here as well:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.46751em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.967743em;vertical-align:-0.5002329999999999em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;cos&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.27751000000000015em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner reset-textstyle textstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.6125em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mop"&gt;cos&lt;/span&gt;&lt;span class="minner scriptstyle cramped"&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;"&gt;(&lt;/span&gt;&lt;span class="minner reset-scriptstyle scriptstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22142857142857142em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped" style="top:0.07500000000000001em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.38751em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.14978700000000011em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner reset-textstyle textstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.08650571428571419em;"&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8293628571428571em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.259787em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner reset-textstyle textstyle uncramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.1822250000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.06722000000000006em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8272200000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.9922250000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;which lets us compute&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.8260420000000002em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:2.44003em;vertical-align:-0.6139879999999999em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.3360420000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size3"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner reset-textstyle textstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22999999999999998em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.5515em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="minner reset-scriptstyle scriptstyle cramped"&gt;&lt;span class="mfrac"&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.345em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.22142857142857142em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped frac-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.394em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.050791428571428376em;"&gt;&lt;span class="style-wrap reset-scriptstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.08650571428571419em;"&gt;&lt;span class="style-wrap reset-scriptstyle scriptstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8293628571428571em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.1365057142857142em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1.4285714285714286em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.746042em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.24723000000000028em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.1822250000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.06722000000000006em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8272200000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.9922250000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.3572300000000002em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;So why have I put you through all this? If we wave our hands like a
&lt;a href="/images/fantasia-mickey.jpg"&gt;magician&lt;/a&gt;,
we can see this pattern continues and for the general &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:2.1672350000000002em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:3.04003em;vertical-align:-0.8727949999999998em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.3772350000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size4"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.31223500000000026em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size3"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.24723000000000028em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.1822250000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner"&gt;&amp;#8943;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.06722000000000006em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.8272200000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.9922250000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.3572300000000002em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.7222350000000002em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-2.087235em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;where there are &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.72777em;vertical-align:-0.08333em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; nested radicals with the
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.58333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.66666em;vertical-align:-0.08333em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8853;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sign and only one minus sign at the beginning.&lt;/p&gt;
&lt;p&gt;This motivates us to study two questions, what is the limiting behavior
of such a nested radical:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.27001em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.84002em;vertical-align:-0.5700099999999999em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.08001000000000014em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;s&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.015005000000000046em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;s&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:0.10000000000000009em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="minner"&gt;&amp;#8943;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.6599999999999999em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.825005em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.19001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;as the signs &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;s&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;s&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; take values in
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;{&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Recasting in terms of the
discussion above, we want to know how close we are to &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;&amp;#0960;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
as we increase the number of sides.&lt;/p&gt;
&lt;p&gt;When I was in high school, I just loved to
&lt;a href="/images/nerd-out.jpg"&gt;nerd out&lt;/a&gt;
on any and all math problems, so I studied this just for fun. Having heard
about the unfathomable brain of
&lt;a href="http://en.wikipedia.org/wiki/Srinivasa_Ramanujan"&gt;Ramanujan&lt;/a&gt; and the
fun
&lt;a href="http://www.isibang.ac.in/~sury/ramanujanday.pdf"&gt;work he had done&lt;/a&gt;
with infinitely
&lt;a href="http://en.wikipedia.org/wiki/Nested_radical"&gt;nested radicals&lt;/a&gt;,
I wanted to examine which sequences of signs&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;s&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;s&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;produced an infinite radical that converged and what the convergence
behavior was.&lt;/p&gt;
&lt;p&gt;I'm fairly certain my original questions came from an Illinois Council
of Teachers of Mathematics (&lt;a href="http://www.ictm.org/contest.html"&gt;ICTM&lt;/a&gt;)
contest problem along the lines of&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.0305600000000001em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.24001em;vertical-align:-0.20944999999999986em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord"&gt;F&lt;/span&gt;&lt;span class="mord"&gt;i&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord"&gt;e&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord" style="margin-right:0.01389em;"&gt;v&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;l&lt;/span&gt;&lt;span class="mord"&gt;u&lt;/span&gt;&lt;span class="mord"&gt;e&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord" style="margin-right:0.07778em;"&gt;f&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;h&lt;/span&gt;&lt;span class="mord"&gt;e&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;i&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord" style="margin-right:0.07778em;"&gt;f&lt;/span&gt;&lt;span class="mord"&gt;i&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;i&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;e&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;n&lt;/span&gt;&lt;span class="mord"&gt;e&lt;/span&gt;&lt;span class="mord"&gt;s&lt;/span&gt;&lt;span class="mord"&gt;t&lt;/span&gt;&lt;span class="mord"&gt;e&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;r&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord"&gt;i&lt;/span&gt;&lt;span class="mord"&gt;c&lt;/span&gt;&lt;span class="mord"&gt;a&lt;/span&gt;&lt;span class="mord"&gt;l&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.14056000000000013em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.025554999999999994em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="minner"&gt;&amp;#8943;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.785555em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.9505600000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;or maybe the slightly more difficult&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.7605700000000002em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:2.44003em;vertical-align:-0.6794599999999998em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.2705700000000002em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size3"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.20556500000000022em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size2"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.14056000000000013em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&lt;span class="delimsizing size1"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="sqrt mord"&gt;&lt;span class="sqrt-sign" style="top:-0.025554999999999994em;"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped"&gt;&amp;#8730;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="minner"&gt;&amp;#8943;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.785555em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.9505600000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.315565em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-1.6805700000000001em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle textstyle uncramped sqrt-line"&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:1em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="/images/armed-cartoon-moose.jpg"&gt;Armed&lt;/a&gt; with my &lt;a href="/images/TI-83.jpg"&gt;TI-83&lt;/a&gt;,
I set out to do some hardcore programming and figure it out. It took me
around a month of off-and-on tinkering. This second time around as a
mathematical grown-up, it took me the first half of a plane ride from
SFO to Dallas.&lt;/p&gt;
&lt;p&gt;In the next few weeks/months, I hope to write a few blog posts,
including math, proofs and some real code on what answers I came up with
and what other questions I have.&lt;/p&gt;</summary><category term="Approximation"></category><category term="Infinite Nested Radical"></category><category term="Math"></category><category term="Nested Radical"></category><category term="Pi"></category><category term="Radical"></category><category term="Root Two"></category><category term="Square Root"></category></entry><entry><title>Calculating a Greatest Common Divisor with Dirichlet's Help</title><link href="/2013/09/calculating-greatest-common-divisor.html" rel="alternate"></link><updated>2013-09-10T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2013-09-10:2013/09/calculating-greatest-common-divisor.html</id><summary type="html">&lt;p&gt;Having just left Google and started my PhD in Applied Mathematics at
&lt;a href="http://math.berkeley.edu/"&gt;Berkeley&lt;/a&gt;, I thought it might be
appropriate to write some (more) math-related blog posts. Many of these
posts, I jotted down on napkins and various other places on the web and
just haven't had time to post until now.&lt;/p&gt;
&lt;p&gt;For today, I'm posting a result which was somewhat fun to figure out
with/for one of my
&lt;a href="https://picasaweb.google.com/101796704659729637490/WhereHasYourMathTShirtBeen#5802889644579484306"&gt;buddies&lt;/a&gt;
from &lt;a href="http://www.lsa.umich.edu/math/"&gt;Michigan Math&lt;/a&gt;. I'd also like to point
out that he is absolutely kicking ass at Brown.&lt;/p&gt;
&lt;p&gt;He was trying to determine if&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/14.png" alt="J(B_n)_{\text{Tor}}\left(\mathbb{Q}\right) \stackrel{?}{=} \mathbb{Z}/2\mathbb{Z}." class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;WAT? In the above, &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.09618em;"&gt;J&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.05017em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is the Jacobian of the
a curve &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.05017em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; given by
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.03588em;"&gt;y&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8901;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.10764em;"&gt;f&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Here
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.10764em;"&gt;f&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; denotes&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/15.png" alt="\underbrace{f \circ \cdots \circ f}_{n \text{ times}}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;and &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.10764em;"&gt;f&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;x&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, his and my interests diverged some time ago, so I can't appreciate
what steps took him from this to the problem I got to help with.
However, he was able to show (trivially maybe?) that this was equivalent
to showing that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mspace qquad"&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;where the &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; in the exponents is the same as that in
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.05017em;"&gt;B&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.05017em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and where the values we are using in our greatest common
divisor (e.g. &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; above) are all
of the primes &lt;img src="/latex_images/16.png" alt="p \equiv 5 \bmod{8}" class="latex-img"/&gt;.&lt;/p&gt;
&lt;p&gt;My buddy, being sadistic and for some reason angry with me, passed me
along the stronger statement:&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mspace qquad"&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;which I of course struggled with and tried to beat down with tricks like
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.897438em;vertical-align:-0.08333em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. After a few days of this struggle, he
confessed that he was trying to ruin my life and told me about the
weaker version &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;When he sent me the email informing me of this, I read it at 8am, drove
down to Santa Clara for &lt;a href="https://us.pycon.org/2013/"&gt;PyCon&lt;/a&gt; and by the
time I arrived at 8:45am I had figured the weaker case &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
out. This felt much better than the days of struggle and made me want to
write about my victory (which I'm doing now). Though, before we actually
demonstrate the weaker fact &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I will admit that I am not in
fact tall. Instead I stood on the shoulders of Dirichlet and
&lt;a href="http://www.youtube.com/watch?v=A6f-6l0W-0o#t=35s"&gt;called myself tall&lt;/a&gt;.
Everything else is bookkeeping.&lt;/p&gt;
&lt;h2&gt;Let's Start the Math&lt;/h2&gt;
&lt;p&gt;First, if &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we see trivially that&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:1.15em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.80002em;vertical-align:-0.65002em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size2"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size2"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;6&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;and all the remaining terms are divisible by &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; hence the
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; over all the primes must be &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, if &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mrel"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we will show that &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; divides
our &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, but &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; does not and that no odd
prime can divide this &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. First, for
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, note that&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/17.png" alt="p^{2^n} + 1 \equiv \left(\pm 1\right)^{2^n} + 1 \equiv 2 \bmod{4}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;since our primes are odd. Thus they are all divisible by
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and none by &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now assume some odd prime &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; divides all of the quantities
in question. We'll show no such &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; can exist by
contradiction.&lt;/p&gt;
&lt;p&gt;In much the same way we showed the &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; wasn't divisible by
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we seek to find a contradiction in some modulus. But since
we are starting with&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/18.png" alt="p^{2^n} + 1 \equiv 0 \bmod{p^{\ast}}," class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;if we can find some such &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; with&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/19.png" alt="p \equiv 1 \bmod{p^{\ast}}," class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;then we'd have our contradiction from&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/20.png" alt="0 \equiv p^{2^n} + 1 \equiv 1^{2^n} + 1 \equiv 2 \bmod{p^{\ast}}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;which can't occur since &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is an odd prime.&lt;/p&gt;
&lt;p&gt;With this in mind, along with a subsequence of the arithmetic
progression &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;{&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, it
seems that using
&lt;a href="http://en.wikipedia.org/wiki/Dirichlet's_theorem_on_arithmetic_progressions"&gt;Dirichlet's theorem on arithmetic progressions&lt;/a&gt;
may be a good strategy. However, this sequence only tells us about the
residue modulo &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, but we also want to know about the residue
modulo &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Naturally, we look for a subsequence in&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/21.png" alt="\mathbb{Z}/8\mathbb{Z} \times \mathbb{Z}/p^{*}\mathbb{Z}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;corresponding to the residue pair
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;m&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;m&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Due to the
&lt;a href="http://en.wikipedia.org/wiki/Chinese_remainder_theorem"&gt;Chinese remainder theorem&lt;/a&gt;
this corresponds to a unique residue modulo &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since this residue &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; has
&lt;img src="/latex_images/22.png" alt="r \equiv 1 \bmod{p^{\ast}}" class="latex-img"/&gt;, we must have&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.02778em;"&gt;r&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8712;&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;{&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;But since &lt;img src="/latex_images/23.png" alt="1 + kp^{\ast} \equiv r \equiv 5 \bmod{8}" class="latex-img"/&gt;,
we have &lt;img src="/latex_images/24.png" alt="kp^{\ast} \equiv 4 \bmod{8}" class="latex-img"/&gt; and
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8151079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.065108em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03148em;"&gt;k&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="minner"&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.364em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;m&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; since
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is odd and invertible mod &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.64444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. But
this also means its inverse is odd, hence
&lt;img src="/latex_images/25.png" alt="k \equiv 4\cdot(2k' + 1) \equiv 4 \bmod{8}" class="latex-img"/&gt;. Thus
we have &lt;img src="/latex_images/26.png" alt="1 + 4 p^{\ast} \in \mathbb{Z}/8p^{\ast}\mathbb{Z}" class="latex-img"/&gt;
corresponding to our residue pair. Thus every element in the arithmetic
progression&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.05em;vertical-align:-0.3em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="reset-textstyle displaystyle textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05764em;"&gt;S&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="minner"&gt;&lt;span class="minner displaystyle textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;{&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.413em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.413em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.03148em;"&gt;k&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.3em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit" style="margin-right:0.03148em;"&gt;k&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-0.413em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8734;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;is congruent to
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;4&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;m&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and hence
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.69444em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;m&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mord"&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="text mord textstyle uncramped"&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;span class="mord"&gt;m&lt;/span&gt;&lt;span class="mord"&gt;o&lt;/span&gt;&lt;span class="mord"&gt;d&lt;/span&gt;&lt;span class="mord mspace"&gt;&amp;#0160;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;What's more, since
&lt;img src="/latex_images/27.png" alt="5 \in \left(\mathbb{Z}/8\mathbb{Z}\right)^{\times}" class="latex-img"/&gt;
and
&lt;img src="/latex_images/28.png" alt="1 \in \left(\mathbb{Z}/p^{*}\mathbb{Z}\right)^{\times}" class="latex-img"/&gt;,
we have
&lt;img src="/latex_images/29.png" alt="1 + 4 p^{*} \in \left(\mathbb{Z}/8p^{*}\mathbb{Z}\right)^{\times}" class="latex-img"/&gt;
(again by the Chinese remainder theorem). Thus the arithmetic progression
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05764em;"&gt;S&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; satisfies the hypothesis of Dirichlet's theorem. Hence
there must be at least one prime &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; occurring in the
progression (since there are infinitely many). But that also means
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; occurs in
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;{&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord"&gt;9&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="mord"&gt;7&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mpunct"&gt;&amp;#8230;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; hence
we've reached our desired contradiction. RAA.&lt;/p&gt;
&lt;h2&gt;Now What&lt;/h2&gt;
&lt;p&gt;We still
&lt;a href="http://math.stackexchange.com/q/659193/31956"&gt;don't know&lt;/a&gt;
if the strong version &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.85em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;3&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;&lt;span class="delimsizing size1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;By similar arguments as above, if any odd prime
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.688696em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8831359999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; divides this &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mop"&gt;&lt;span style="margin-right:0.01389em;"&gt;g&lt;/span&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, then we have&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/30.png" alt="5^{2^n} \equiv -1 \bmod{p^{\ast}}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;hence there is an element
of order &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. This means the order of the multiplicative
group &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;&amp;#0966;&lt;/span&gt;&lt;span class="minner textstyle uncramped"&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8727;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is
divisible by &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Beyond that, who knows? We're still
thinking about it (but only passively, more important things to do).&lt;/p&gt;</summary><category term="Dirichlet"></category><category term="Math"></category><category term="Mathematics"></category><category term="Number Theory"></category><category term="Prime Number"></category></entry><entry><title>Some Fibonacci Fun with Primes</title><link href="/2013/08/some-fibonacci-fun-with-primes.html" rel="alternate"></link><updated>2013-08-18T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2013-08-18:2013/08/some-fibonacci-fun-with-primes.html</id><summary type="html">&lt;p&gt;I haven't written in way too long and just wanted to post this fun
little proof.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Assertion:&lt;/strong&gt; Let &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; be the &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;th
Fibonacci number defined by&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;+&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;n&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord mspace quad"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mpunct"&gt;,&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mord"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;Show that for an odd prime &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.716em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.9309999999999999em;vertical-align:-0.215em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8800;&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we have
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; divides &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.999158em;vertical-align:-0.315828em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.17972000000000002em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.289em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof:&lt;/strong&gt; We do this by working inside &lt;img src="/latex_images/0.png" alt="\mathbb{F}_p" class="latex-img"/&gt;
instead of working in &lt;img src="/latex_images/1.png" alt="\mathbb{R}" class="latex-img"/&gt;. The recurrence is
given by&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/2.png" alt="\left(\begin{array}{cc} 1 &amp; 1 \\ 1 &amp; 0 \end{array} \right) \left( \begin{array}{c} F_{n-1} \\ F_{n-2} \end{array} \right) = \left(\begin{array}{c} F_{n-1} + F_{n-2} \\ F_{n-1} \end{array} \right) = \left(\begin{array}{c} F_n \\ F_{n-1} \end{array} \right)" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;and in general&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/3.png" alt="\left( \begin{array}{cc} 1 &amp; 1 \\ 1 &amp; 0 \end{array} \right)^{n} \left( \begin{array}{c} 1 \\ 0 \end{array} \right) = \left( \begin{array}{cc} 1 &amp; 1 \\ 1 &amp; 0 \end{array} \right)^{n} \left( \begin{array}{c} F_1 \\ F_0 \end{array} \right) = \left(\begin{array}{c} F_{n + 1} \\ F_n \end{array} \right)" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;The matrix&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/4.png" alt="A = \left(\begin{array}{cc} 1 &amp; 1 \\ 1 &amp; 0 \end{array} \right)" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;has characteristic polynomial&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/blockquote&gt;&lt;/div&gt;

&lt;p&gt;If this polynomial has distinct roots, then &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is
diagonalizable (this is sufficient, but not necessary). Assuming the converse
we have
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.0037em;"&gt;&amp;#0945;&lt;/span&gt;&lt;span class="mclose"&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; for some
&lt;img src="/latex_images/5.png" alt="\alpha \in \mathbb{F}_p" class="latex-img"/&gt;; we can assume
&lt;img src="/latex_images/5.png" alt="\alpha \in \mathbb{F}_p" class="latex-img"/&gt;
since &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.64444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.72777em;vertical-align:-0.08333em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.0037em;"&gt;&amp;#0945;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is
the coefficient of &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.61508em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.61508em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, which means
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.0037em;"&gt;&amp;#0945;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (we are fine with this since
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; odd means that &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.8141079999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; exists). In
order for this to be a root of &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, we must have&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/6.png" alt="0 \equiv 4 \cdot \chi_A\left(2^{-1}\right) \equiv 4 \cdot \left(2^{-2} - 2^{-1} - 1\right) \equiv 1 - 2 - 4 \equiv -5 \bmod{p}." class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;Since &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.716em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.9309999999999999em;vertical-align:-0.215em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8800;&lt;/span&gt;&lt;span class="mord"&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is prime, this is not possible, hence
we reached a contradiction and &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; does not have
a repeated root.&lt;/p&gt;
&lt;p&gt;Thus we may write &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.0037em;"&gt;&amp;#0945;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord mathit"&gt;t&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.05278em;"&gt;&amp;#0946;&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; for
&lt;img src="/latex_images/7.png" alt="\alpha, \beta \in \mathbb{F}_{p^2}" class="latex-img"/&gt; (it's possible
that &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is irreducible over
&lt;img src="/latex_images/0.png" alt="\mathbb{F}_p" class="latex-img"/&gt;, but due to degree considerations it
&lt;strong&gt;must&lt;/strong&gt; split completely over &lt;img src="/latex_images/8.png" alt="\mathbb{F}_{p^2}" class="latex-img"/&gt;.
Using this, we may write&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/9.png" alt="A = P \left(\begin{array}{cc} \alpha &amp; 0 \\ 0 &amp; \beta \end{array} \right) P^{-1}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;for some &lt;img src="/latex_images/10.png" alt="P \in GL_{2} \left(\mathbb{F}_{p^2}\right)" class="latex-img"/&gt;
and so&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/11.png" alt="A^{p^2 - 1} = P \left(\begin{array}{cc} \alpha &amp; 0 \\ 0 &amp; \beta \end{array} \right)^{p^2 - 1} P^{-1} = P \left(\begin{array}{cc} \alpha^{p^2 - 1} &amp; 0 \\ 0 &amp; \beta^{p^2 - 1} \end{array} \right)P^{-1}" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;Since &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.75em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1em;vertical-align:-0.25em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;&amp;#0967;&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:0em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mopen"&gt;(&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mclose"&gt;)&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;span class="mrel"&gt;&amp;#8800;&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; we know
&lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.43056em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.0037em;"&gt;&amp;#0945;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.69444em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord mathit" style="margin-right:0.05278em;"&gt;&amp;#0946;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; are nonzero, hence
&lt;img src="/latex_images/12.png" alt="\alpha^{p^2 - 1} = \beta^{p^2 - 1} = 1 \in \mathbb{F}_{p^2}" class="latex-img"/&gt;.
Thus &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.9393199999999999em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:1.0893199999999998em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;A&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle uncramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;P&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.07847em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;P&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.363em;margin-right:0.05em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle uncramped"&gt;&lt;span class="mord scriptstyle uncramped"&gt;&lt;span class="mord"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.07847em;"&gt;I&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.15em;margin-right:0.05em;margin-left:-0.07847em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and so&lt;/p&gt;
&lt;blockquote class="latex-img"&gt;&lt;img src="/latex_images/13.png" alt="\left(\begin{array}{c} F_p \\ F_{p^2 - 1} \end{array} \right) = \left(\begin{array}{cc} 1 &amp; 1 \\ 1 &amp; 0 \end{array} \right)^{p^2 - 1} \left(\begin{array}{c} 1 \\ 0 \end{array} \right) = I_2 \left( \begin{array}{c} 1 \\ 0 \end{array} \right) = \left( \begin{array}{c} 1 \\ 0 \end{array} \right)" class="latex-img"/&gt;&lt;/blockquote&gt;

&lt;p&gt;so we have &lt;span class="katex"&gt;&lt;span class="katex-inner"&gt;&lt;span class="strut" style="height:0.68333em;"&gt;&lt;/span&gt;&lt;span class="strut bottom" style="height:0.999158em;vertical-align:-0.315828em;"&gt;&lt;/span&gt;&lt;span class="base textstyle uncramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:0.17972000000000002em;margin-right:0.05em;margin-left:-0.13889em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-textstyle scriptstyle cramped"&gt;&lt;span class="mord scriptstyle cramped"&gt;&lt;span class="mord"&gt;&lt;span class="mord mathit"&gt;p&lt;/span&gt;&lt;span class="vlist"&gt;&lt;span style="top:-0.289em;margin-right:0.07142857142857144em;"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="reset-scriptstyle scriptscriptstyle cramped"&gt;&lt;span class="mord"&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mbin"&gt;&amp;#8722;&lt;/span&gt;&lt;span class="mord"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="baseline-fix"&gt;&lt;span class="fontsize-ensurer reset-size5 size5"&gt;&lt;span style="font-size:0em;"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="mrel"&gt;=&lt;/span&gt;&lt;span class="mord"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; in
&lt;img src="/latex_images/0.png" alt="\mathbb{F}_p" class="latex-img"/&gt; as desired.&lt;/p&gt;</summary><category term="Algebra"></category><category term="Fibonacci"></category><category term="Finite Field"></category><category term="Linear Algebra"></category><category term="Math"></category><category term="Number Theory"></category></entry><entry><title>Bridging OAuth 2.0 objects between GData and Discovery</title><link href="/2012/12/bridging-oauth-20-objects-between-gdata.html" rel="alternate"></link><updated>2012-12-24T00:00:00-08:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-12-24:2012/12/bridging-oauth-20-objects-between-gdata.html</id><summary type="html">&lt;p&gt;My colleague
&lt;a href="http://plus.google.com/110554344789668969711"&gt;+Takashi Matsuo&lt;/a&gt; and I recently
gave a &lt;a href="http://www.youtube.com/watch?v=HoUdWBzUZ-M"&gt;talk&lt;/a&gt; about using
&lt;code&gt;OAuth2Decorator&lt;/code&gt; (from the &lt;code&gt;google-api-python-client&lt;/code&gt;
&lt;a href="http://code.google.com/p/google-api-python-client/"&gt;library&lt;/a&gt;) with
request handlers in
&lt;a href="https://developers.google.com/appengine/"&gt;Google App Engine&lt;/a&gt;. Shortly after, a
&lt;a href="http://stackoverflow.com/questions/13981641"&gt;Stack Overflow question&lt;/a&gt;
sprung up asking about the right way to use the decorator and, as a
follow up, if the decorator could be used with the
&lt;a href="https://developers.google.com/google-apps/provisioning/"&gt;Google Apps Provisioning API&lt;/a&gt;.
As I mentioned in my answer,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Google Apps Provisioning API is a
&lt;a href="https://developers.google.com/gdata/docs/2.0/reference"&gt;Google Data API&lt;/a&gt; ...
As a result, you'll need to use the &lt;code&gt;gdata-python-client&lt;/code&gt;
&lt;a href="http://code.google.com/p/gdata-python-client/"&gt;library&lt;/a&gt; to use the
Provisioning API. Unfortunately, you'll need to manually convert from a
&lt;a href="http://code.google.com/p/google-api-python-client/source/browse/oauth2client/client.py?r=efd0ccd31d6c16ddf9f65ba5c31c7033749be0e1#349"&gt;&lt;code&gt;oauth2client.client.OAuth2Credentials&lt;/code&gt; object&lt;/a&gt;
to a
&lt;a href="http://code.google.com/p/gdata-python-client/source/browse/src/gdata/gauth.py?r=cf0208e89433800c713495654774f36d84e894b3#1143"&gt;&lt;code&gt;gdata.gauth.OAuth2Token&lt;/code&gt; object&lt;/a&gt;
to use the same token for either one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead of making everyone and their brother write their own, I thought
I'd take a stab at it and write about it here. The general philosophy I
took was that the token subclass should be 100% based on an
&lt;code&gt;OAuth2Credentials&lt;/code&gt; object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the token constructor simply takes an &lt;code&gt;OAuth2Credentials&lt;/code&gt; object&lt;/li&gt;
&lt;li&gt;the token refresh updates the &lt;code&gt;OAuth2Credentials&lt;/code&gt; object set on the token&lt;/li&gt;
&lt;li&gt;values of the current tokencan be updated directly from the
  &lt;code&gt;OAuth2Credentials&lt;/code&gt; object set on the token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Starting from the top, we'll use two imports:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;httplib2&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;gdata.gauth&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OAuth2Token&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first is needed to refresh an &lt;code&gt;OAuth2Credentials&lt;/code&gt; object
using the mechanics native to &lt;code&gt;google-api-python-client&lt;/code&gt;,
and the second is needed so we may subclass the &lt;code&gt;gdata-python-client&lt;/code&gt; native
token class.&lt;/p&gt;
&lt;p&gt;As I mentioned, the values should be updated directly from an
&lt;code&gt;OAuth2Credentials&lt;/code&gt; object, so in our constructor, we first initialize the
values to &lt;code&gt;None&lt;/code&gt; and then call our update method to actually set the values.
This allows us to write less code, because,
&lt;a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself"&gt;repeating is bad&lt;/a&gt;
(I think someone told me that once?).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OAuth2TokenFromCredentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OAuth2Token&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;
    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OAuth2TokenFromCredentials&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UpdateFromCredentials&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can get away with passing four &lt;code&gt;None&lt;/code&gt;s to the superclass constructor, as it
only has four positional arguments: &lt;code&gt;client_id&lt;/code&gt;, &lt;code&gt;client_secret&lt;/code&gt;, &lt;code&gt;scope&lt;/code&gt;,
and &lt;code&gt;user_agent&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Three of those have equivalents on the &lt;code&gt;OAuth2Credentials&lt;/code&gt; object, but there
is no place for &lt;code&gt;scope&lt;/code&gt; because that part of the token exchange is handled
&lt;a href="https://code.google.com/p/google-api-python-client/source/browse/oauth2client/client.py?r=efd0ccd31d6c16ddf9f65ba5c31c7033749be0e1#1030"&gt;elsewhere&lt;/a&gt;
in the &lt;code&gt;google-api-python-client&lt;/code&gt; library.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;UpdateFromCredentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_id&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_secret&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_agent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_agent&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similarly, the &lt;code&gt;OAuth2Credentials&lt;/code&gt; object only implements the refresh part of
the OAuth 2.0 flow, so only has the token URI, hence &lt;code&gt;auth_uri&lt;/code&gt;, &lt;code&gt;revoke_uri&lt;/code&gt;,
&lt;code&gt;redirect&lt;/code&gt;, and &lt;code&gt;_uri&lt;/code&gt; will not be set either. However, the token URI and the
token data are the same for both.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token_uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token_uri&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refresh_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refresh_token&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, we copy the extra fields which may be set outside of a
constructor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token_expiry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;token_expiry&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_invalid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invalid&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since &lt;code&gt;OAuth2Credentials&lt;/code&gt; doesn't deal with all parts of the OAuth 2.0
process, we disable those methods from &lt;code&gt;OAuth2Token&lt;/code&gt; that do.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_authorize_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;NotImplementedError&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_access_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;NotImplementedError&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;revoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;NotImplementedError&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_extract_tokens&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;NotImplementedError&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, the last method which needs to be implemented is &lt;code&gt;_refresh&lt;/code&gt;,
which should refresh the &lt;code&gt;OAuth2Credentials&lt;/code&gt; object and then update the
current GData token after the refresh. Instead of using the passed in request
object, we use one from &lt;code&gt;httplib2&lt;/code&gt; as we mentioned in imports.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;unused_request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UpdateFromCredentials&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After refreshing the &lt;code&gt;OAuth2Credentials&lt;/code&gt; object, we can update the current
token using the same method called in the constructor.&lt;/p&gt;
&lt;p&gt;Using this class, we can simultaneously call a
&lt;a href="https://developers.google.com/discovery/v1/getting_started#background"&gt;discovery-based API&lt;/a&gt;
and a GData API:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;apiclient.discovery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;gdata.contacts.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ContactsClient&lt;/span&gt;

&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;calendar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;v3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;developerKey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="nd"&gt;@decorator.oauth_required&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;auth_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OAuth2TokenFromCredentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decorator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;contacts_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ContactsClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;auth_token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contacts_client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;contacts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contacts_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_contacts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calendarId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;primary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;decorator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="AppEngine"></category><category term="Decorator"></category><category term="GData"></category><category term="gdata-python-client"></category><category term="Google App Engine"></category><category term="Google Calendar"></category><category term="google-api-python-client"></category><category term="OAuth"></category><category term="OAuth2.0"></category><category term="Python"></category></entry><entry><title>Last to Cross the Finish Line: Part Three</title><link href="/2012/09/last-to-cross-finish-line-part-three.html" rel="alternate"></link><updated>2012-09-10T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-09-10:2012/09/last-to-cross-finish-line-part-three.html</id><summary type="html">&lt;p&gt;Recently, my colleague &lt;a href="https://plus.google.com/115640166224745944209"&gt;+Fred
Sauer&lt;/a&gt; and I gave a tech
talk called "Last Across the Finish Line: Asynchronous
&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview"&gt;Tasks&lt;/a&gt;
with &lt;a href="https://appengine.google.com/"&gt;App Engine&lt;/a&gt;". This is part three in
a three part series where I will share our
&lt;a href="http://www.forbes.com/pictures/ekij45gdh/learnings/#gallerycontent"&gt;learnings&lt;/a&gt;and
give some helpful references to the&lt;a href="https://developers.google.com/appengine/docs/"&gt;App Engine
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the&lt;a href="http://blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-two.html"&gt;previous
post&lt;/a&gt;if
you haven't already.In this section, we'lldefine the&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;PopulateBatch&lt;/span&gt;function
and explore the&lt;a href="https://developers.google.com/appengine/docs/python/ndb/"&gt;ndb
models&lt;/a&gt;and&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/"&gt;Task
Queue&lt;/a&gt;operations
that make it work.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Imports&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Before defining the
&lt;a href="https://developers.google.com/appengine/docs/python/ndb/"&gt;models&lt;/a&gt; and
helper functions in &lt;a href="http://code.google.com/p/gae-last-across-the-finish-line/source/browse/models.py"&gt;&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;models.py&lt;/span&gt;&lt;/a&gt;,
let's first review the imports:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
import jsonfrom google.appengine.api import channelfrom google.appengine.ext.deferred import deferfrom google.appengine.ext import ndb&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Again&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;serialization&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="n"&gt;passing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;defer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;deferred&lt;/span&gt;
&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;deferred&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;
&lt;span class="n"&gt;abstract&lt;/span&gt; &lt;span class="n"&gt;away&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;creation&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;take&lt;/span&gt; &lt;span class="n"&gt;advantage&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;ability&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;defer&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;execution&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Finally&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ndb&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;means&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;interacting&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt; &lt;span class="n"&gt;Engine&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Datastore&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;datastore&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;overview&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;


&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt; &lt;span class="n"&gt;Wrapper&lt;/span&gt; &lt;span class="n"&gt;Built&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Tasks&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;---------------------------------------------------------------------&lt;/span&gt;

&lt;span class="n"&gt;As&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;saw&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;BeginWork&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;
&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;
&lt;span class="n"&gt;two&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bossylobster&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;two&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;units&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;passed&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;PopulateBatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tuples&lt;/span&gt; &lt;span class="n"&gt;containing&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;positional&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
&lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;keep&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;hanging&lt;/span&gt; &lt;span class="nn"&gt;indefinitely&lt;/span&gt; &lt;span class="nn"&gt;due&lt;/span&gt; &lt;span class="nn"&gt;to&lt;/span&gt; &lt;span class="nn"&gt;unseen&lt;/span&gt; &lt;span class="nn"&gt;errors&lt;/span&gt;
&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;implicitly&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="n"&gt;unit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;wrapper&lt;/span&gt; &lt;span class="n"&gt;around&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;calls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;AlwaysComplete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c"&gt;# TODO: Consider failing differently.    pass  finally:    defer(task.Complete)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, we catch any and all errors thrown by our method and
don't retry the method if it fails. In our example, if the call &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;method(*args,
**kwargs)&lt;/span&gt; fails, the data won't be sent through the channel and
the given square will not show up in the quilt. However, since we catch
these exceptions, the batch will complete and the spinner will disappear
with this square still missing.&lt;/p&gt;
&lt;p&gt;This part is likely going to be customized to the specific work
involved, but for our case, we didn't want individual failures to cause
the whole batch to fail. In addition, we implicitly link the work unit
with a special type of task object in the datastore.&lt;/p&gt;
&lt;p&gt;In the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;finally&lt;/span&gt;
section of the error catch, we defer the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;Complete&lt;/span&gt;
method on the task corresponding to this work unit. We defer the call to
this complete method in order to avoid any errors (possibly from a
failed datastore action) that the method may cause. If it were to throw
an error, since &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;AlwaysComplete&lt;/span&gt;
is called in a deferred task, the task would retry and our worker unit
would execute (or fail) again, which is bad if our user interface is not
&lt;a href="http://en.wikipedia.org/wiki/Idempotence#Computer_science_meaning"&gt;idempotent&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Task Model&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;As we saw above, we need a datastore model to represent tasks within a
batch. We start out initially with a model having only one attribute &amp;mdash; a
boolean representing whether or not the task has completed.&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
class BatchTask(ndb.Model):  # Very important that the default value True of &lt;code&gt;indexed&lt;/code&gt; is used here  # since we need to query on BatchTask.completed  completed = ndb.BooleanProperty(default=False)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;As we know, we&amp;#39;ll need to define a &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Complete&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
method in order to use the task in &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;AlwaysComplete&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
but before doing so, we&amp;#39;ll define another method which will put the task
object in the datastore and pass a unit of work to &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;AlwaysComplete&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
  @ndb.transactional  def Populate(self, method, *args, **kwargs):    self.put()    kwargs[&amp;#39;_transactional&amp;#39;] = True    defer(AlwaysComplete, self.key, method, *args, **kwargs)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;Populate&lt;/span&gt;
method, we first put the object in the datastore
&lt;a href="https://developers.google.com/appengine/docs/python/datastore/transactions"&gt;transactionally&lt;/a&gt;by
using the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;ndb.transactional&lt;/span&gt;
decorator. By adding the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;_transactional&lt;/span&gt;
keyword to the keyword arguments, &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;defer&lt;/span&gt;
&lt;a href="http://code.google.com/p/googleappengine/source/browse/trunk/python/google/appengine/ext/deferred/deferred.py?r=277#250"&gt;strips
away&lt;/a&gt;
the underscore and creates a &lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview#Tasks_within_Transactions"&gt;transactional
task&lt;/a&gt;.
By doing this&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"the task is only enqueued &amp;mdash; and guaranteed to be enqueued &amp;mdash; if the
transaction is committed successfully."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We need this deferred task to be enqueued transactionally for
consistency of the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;completed&lt;/span&gt;
boolean attribute. The datastore put in&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;Populate&lt;/span&gt;
uses the default value of &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;False&lt;/span&gt;,
but after &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;Complete&lt;/span&gt;
is called we want to set this boolean to &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;True&lt;/span&gt;.
If this value was not
&lt;a href="https://developers.google.com/appengine/docs/python/datastore/transactions#Isolation_and_Consistency"&gt;consistent&lt;/a&gt;,
we may have a race condition that resulted in a completed task in the
datastore being marked as incomplete. As we'll see later, we rely on
this consistency for a query that will help us determine if our batch is
done.&lt;/p&gt;
&lt;p&gt;To signal that a unit of work has completed, we define the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;Complete&lt;/span&gt;
method on the task object:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
  @ndb.transactional  def Complete(self):    self.completed = True    self.put()    batcher_parent = self.key.parent().get()    defer(batcher_parent.CheckComplete, _transactional=True)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;performs&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;functions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;completed&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;retrieves&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//developers.google.com/appengine/docs/python/ndb/entities)&lt;/span&gt;
&lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;defers&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;CheckComplete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;As&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;PopulateBatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;special&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;
&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//developers.google.com/appengine/docs/python/datastore/entities#Transactions_and_Entity_Groups)&lt;/span&gt;
&lt;span class="n"&gt;containing&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;don&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;until&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;datastore&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;succeeded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;
&lt;span class="n"&gt;defer&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;CheckComplete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;transactionally&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;just&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;AlwaysComplete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Populate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Note&lt;/span&gt;&lt;span class="o"&gt;**:*&lt;/span&gt;&lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;seem&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt;&lt;span class="o"&gt;*&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt;&lt;span class="n"&gt;calls&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;retrieve&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt;&lt;span class="o"&gt;*&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt;&lt;span class="n"&gt;are&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;bandwidth&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;necessary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;However&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;relying&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
&lt;span class="n"&gt;power&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;*&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ndb&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;combination&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="n"&gt;caching&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;memcache&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//developers.google.com/appengine/docs/python/memcache/overview),&lt;/span&gt;
&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;gets&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;incur&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;cost&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;trip&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;datastore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Batch&lt;/span&gt; &lt;span class="n"&gt;Parent&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;---------------------------------------------------------&lt;/span&gt;

&lt;span class="n"&gt;Given&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;rely&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;BatchTask&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;special&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;datastore&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;act&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Since&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;going&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;
&lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_tasks&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_loaded&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;signal&lt;/span&gt; &lt;span class="n"&gt;whether&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;begun&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt;
&lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="n"&gt;circuit&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;CheckComplete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;guard&lt;/span&gt; &lt;span class="n"&gt;against&lt;/span&gt; &lt;span class="n"&gt;premature&lt;/span&gt; &lt;span class="n"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;TaskBatcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ndb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;all_tasks_loaded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ndb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BooleanProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indexed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check if a batch is complete, we first determine if all tasks have
loaded. If that is the case, we perform an &lt;a href="https://developers.google.com/appengine/docs/python/datastore/queries#Ancestor_Queries"&gt;ancestor
query&lt;/a&gt;
that simply attempts to fetch the first worker task in the entity group
which has not yet completed. If such a task does not exist, we know the
batch has completed, and so start to clean up the task and batch parent
objects from the datastore.&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
  def CheckComplete(self):    # Does not need to be transactional since it doesn't change data    session_id = self.key.id()    if self.all_tasks_loaded:      incomplete = BatchTask.query(BatchTask.completed == False,                                   ancestor=self.key).fetch(1)      if len(incomplete) == 0:        channel.send_message(session_id, json.dumps({'status': 'complete'}))        self.CleanUp()        return    channel.send_message(session_id, json.dumps({'status': 'incomplete'}))&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;again&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;utmost&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;ensure&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;goog_842417011&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;consistency&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;goog_842417012&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.blogger.com/)by using an&lt;/span&gt;
&lt;span class="n"&gt;ancestor&lt;/span&gt; &lt;span class="nl"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;There are scenarios in which any pending modifications are guaranteed&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;completely&lt;/span&gt; &lt;span class="n"&gt;applied&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;ancestor&lt;/span&gt; &lt;span class="n"&gt;queries&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;High&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Replication&lt;/span&gt; &lt;span class="n"&gt;datastore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt; &lt;span class="n"&gt;cases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;consistent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;After&lt;/span&gt; &lt;span class="n"&gt;checking&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;communicate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;rely&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;PopulateBatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;
&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;instances&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;TaskBatcher&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="n"&gt;corresponding&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;datastore&lt;/span&gt;
&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;send&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;incomplete&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;correctly&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt;
&lt;span class="n"&gt;messages&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;onmessage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;handler&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defined&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;
&lt;span class="n"&gt;two&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-two.html))&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="nl"&gt;updates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="n"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;setStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;squareIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;squareId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;#&lt;/span&gt;&lt;span class="n"&gt;square&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;squareIndex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squareId&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just as the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;setStatus&lt;/span&gt;
method revealed the progress spinner when work began, it will remove the
spinner when the status is complete.&lt;/p&gt;
&lt;p&gt;We'll next define the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;CleanUp&lt;/span&gt;
method that is called when the batch is complete:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
  def CleanUp(self):    children = BatchTask.query(ancestor=self.key).iter(keys_only=True)    ndb.delete_multi(children)    self.key.delete()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This method uses the key from the batch parent to perform another
ancestor query and creates an object which can [iterate over all the
keys](https://developers.google.com/appengine/docs/python/ndb/queries#iterators)
of thetasks in the batch. By using the&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;delete\_multi&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;function
provided by&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;ndb&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
we are able to delete these in parallel rather than waiting for each to
complete. After deleting all the tasks, the batcher deletes itself and
clean up is done. Since the &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;TaskBatcher.CheckComplete&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
spawns&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CleanUp&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;in
a deferred task,if the deletes time out, the task will try again until
all tasks in the batch are deleted.

As a final method on &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;TaskBatcher&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
we define something similar to &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;BatchTask.Populate&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
that is triggered after all workers in the batch have been added:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
  @ndb.transactional  def Ready(self):    self.all_tasks_loaded = True    self.put()    self.CheckComplete()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This simply signals that all tasks from the batch have loaded by setting
&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;all_tasks_loaded&lt;/span&gt;
to &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;True&lt;/span&gt;
and calls &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;CheckComplete&lt;/span&gt;
in case all the tasks in the batch have already completed. This check is
necessary because if all worker tasks complete before &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;all_tasks_loaded&lt;/span&gt;
is &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;True&lt;/span&gt;,
then none of the checks initiated by those tasks would signal
completion. We use a transaction to avoid a race condition with the
initial datastore put &amp;mdash; a put which is a signal that all tasks have
&lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; loaded.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Populating a Batch&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;With our two models in hand, we are finally ready to define the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;PopulateBatch&lt;/span&gt;
function used (in &lt;a href="http://blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-two.html"&gt;part
two&lt;/a&gt;)
by the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;BeginWork&lt;/span&gt;
handler. We want users of this function to be able to call it directly,
but don't want it to block the process they call it in, so we wrap the
real function in a function that will simply defer the work:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
def PopulateBatch(session_id, work):  defer(_PopulateBatch, session_id, work)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;In the actual function, we first create a &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;TaskBatcher&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
object using the session ID as the key and put it into the datastore
using the default value of &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;False&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
for &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;all\_tasks\_loaded&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.
Since this is a single synchronous&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;put&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,it
blocks the thread of execution and we can be sure our parent is in the
datastore before members of the entity group (the task objects) are
created.

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
def _PopulateBatch(session_id, work):  batcher_key = ndb.Key(TaskBatcher, session_id)  batcher = TaskBatcher(key=batcher_key)  batcher.put()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After doing this, we loop through all the 3-tuples in the passed in
batch of &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;work&lt;/span&gt;.
For each unit of work, we create a task using the batcher as parent and
then call the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;Populate&lt;/span&gt;
method on the task using the method, positional arguments and keyword
arguments provided in the unit of work.&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
  for method, args, kwargs in work:    task = BatchTask(parent=batcher_key)    task.Populate(method, &lt;em&gt;args, &lt;/em&gt;*kwargs)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Finally, to signal that all tasks in the batch have been added, we call
the &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Ready&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
method on the batch parent:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
  batcher.Ready()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;This approach can cause performance issues as the number of
tasks grows, since contentious puts within the entity group can cause
task completions to stall or retry. I (or my colleagues) will be
following up with two posts on the following topics:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using task tagging and pull queues to achieve a similar result, but
    reducing contention&lt;/li&gt;
&lt;li&gt;exploring ways to extend this model to a hierarchical model where
    tasks may have subtasks&lt;/li&gt;
&lt;/ul&gt;</summary><category term="AppEngine"></category><category term="Deferred Library"></category><category term="Google App Engine"></category><category term="Google Codesite"></category><category term="Javascript"></category><category term="jQuery"></category><category term="Python"></category><category term="Task Queue API"></category></entry><entry><title>Last to Cross the Finish Line: Part Two</title><link href="/2012/08/last-to-cross-finish-line-part-two.html" rel="alternate"></link><updated>2012-08-29T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-08-29:2012/08/last-to-cross-finish-line-part-two.html</id><summary type="html">&lt;p&gt;Recently, my colleague&lt;a href="https://plus.google.com/115640166224745944209"&gt;+Fred
Sauer&lt;/a&gt;and I gave a tech
talk called "Last Across the Finish Line:
Asynchronous&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview"&gt;Tasks&lt;/a&gt;with&lt;a href="https://appengine.google.com/"&gt;App
Engine&lt;/a&gt;".This is part two in a three
part series where I will share
our&lt;a href="http://www.forbes.com/pictures/ekij45gdh/learnings/#gallerycontent"&gt;learnings&lt;/a&gt;and
give some helpful references to the&lt;a href="https://developers.google.com/appengine/docs/"&gt;App Engine
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="http://blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-one.html"&gt;previous
post&lt;/a&gt;
if you haven't already.In this section, we'll cover the two &lt;a href="https://developers.google.com/appengine/docs/python/tools/webapp/running"&gt;WSGI
handlers&lt;/a&gt;in
&lt;a href="http://code.google.com/p/gae-last-across-the-finish-line/source/browse/main.py"&gt;&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;main.py&lt;/span&gt;&lt;/a&gt;
serving requests for our application and the client side code that
communicates with our application.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Imports&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Before defining the handlers, let's first review the imports:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
import jsonfrom google.appengine.api import channelfrom google.appengine.api import usersfrom google.appengine.ext.webapp.util import login_requiredimport webapp2from webapp2_extras import jinja2from display import RandomRowColumnOrderingfrom display import SendColorfrom models import PopulateBatch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;serialization&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Specific&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt; &lt;span class="n"&gt;Engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Channel&lt;/span&gt;
&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;\&lt;span class="n"&gt;_required&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;webapp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;utilmodule&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;authenticating&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gettingstartedpython27&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usingwebapp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;
&lt;span class="n"&gt;creating&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;WSGI&lt;/span&gt;
&lt;span class="n"&gt;Handlers&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;webapp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;improved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appspot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;guide&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;developers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gettingstartedpython27&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;templates&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;templating&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Finally&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;four&lt;/span&gt; &lt;span class="nn"&gt;functions&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="nn"&gt;two&lt;/span&gt; &lt;span class="nn"&gt;other&lt;/span&gt; &lt;span class="nn"&gt;modules&lt;/span&gt; &lt;span class="nn"&gt;defined&lt;/span&gt;
&lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;From&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gae&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;across&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SendColor&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;
&lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;explored&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;part&lt;/span&gt; &lt;span class="n"&gt;oneand&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;RandomRowColumnOrdering&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;whichgenerates&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;possible&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;pairs&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;From&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;yet&lt;/span&gt; &lt;span class="n"&gt;undiscussed&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gae&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;across&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;PopulateBatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt;
&lt;span class="n"&gt;spawns&lt;/span&gt; &lt;span class="n"&gt;workers&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;carry&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Handlers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;-----------------------------------------------&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;defines&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;
&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AJAX&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wikipedia&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wiki&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Ajax_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;programming&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;handler&lt;/span&gt;
&lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;begin&lt;/span&gt; &lt;span class="n"&gt;spawning&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;workers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;templates&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;the&lt;/span&gt; &lt;span class="nn"&gt;template&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gae&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;across&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;browse&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;templates&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;templates&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webapp2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;RenderResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="n"&gt;jinja2_renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_jinja2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="n"&gt;rendered_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jinja2_renderer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rendered_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="nd"&gt;@login_required&lt;/span&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_current_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RenderResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;main.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;table_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pixels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;get&lt;/span&gt;
&amp;mdash; the actual handler serving the
&lt;a href="http://en.wikipedia.org/wiki/GET_(HTTP)#Request_methods"&gt;GET&lt;/a&gt; request
from the browser &amp;mdash; we use the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;login_required&lt;/span&gt;
decorator to make sure the user is signed in, and then create a channel
for message passing using the ID of the signed in user. The template
takes an HTML ID, rows and columns to create an HTML table as the
"quilt" that the user will see. We pass the created token for the
channel, an HTML ID for the table and the rows and columns to the
template by simply specifying them as keyword arguments.&lt;/p&gt;
&lt;p&gt;For the handler which will spawn the workers, we use &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;RandomRowColumnOrdering&lt;/span&gt;
to generate row, column pairs. Using each pair along with the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;SendColor&lt;/span&gt;
function and the user ID (as a proxy for session ID) for message
passing, we add a unit of work to the batch&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
class BeginWork(webapp2.RequestHandler):  # Can't use login_required decorator here because it is not  # supported for POST requests  def post(self):    response = {'batch_populated': False}    try:      # Will raise an AttributeError if no current user      user_id = users.get_current_user().user_id()      # TODO: return 400 if not logged in       work = []      for row, column in RandomRowColumnOrdering(8, 8):        args = (row, column, user_id)        work.append((SendColor, args, {}))  # No keyword args      PopulateBatch(user_id, work)      response['batch_populated'] = True    except:      # TODO: Consider logging traceback.format_exception(*sys.exc_info()) here      pass    self.response.write(json.dumps(response))&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;Finally&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;routing&lt;/span&gt; &lt;span class="nt"&gt;applications&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;our&lt;/span&gt; &lt;span class="nt"&gt;app&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;we&lt;/span&gt; &lt;span class="nt"&gt;define&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;webapp2&lt;/span&gt;&lt;span class="nc"&gt;.WSGIApplication&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/begin-work&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BeginWork&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                               &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MainPage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;                              &lt;span class="nt"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;True&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and specify&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
handlers:- url: /.*  script: main.app&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;in &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;app.yaml&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;;
to use WSGI apps, the App Engine runtime must be &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;python27&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.


&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Client Side Javascript and jQuery&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
------------------------------------------------------------------------

In thetemplate[&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;main.html&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;](http://code.google.com/p/gae-last-across-the-finish-line/source/browse/templates/main.html)we
use [jQuery](http://jquery.com/)to make AJAX requests and manage the
CSS for each square in our &amp;quot;quilt&amp;quot;. We also define some other Javascript
functions for interacting with the App Engine Channel API. In the
HTML&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\&lt;span class="nt"&gt;&amp;lt;head&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;element
we load the [Channel Javascript
API](https://developers.google.com/appengine/docs/python/channel/javascript),
and in the &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;element
we open a channel using the &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;
&lt;span class="nv"&gt;token&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; passed in to the template:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/_ah/channel/jsapi&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;   channel = new goog.appengine.Channel(&amp;#39;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;token&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&amp;#39;);   socket = channel.open();   socket.onerror = function() { console.log(&amp;#39;Socket error&amp;#39;); };   socket.onclose = function() { console.log(&amp;#39;Socket closed&amp;#39;); };  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition to &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;onerror&lt;/span&gt;
and &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;onclose&lt;/span&gt;,
we define more complex functions for the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;onopen&lt;/span&gt;
and &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;onmessage&lt;/span&gt;
callbacks.&lt;/p&gt;
&lt;p&gt;First, when the socket has been opened, we send a POST request to &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;/begin-work&lt;/span&gt;
to signal that the channel is ready for communication. If the response
indicates that the batch of workers has been initialized successfully,
we call a method &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;setStatus&lt;/span&gt;
which will reveal the progress spinner:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
socket.onopen = function() {  $.post('/begin-work', function(data) {    var response = JSON.parse(data);    if (response.batch_populated) {      setStatus('Loading began');    }  });}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;As we defined in part one, each &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SendColor&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
worker sends back a
[message](https://developers.google.com/appengine/docs/python/channel/overview#Life_of_a_Typical_Channel_Message)
along the channel representing a row, column pair and a color. On
message receipt, we use these messages to set the background color of
the corresponding square to the color provided:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
socket.onmessage = function(msg) {  var response = JSON.parse(msg.data);  var squareIndex = 8*response.row + response.column;  var squareId = &amp;#39;#square&amp;#39; + squareIndex.toString();  $(squareId).css(&amp;#39;background-color&amp;#39;, response.color);}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see from &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;squareId&lt;/span&gt;,
each square in the table generated by the template hasan HMTL ID so we
can specifically target it.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Next...&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;In the &lt;a href="http://blog.bossylobster.com/2012/09/last-to-cross-finish-line-part-three.html"&gt;final
post&lt;/a&gt;,
we'll define the &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;PopulateBatch&lt;/span&gt;
function and explore the &lt;a href="https://developers.google.com/appengine/docs/python/ndb/"&gt;ndb
models&lt;/a&gt; and
&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/"&gt;Task
Queue&lt;/a&gt;
operations that make it work.&lt;/p&gt;</summary><category term="AppEngine"></category><category term="Deferred Library"></category><category term="Google App Engine"></category><category term="Google Codesite"></category><category term="Javascript"></category><category term="jQuery"></category><category term="Python"></category><category term="Task Queue API"></category></entry><entry><title>Last to Cross the Finish Line: Part One</title><link href="/2012/08/last-to-cross-finish-line-part-one.html" rel="alternate"></link><updated>2012-08-27T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-08-27:2012/08/last-to-cross-finish-line-part-one.html</id><summary type="html">&lt;p&gt;Recently, my colleague &lt;a href="https://plus.google.com/115640166224745944209"&gt;+Fred
Sauer&lt;/a&gt; and I gave a tech
talk called "Last Across the Finish Line: Asynchronous
&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview"&gt;Tasks&lt;/a&gt;
with &lt;a href="https://appengine.google.com/"&gt;App Engine&lt;/a&gt;". This is part one in a
three part series where I will share our
&lt;a href="http://www.forbes.com/pictures/ekij45gdh/learnings/#gallerycontent"&gt;learnings&lt;/a&gt;and
give some helpful references to the&lt;a href="https://developers.google.com/appengine/docs/"&gt;App Engine
documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Intro&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Before I dive in, a quick overview of our approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"Fan out; Fan in" First spread tasks over independent workers; then
    gather the results back together&lt;/li&gt;
&lt;li&gt;Use task queues to perform background work in parallel&lt;ul&gt;
&lt;li&gt;Tasks have built-in retries&lt;/li&gt;
&lt;li&gt;Can respond quickly to the client, making UI more responsive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Operate asynchronously when individual tasks can be executed
    independently, hence can be run concurrently&lt;ul&gt;
&lt;li&gt;If tasks are too work intensive to run synchronously, (attempt
    to) break work into small independent pieces&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Break work into smaller tasks, for example:&lt;ul&gt;
&lt;li&gt;rendering media (sounds, images, video)&lt;/li&gt;
&lt;li&gt;retrieving and parsing data from an external service (Google
    Drive, Cloud Storage, GitHub, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keep track of all workers; notify client when work is complete&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before talking about the sample, let's check it out in action:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;

&lt;/div&gt;

&lt;p&gt;We are randomly generating a color in a worker and sending it back to
the client to fill in a square in the "quilt". (Thanks to &lt;a href="https://plus.google.com/103073491679741548297"&gt;+Iein
Valdez&lt;/a&gt; for this term.)
In this example, think of each square as a (most likely more complex)
compute task.&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Application Overview&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;The
&lt;a href="https://github.com/GoogleCloudPlatform/appengine-last-across-the-finish-line-python"&gt;application&lt;/a&gt;has
a simple structure:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
gae-last-across-the-finish-line/|-- app.yaml|-- display.py|-- main.py|-- models.py+-- templates/       +-- main.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;We&amp;#39;ll inspect each of the Python modules &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;display.py&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;main.py&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
and &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;models.py&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;individually
and explore how they interact with one another. In addition to this,
we&amp;#39;ll briefly inspect the HTML and Javascript contained in the template
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;main.html&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
to understand how the workers pass messages back to the client.

In this post, I will explain the actual background work we did and
briefly touch on the methods for communicating with the client, but
won&amp;#39;t get into client side code or the generic code for running the
workers and watching them all as they cross the finish line. In the
second post, we&amp;#39;ll examine the client side code and in the third, we&amp;#39;ll
discuss the models that orchestrate the work.

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Workers&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
----------------------------------------------

These worker methods are defined in[&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;display.py&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;](http://code.google.com/p/gae-last-across-the-finish-line/source/browse/display.py).
To generate the random colors, we simply choose a hexadecimal digit six
different times and throw a &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\#&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
on at the beginning:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
import randomHEX_DIGITS = &amp;#39;0123456789ABCDEF&amp;#39;def RandHexColor(length=6):  result = [random.choice(HEX_DIGITS) for _ in range(length)]  return &amp;#39;#&amp;#39; + &amp;#39;&amp;#39;.join(result)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;RandHexColor&lt;/span&gt;
in hand, we define a worker that will take a row and column to be
colored and a session ID that will identify the client requesting the
work. This worker will generate a random color and then send it to the
specified client along with the row and column.To pass messages to the
client, we use the &lt;a href="https://developers.google.com/appengine/docs/python/channel/"&gt;Channel
API&lt;/a&gt;and
serialize our messages using the &lt;a href="http://docs.python.org/library/json.html"&gt;&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;json&lt;/span&gt;&lt;/a&gt;
library in Python.&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
import jsonfrom google.appengine.api import channeldef SendColor(row, column, session_id):  color = RandHexColor(length=6)  color_dict = {'row': row, 'column': column, 'color': color}  channel.send_message(session_id, json.dumps(color_dict))
~~~~&lt;/p&gt;
&lt;h2&gt;&lt;span style="font-size: large;"&gt;Next...&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;In the &lt;a href="http://blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-two.html"&gt;next
post&lt;/a&gt;,
we'll explore the &lt;a href="https://developers.google.com/appengine/docs/python/tools/webapp/running"&gt;WSGI
handlers&lt;/a&gt;
that run the application and the client side code that handles the
messages from the workers.&lt;/p&gt;</summary><category term="AppEngine"></category><category term="Deferred Library"></category><category term="Google App Engine"></category><category term="Google Codesite"></category><category term="Javascript"></category><category term="Python"></category><category term="Task Queue API"></category></entry><entry><title>A Decorator for App Engine Deferred Tasks</title><link href="/2012/08/a-decorator-for-appengine-deferred-tasks.html" rel="alternate"></link><updated>2012-08-19T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-08-19:2012/08/a-decorator-for-appengine-deferred-tasks.html</id><summary type="html">&lt;p&gt;I happen to be a big fan of the &lt;a href="https://developers.google.com/appengine/articles/deferred"&gt;deferred
library&lt;/a&gt; for
both Python runtimes in &lt;a href="https://developers.google.com/appengine/"&gt;Google App
Engine&lt;/a&gt;. If an application
needs to queue up work, breaking the work into easy to understand units
by writing worker methods and then deferring the work into tasks is a
breeze using the deferred library. For the majority of cases, if fine
grained control over the method of execution is not needed, using the
deferred library is a great (and in my opinion, the correct)
abstraction.&lt;/p&gt;
&lt;p&gt;Maybe I am just biased because I have made a few
&lt;a href="http://blog.bossylobster.com/2012/03/where-have-i-been.html"&gt;changes&lt;/a&gt;
to the deferred library over the past few months? One such change I made
added a
&lt;a href="http://code.google.com/p/googleappengine/issues/detail?id=6412"&gt;feature&lt;/a&gt;
that allows a task to fail once without having an impact on subsequent
retries; this can be accomplished by raising a &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;SingularTaskFailure&lt;/span&gt;.
Over this weekend, I found that I wanted to use this feature for a
special type* of worker. Since I wanted to utilize this unique
exception, I wanted to make sure that this worker &lt;strong&gt;&lt;em&gt;only&lt;/em&gt;&lt;/strong&gt; ran in a
deferred task.&lt;/p&gt;
&lt;p&gt;Initially I thought I was lost, since any
&lt;a href="http://docs.python.org/library/pickle.html"&gt;pickled&lt;/a&gt; method wouldn't
directly have access to the &lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview-push#Task_Request_Headers"&gt;task queue specific
headers&lt;/a&gt;from
the request. But luckily, many of these headers persist as &lt;a href="http://en.wikipedia.org/wiki/Environment_variable"&gt;environment
variables&lt;/a&gt;, so can be
accessed via &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;os.environ&lt;/span&gt;
or &lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;os.getenv&lt;/span&gt;,
yippee! Being a good little (Python) boy, I decided to abstract this
requirement into a
&lt;a href="http://stackoverflow.com/questions/739654/understanding-python-decorators#1594484"&gt;decorator&lt;/a&gt;
and let the function do it's own work in peace.&lt;/p&gt;
&lt;p&gt;Upon realizing the usefulness of such a decorator, I decided to write
about it, so here it is:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
import functoolsimport osfrom google.appengine.ext.deferred import deferfrom google.appengine.ext.deferred.deferred import _DEFAULT_QUEUE as DEFAULT_QUEUEfrom google.appengine.ext.deferred.deferred import _DEFAULT_URL as DEFERRED_URLQUEUE_KEY = 'HTTP_X_APPENGINE_QUEUENAME'URL_KEY = 'PATH_INFO'def DeferredWorkerDecorator(method):  @functools.wraps(method)  def DeferredOnlyMethod(*args, &lt;strong&gt;kwargs):    path_info = os.environ.get(URL_KEY, '')    if path_info != DEFERRED_URL:      raise EnvironmentError('Wrong path of execution: {}'.format(path_info))    queue_name = os.environ.get(QUEUE_KEY, '')    if queue_name != DEFAULT_QUEUE:      raise EnvironmentError('Wrong queue name: {}'.format(queue_name))    return method(*args, &lt;/strong&gt;kwargs)  return DeferredOnlyMethod&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This decorator first checks if the environment variable &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;PATH\_INFO&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
is set to the default value for the deferred queue: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/\_ah/queue/deferred&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.
If this is not the case (or if the environment variable is not set), an
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;EnvironmentError&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
is raised. Then the environment variable &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;HTTP\_X\_APPENGINE\_QUEUENAME&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
is checked against the name of the default queue: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;default&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.
Again, if this is incorrect or unset, an &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: Courier New, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;EnvironmentError&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;is
raised. If both these checks pass, the decorated method is called with
its arguments and the value is returned.

To use this decorator:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
import timefrom google.appengine.ext.deferred import SingularTaskFailure@DeferredWorkerDecoratordef WorkerMethod():  if too_busy():    time.sleep(30)    raise SingularTaskFailure   # do workWorkerMethod()  # This will fail with an EnvironmentErrordefer(WorkerMethod)  # This will perform the work, but in it&amp;#39;s own task
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In case you want to extend this, here is a more "complete" list of some
helpful values that you may be able to retrieve from environment
variables:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
HTTP_X_APPENGINE_TASKRETRYCOUNTHTTP_X_APPENGINE_QUEUENAMEHTTP_X_APPENGINE_TASKNAMEHTTP_X_APPENGINE_TASKEXECUTIONCOUNTHTTP_X_APPENGINE_TASKETAHTTP_X_APPENGINE_COUNTRYHTTP_X_APPENGINE_CURRENT_NAMESPACEPATH_INFO
~~~~&lt;/p&gt;
&lt;p&gt;*&lt;strong&gt;Specialized Worker&lt;/strong&gt;:&lt;em&gt;I had two different reasons to raise a&lt;/em&gt;&lt;span
style="color: lime; font-family: Courier New, Courier, monospace;"&gt;SingularTaskFailure&lt;/span&gt;&lt;em&gt;in
my worker. First, I was polling for resources that may not have been
online, so wanted the task to sleep and then restart (after raising the
one time failure). Second, I was using a special sentinel in the
datastore to determine if the current user had any other job in
progress. Again, I wanted to sleep and try again until the current
user's other job had completed.&lt;/em&gt;&lt;/p&gt;</summary><category term="AppEngine"></category><category term="Decorator"></category><category term="Deferred Library"></category><category term="Environment Variables"></category><category term="Google App Engine"></category><category term="Python"></category><category term="Task Queue API"></category></entry><entry><title>Life of π: Continued Fractions and Infinite Series</title><link href="/2012/05/life-of-continued-fractions-and.html" rel="alternate"></link><updated>2012-05-17T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-05-17:2012/05/life-of-continued-fractions-and.html</id><summary type="html">&lt;p&gt;This is from a talk I gave to the &lt;a href="http://www.math.ucsc.edu/"&gt;UC Santa Cruz
Math&lt;/a&gt; Club back in February. I have had the
slides &lt;a href="http://brucefong.files.wordpress.com/2008/09/cluttered_desk.jpg"&gt;cluttering my
desk&lt;/a&gt;
since I gave the talk as a reminder of putting them up on the web, and
today I finally cleaned them off!&lt;/p&gt;
&lt;p&gt;An interested tidbit about these slides: I gave the &lt;a href="http://www.math.lsa.umich.edu/mathclub/fall2008/103008.pdf"&gt;same
talk&lt;/a&gt; one
other time as an
&lt;a href="http://www.math.lsa.umich.edu/mathclub/"&gt;undergraduate&lt;/a&gt;. As an
undergraduate I gave the talk the day after a root canal. This February
(at UCSC), one day after the talk I also had a root canal. What's the
moral of the story? Don't give this talk.&lt;/p&gt;
&lt;p&gt;No seriously, don't give this talk. Though the fact is cool and the math
is not too bad to grasp, the stuff from slides 106 to 113 goes way over
an audience's collective head just because they have &lt;a href="http://ellay2013.files.wordpress.com/2009/09/sleeping_in_class.jpg"&gt;stopped paying
attention&lt;/a&gt;
at that point. Too many variables!&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;div id="__ss_12977566" style="width: 680px;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.slideshare.net/bossylobster/life-of-continued-fractions-and-infinite-series" title="Life of &amp;amp;#0960;: Continued Fractions and Infinite Series"&gt;Life of &amp;#0960;: Continued Fractions and Infinite
Series&lt;/a&gt;&lt;/strong&gt;
&lt;div style="padding: 5px 0 12px;"&gt;&lt;/p&gt;
&lt;p&gt;View more &lt;a href="http://www.slideshare.net/"&gt;presentations&lt;/a&gt; from
&lt;a href="http://www.slideshare.net/bossylobster"&gt;bossylobster&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;</summary><category term="Analysis"></category><category term="Continued Fractions"></category><category term="Math"></category><category term="Pi"></category><category term="Tangent"></category></entry><entry><title>Reverse Calculating An Interest Rate</title><link href="/2012/05/reverse-calculating-interest-rate.html" rel="alternate"></link><updated>2012-05-15T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-05-15:2012/05/reverse-calculating-interest-rate.html</id><summary type="html">&lt;p&gt;I was recently playing around with some loan data and only happened to
have the term (or length, or duration) of the loan, the amount of the
recurring payment (in this case monthly) and the remaining principal
owed on the loan. I figured there was an easy way to get at the interest
rate, but wasn't sure how. After some badgering from my coworker
&lt;a href="https://plus.google.com/104679465567407024302"&gt;+Paul&lt;/a&gt;, I searched the
web and found a
&lt;a href="http://www.calcamo.net/loancalculator/quickcalculations/loan-rate.php5"&gt;tool&lt;/a&gt;
from &lt;a href="http://www.calcamo.net/"&gt;CALCAmo&lt;/a&gt;(a site just for calculating
amortizations).&lt;/p&gt;
&lt;p&gt;Problem solved, right? Wrong. I wanted to know why; I had to &lt;a href="http://t.qkme.me/35co7h.jpg"&gt;go
deeper&lt;/a&gt;. So I did a bit of math and a bit
of programming and I was where I needed to be. I'll break the following
down into parts before going on full steam.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Break down the amortization schedule in terms of the variables we
    have and the one we want&lt;/li&gt;
&lt;li&gt;Determine a function we want to find zeroes of&lt;/li&gt;
&lt;li&gt;Write some code to implement the Newton-Raphson method&lt;/li&gt;
&lt;li&gt;Utilize the Newton-Raphson code to find an interest rate&lt;/li&gt;
&lt;li&gt;Bonus: Analyze the function to make sure we are right&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: large;"&gt;Step I: Break Down the &lt;a href="http://en.wikipedia.org/wiki/Amortization_schedule"&gt;Amortization
Schedule&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We can do this using the series \(\left\{P_i\right\}_i\) of
principal owed, which varies over time and will go to zero once paid
off. In this series, \(P_0\) is the principal owed currently and
\(P_i\) is the principal owed after \(i\) payments have been made.
(Assuming monthly payments, this will be after \(i\) months.) If the
term is \(T\) periods, then we have \(P_T = 0\).&lt;/p&gt;
&lt;p&gt;We have already introduced the term (\(T\)); we also need the value
ofthe recurring (again, usually monthly) payment \(R\), the interest
rate \(r\) and the initial principal owed \(P_0 = P\).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Time-Relationship between Principal Values&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If after \(i\) periods, \(P_i\) is owed, then after one period has
elapsed, we will owe \(P_i \cdot m\) where \(m = m(r)\) is some
multiplier based on the length of the term. For example if each period
is one month, then we divide our rate by \(12\) for the interest and
add \(1\) to note that we are adding to existing principal: \[m(r) =
1 + \frac{r}{12}.\] In addition to the interest, we will have paid off
\(R\) hence \[P_{i + 1} = P_i \cdot m - R.\] &lt;strong&gt;Formula for
\(P_i\)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using this, we can actually determine \(P_i\) strictly in terms of
\(m, R\) and \(P\). First, note that \[P_2 = P_1 \cdot m - R =
(P_0 \cdot m - R) \cdot m - R = P \cdot m\^2 - R(m + 1)\] since
\(P_0 = P\). We can show inductively that \[P_i = P \cdot m\^i - R
\cdot \sum_{j = 0}\^{i - 1} m\^j.\] We already have the base case
\(i = 1\), by definition. Assuming it holds for \(i\), we see that
\[P_{i + 1} = P_i \cdot m - R = m \cdot \left(P \cdot m\^i - R
\cdot \sum_{j = 0}\^{i - 1} m\^j\right) - R =P \cdot m\^{i + 1} -
R \cdot \sum_{j = 1}\^{i} m\^j - R,\] and our induction is complete.
(We bump the index \(j\) since we are multiplying each \(m\^j\) by
\(m\).)
Each term in the series is related to the previous one (except
\(P_0\), since time can't be negative in this case).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: large;"&gt;Step II: Determine a Function we want
to find Zeroes of&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since we know \(P_T = 0\) and \(P_T = P \cdot m\^T - R \cdot
\sum_{j = 0}\^{T - 1} m\^j\), we actually have a polynomial in place
that will let us solve for \(m\) and in so doing, solve for \(r\).&lt;/p&gt;
&lt;p&gt;To make our lives a tad easier, we'll do some rearranging. First, note
that \[\sum_{j = 0}\^{T - 1} m\^j =m\^{T - 1} + \cdots + m + 1 =
\frac{m\^T - 1}{m - 1}.\] We calculate this sum of a geometric series
here, but I'll just refer you to the &lt;a href="http://en.wikipedia.org/wiki/Geometric_series"&gt;Wikipedia
page&lt;/a&gt; instead. With this
reduction we want to solve \[0 =P \cdot m\^T - R \cdot \frac{m\^T -
1}{m - 1} \LongleftrightarrowP \cdot m\^T \cdot (m - 1) =R
\cdot(m\^T - 1).\] With that, we have accomplished Step II, we have
found a function (parameterized by \(P, T\) and \(R\) which we can
use zeroes from to find our interest rate: \[f_{P, T, R}(m) =P \cdot
m\^T \cdot (m - 1) -R \cdot(m\^T - 1) = P \cdot m\^{T + 1} - (P +
R) \cdot m\^T + R.\] &lt;strong&gt;&lt;span style="font-size: large;"&gt;Step III:Write
some code to implement the &lt;a href="http://en.wikipedia.org/wiki/Newton's_method"&gt;Newton-Raphson
method&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We use theNewton-Raphson method to get super-duper-close to a zero of
the function.For in-depth coverage, see the Wikipedia page on the
Newton-Raphson method, but I'll give some cursory coverage below. The
methods used to show that a fixed point is found are not necessary for
the intuition behind the method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intuition behind the method&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For the intuition, assume we know (and can compute) a function \(f\),
its derivative \(f'\) and a value \(x\). Assume there is some zero
\(y\) nearby \(x\). Since they are close, we can approximate the
slope of the line between the points \((x, f(x)\) and\((y, f(y)\)
with the derivative nearby. Since we know \(x\), we use \(f'(x)\)
and intuit that \[f'(x) = \text{slope} = \frac{f(y) - f(x)}{y - x}
\Rightarrow y - x = \frac{f(y) - f(x)}{f'(x)}.\] But, since we know
that \(y\) is a zero, \(f(y) - f(x) = -f(x)\) hence \[y - x =
\frac{-f(x)}{f'(x)} \Rightarrow y = x - \frac{f(x)}{f'(x)}.\] Using
this method, one can start with a given value \(x_0 = x\) and compute
better and better approximations of a zero via the iteration above that
determines \(y\). We use a sequence to do so: \[x_{i + 1} = x_i -
\frac{f(x_i)}{f'(x_i)}\] and stop calculating the \(x_i\) either
after \(f(x_i)\) is below a preset threshold or after the fineness of
the approximation \(\left|x_i - x_{i + 1}\right|\) goes below a
(likely different) preset threshold. Again, there is much that can be
said about these approximations, but we are trying to accomplish things
today, not theorize.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Programming Newton-Raphson&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To perform Newton-Raphson, we'll implement a Python function that takes
the initial guess (\(x_0\)) and the functions \(f\) and \(f'\).
We'll also (arbitrarily) stop after the value \(f(x_i)\) drops below
\(10\^{-8}\) in absolute value.&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
def newton_raphson_method(guess, f, f_prime):    def next_value(value):        return value - f(value)&lt;em&gt;1.0/f_prime(value)    current = guess    while abs(f(current)) &amp;gt; 10&lt;/em&gt;*(-8):        current = next_value(current)    return current&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;As you can see, once we have &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;f&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
and &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;f\_prime&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
everything else is easy because all the work in calculating the next
value (via&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;next\_value&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;)
is done by the functions.

**&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Step IV: Utilize the Newton-Raphson
code to find an Interest Rate&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;**

We first need to implement \\(f\_{P, T, R}(m) = P \\cdot m\^{T + 1} - (P
+ R) \\cdot m\^T + R\\) and \\(f&amp;#39;\_{P, T, R}\\) in Python. Before doing
so, we do a simple derivative calculation: \\[f\_{P, T, R}&amp;#39;(m) =P
\\cdot (T + 1) \\cdot m\^T - (P + R) \\cdot T \\cdot m\^{T - 1}.\\] With
these [formulae](http://dictionary.reference.com/browse/formulae) in
hand, we write a function which will spit out the corresponding &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;f&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
and &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;f\_prime&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
given the parameters \\(P\\) (&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;principal&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;),
\\(T\\) (&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;term&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;)
and \\(R\\) (&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;payment&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;):

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
def generate_polynomials(principal, term, payment):    def f(m):        return (principal*(m**(term + 1)) - (principal + payment)*(m**term) +                payment)    def f_prime(m):        return (principal*(term + 1)*(m**term) -                (principal + payment)*term*(m**(term - 1)))    return (f, f_prime)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that these functions only take a single argument (&lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;m&lt;/span&gt;),
but we are able to use the other parameters from the parent scope beyond
the life of the call to &lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;generate_polynomials&lt;/span&gt;
due to
&lt;a href="http://en.wikipedia.org/wiki/Closure_(computer_science)"&gt;closure&lt;/a&gt; in
Python.&lt;/p&gt;
&lt;p&gt;In order to solve, we need an initial &lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;guess&lt;/span&gt;,
but we need to know the relationship between \(m\) and \(r\) before
we can determine what sort of&lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;guess&lt;/span&gt;makes
sense. In addition, once a value for \(m\) is returned from
Newton-Raphson, we need to be able to turn it into an \(r\) value so
functions &lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;m&lt;/span&gt;
and &lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;m_inverse&lt;/span&gt;
should be implemented. For our dummy case here, we'll assume monthly
payments (and compounding):&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
def m(r):    return 1 + r/12.0def m_inverse(m_value):    return 12.0*(m_value - 1)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;Using&lt;/span&gt; &lt;span class="nt"&gt;these&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;assuming&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;an&lt;/span&gt; &lt;span class="nt"&gt;interest&lt;/span&gt; &lt;span class="nt"&gt;rate&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%**&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;good&lt;/span&gt;
&lt;span class="nt"&gt;guess&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;we&lt;/span&gt; &lt;span class="nt"&gt;can&lt;/span&gt; &lt;span class="nt"&gt;put&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;pieces&lt;/span&gt; &lt;span class="nt"&gt;together&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;def&lt;/span&gt; &lt;span class="nt"&gt;solve_for_interest_rate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;principal&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;term&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;payment&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;m&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;m_inverse&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;    &lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;f_prime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;generate_polynomials&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;principal&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;term&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;payment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="nt"&gt;guess_m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;m&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="nc"&gt;.10&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;ten&lt;/span&gt; &lt;span class="nt"&gt;percent&lt;/span&gt; &lt;span class="nt"&gt;as&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;decimal&lt;/span&gt;    &lt;span class="nt"&gt;m_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;newton_raphson_method&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;guess_m&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;f_prime&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="nt"&gt;return&lt;/span&gt; &lt;span class="nt"&gt;m_inverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;m_value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check that this makes sense, let's plug in some values. Using the
&lt;a href="http://www.bankrate.com/calculators/mortgages/mortgage-calculator.aspx"&gt;bankrate.com loan
calculator&lt;/a&gt;,
if we have a 30-year loan (with \(12 \cdot 30 = 360\) months of
payments) of \$100,000 with an interest rate of 7%, the monthly payment
would be \$665.30. Plugging this into our pipeline:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;principal = 100000&amp;gt;&amp;gt;&amp;gt; term = 360&amp;gt;&amp;gt;&amp;gt; payment = 665.30&amp;gt;&amp;gt;&amp;gt; solve_for_interest_rate(principal, term, payment, m, m_inverse)0.0699996284703
~~~~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;And we see the rate of 7% is approximated quite well!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: large;"&gt;Bonus: Analyze the function to make
sure we are right&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Coming soon. We will analyze the derivate and concavity to make sure
that our guess yield the correct (and unique) zero.&lt;/p&gt;</summary><category term="Finance"></category><category term="Interest Rate"></category><category term="Mortgage"></category><category term="Newton-Raphson Method"></category><category term="Numerical Analysis"></category><category term="Python"></category></entry><entry><title>Silly Pranks on your Friends</title><link href="/2012/04/silly-pranks-on-your-friends.html" rel="alternate"></link><updated>2012-04-07T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-04-07:2012/04/silly-pranks-on-your-friends.html</id><summary type="html">&lt;p&gt;&lt;span style="font-size: large;"&gt;Disclaimer: These are silly little
pranks, but I don't encourage messing with someone's computing
environment without letting them know you have done so.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First Prank:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I have a friend who really likes to read
&lt;a href="http://people.com/"&gt;people.com&lt;/a&gt;, so I figured I would "enrich" her life
a bit with another source of daily news :)&lt;/p&gt;
&lt;p&gt;I decided to play around with her &lt;a href="http://en.wikipedia.org/wiki/Hosts_(file)#Purpose"&gt;hosts
file&lt;/a&gt;, so that when
she visited &lt;a href="http://people.com/"&gt;people.com&lt;/a&gt;, she really got the &lt;a href="http://nytimes.com/"&gt;New
York Times&lt;/a&gt; (the realest news I could think of at
that time, though there are plenty of fine candidates).&lt;/p&gt;
&lt;p&gt;To quote the Wikipedia article on hosts files:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"The hosts file...assists in addressing network nodes in a computer
network. It is a common part of an operating system's Internet
Protocol (IP) implementation, and serves the function of translating
human-friendly hostnames into numeric protocol addresses, called IP
addresses, that identify and locate a host in an IP network."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More importantly: "the /etc/hosts file...allows you to add entries that
traditionally your computer will look up first before trying your server
DNS."
(&lt;a href="http://www.justincarmony.com/blog/2011/07/27/mac-os-x-lion-etc-hosts-bugs-and-dns-resolution/"&gt;source&lt;/a&gt;)
This means that even though the &lt;a href="http://en.wikipedia.org/wiki/Domain_Name_System"&gt;DNS
Lookup&lt;/a&gt; provided by her
&lt;a href="http://en.wikipedia.org/wiki/Internet_service_provider"&gt;ISP&lt;/a&gt;could
resolve people.com, her browser would get an &lt;a href="http://en.wikipedia.org/wiki/IP_address"&gt;IP
address&lt;/a&gt; from the hosts file
first and hence will render the New York Times page for
&lt;a href="http://people.com/"&gt;people.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first step to do this was to find the IP address for the replacement
site:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
$ ping www.nytimes.comPING www.nytimes.com (199.239.136.200): 56 data bytes64 bytes from 199.239.136.200: icmp_seq=0 ttl=64 time=0.062 ms64 bytes from 199.239.136.200: icmp_seq=1 ttl=64 time=0.054 ms...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;For the second (and final) step, I just needed to add an entry to the
hosts file. After
[locating](http://en.wikipedia.org/wiki/Hosts_(file)#Location_in_the_file_system)
the file on her Macbook in &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/etc/hosts&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
I updated the contents:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
### Host Database## localhost is used to configure the loopback interface# when the system is booting.  Do not change this entry.##127.0.0.1       localhost255.255.255.255 broadcasthost::1             localhostfe80::1%lo0     localhost199.239.136.200 people.com  # New entry
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voil&amp;#0224;! With that, the prank was complete and the next time she visited
&lt;a href="http://people.com/"&gt;people.com&lt;/a&gt;, the got the contents of
&lt;a href="http://nytimes.com/"&gt;nytimes.com&lt;/a&gt; in her browser.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Second Prank coming soon.&lt;/strong&gt;&lt;/p&gt;</summary><category term="DNS"></category><category term="DNS Lookup"></category><category term="Domain Name System"></category><category term="Hosts file"></category><category term="Internet Protocol"></category><category term="Internet Service Provider"></category><category term="IP Address"></category><category term="ISP"></category><category term="Macbook"></category><category term="nytimes.com"></category><category term="people.com"></category><category term="Practical Joke"></category><category term="Prank"></category><category term="UNIX"></category></entry><entry><title>Where have I been?</title><link href="/2012/03/where-have-i-been.html" rel="alternate"></link><updated>2012-03-28T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2012-03-28:2012/03/where-have-i-been.html</id><summary type="html">&lt;p&gt;Well, it's been a bit crazy and I haven't written a blog post in ages. I
have several brewing, but had just been too busy at work (and a ton of
travel for personal fun) to really have the excess time to write.&lt;/p&gt;
&lt;p&gt;This return post will not have much content but will announce that I'm a
big boy now.&lt;/p&gt;
&lt;p&gt;In the 1.6.3 release of the App Engine SDK (and hence runtime), three
nifty changes of mine were included. Two of them even made the &lt;a href="http://code.google.com/p/googleappengine/wiki/SdkReleaseNotes#Version_1.6.3_-_February_28,_2012"&gt;Release
Notes&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
Code that inherits from the deferred library's &lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;TaskHandler&lt;/span&gt;
can now define custom handling of exceptions.

&lt;/li&gt;
-   &lt;http://code.google.com/p/googleappengine/issues/detail?id=6478&gt;

&lt;li&gt;
Fixed an issue so that a deferred task retries like a push queue task
when using the &lt;span
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;SingularTaskFailure&lt;/span&gt;
exception:

&lt;/li&gt;
-   &lt;http://code.google.com/p/googleappengine/issues/detail?id=6412&gt;

&lt;/ul&gt;

&lt;p&gt;In addition, the one that was most confusing to fix didn't make it into
any set of Release Notes, but I "closed" the
&lt;a href="http://stackoverflow.com/questions/8304854/gql-query-with-key-in-list-of-keys"&gt;issue&lt;/a&gt;that
I originally opened on StackOverflow. Checkout the
&lt;a href="http://code.google.com/p/googleappengine/source/diff?spec=svn241&amp;amp;r=241&amp;amp;format=side&amp;amp;path=/trunk/python/google/appengine/ext/gql/__init__.py&amp;amp;old_path=/trunk/python/google/appengine/ext/gql/__init__.py"&gt;diff&lt;/a&gt;to
see the details. I'll follow up with a summary of each of the fixes in a
later post.&lt;/p&gt;</summary><category term="AppEngine"></category><category term="Google App Engine"></category><category term="Google Codesite"></category><category term="Open Source"></category><category term="Python"></category><category term="Stack Overflow"></category></entry><entry><title>A Python Metaclass for "extra bad" errors in Google App Engine</title><link href="/2011/11/python-metaclass-for-extra-bad-errors.html" rel="alternate"></link><updated>2011-11-30T00:00:00-08:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-11-30:2011/11/python-metaclass-for-extra-bad-errors.html</id><summary type="html">&lt;p&gt;So now here we are, having tried to&lt;a href="http://blog.bossylobster.com/2011/11/handling-errors-in-google-app-engineand.html"&gt;handle errors in Google App
Engine...and
failed&lt;/a&gt;all
because silly&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;DeadlineExceededError&lt;/span&gt;
&lt;a href="http://code.google.com/p/googleappengine/source/browse/trunk/python/google/appengine/runtime/__init__.py#32"&gt;jumps
over&lt;/a&gt;&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;Exception&lt;/span&gt;
in the inheritance chain and goes right for &lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;BaseException&lt;/span&gt;.
How can we catch these in our handlers while staying
&lt;a href="http://docs.python.org/glossary.html#term-pythonic"&gt;Pythonic*&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;First and foremost, in the case of a timeout, we need to explicitly
catch aDeadlineExceededError. To do so, we can use a
&lt;a href="http://stackoverflow.com/questions/739654/understanding-python-decorators#1594484"&gt;decorator&lt;/a&gt;(hey,
that's Pythonic) in each and every handler for each and every HTTP
verb.(Again, &lt;a href="http://troll.me/images/war-cat/prepare-yourself-for-war.jpg"&gt;prepare
yourselves&lt;/a&gt;,
a bunch of code is about to happen. See the necessary
&lt;a href="http://blog.bossylobster.com/2011/11/python-metaclass-for-extra-bad-errors.html#imports"&gt;imports&lt;/a&gt;
at the bottom of the post.)&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
def deadline_decorator(method):    def wrapped_method(self, &lt;em&gt;args, &lt;strong&gt;kwargs):        try:            method(self, *args, &lt;/strong&gt;kwargs)        except DeadlineExceededError:            traceback_info = ''.join(format_exception(&lt;/em&gt;sys.exc_info()))            email_admins(traceback_info, defer_now=True)            serve_500(self)    return wrapped_method&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Unfortunately&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;having&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;manually&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;separator&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;clear: both; text-align: center;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.bossylobster.com/images/blog/decorate_all_the_functions.jpg)](http://www.bossylobster.com/images/blog/decorate_all_the_functions.jpg)&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;Pythonic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;stuck&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;wanted&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;give&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;asked&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt;
&lt;span class="n"&gt;advice&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//plus.google.com/u/0/114760865724135687241/posts/GJjXjq5zXhU)&lt;/span&gt;
&lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.google.com/+) and actually got what I needed from the&lt;/span&gt;
&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;knowing&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Ali&lt;/span&gt;
&lt;span class="n"&gt;Afshar&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//plus.google.com/u/0/118327176775959145936/posts). What&lt;/span&gt;
&lt;span class="n"&gt;did&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;
&lt;span class="n"&gt;need&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Metaclasses&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//stackoverflow.com/questions/100003/what-is-a-metaclass-in-python#6581949).&lt;/span&gt;

&lt;span class="n"&gt;Before&lt;/span&gt; &lt;span class="n"&gt;showing&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt; &lt;span class="n"&gt;simple&lt;/span&gt; &lt;span class="n"&gt;metaclass&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;wrote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;know&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;
&lt;span class="n"&gt;thing&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;StackOverflow&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Kevin&lt;/span&gt;
&lt;span class="n"&gt;Samuel&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//stackoverflow.com/users/9951/kevin-samuel):&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;purpose&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;metaclass&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;With&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_new&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;actually&lt;/span&gt; &lt;span class="n"&gt;constructs&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;also&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;taking&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;parents&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;attritubutes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;So&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;metaclass&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;subclassing&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;and&lt;/span&gt;
&lt;span class="n"&gt;overriding&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_new&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;DecorateHttpVerbsMetaclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;__new__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls_attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;verbs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;verb&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nl"&gt;verbs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;verb&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cls_attr&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls_attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;verb&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                &lt;span class="n"&gt;cls_attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;verb&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deadline_decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls_attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;verb&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DecorateHttpVerbsMetaclass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__new__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                              &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls_attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;DecorateHttpVerbsMetaclass&lt;/span&gt;,
we look for four (of the nine) HTTP
&lt;a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods"&gt;verbs&lt;/a&gt;,
because heck, only seven are supported in
&lt;a href="http://code.google.com/appengine/docs/python/tools/webapp/requesthandlerclass.html"&gt;RequestHandler&lt;/a&gt;,
and we're not that crazy. If the class has one of the verbs as an
attribute &lt;strong&gt;&lt;em&gt;andif&lt;/em&gt;&lt;/strong&gt; the attribute is a function, we
&lt;a href="http://troll.me/images/misc-corrupted-husband/i-try-to-decorate-the-house-he-puts-spiderman-images-everywhere.jpg"&gt;decorate&lt;/a&gt;
it with &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;deadline_decorator&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, we can rewrite our subclass of &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;RequestHandler&lt;/span&gt;
with one extra line:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
class ExtendedHandler(RequestHandler):    &lt;strong&gt;metaclass&lt;/strong&gt; = DecorateHttpVerbsMetaclass    def handle_exception(self, exception, debug_mode):        traceback_info = ''.join(format_exception(*sys.exc_info()))        email_admins(traceback_info, defer_now=True)        serve_500(self)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;By&lt;/span&gt; &lt;span class="n"&gt;doing&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ExtendedHandler&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;built&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;its&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;its&lt;/span&gt;
&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;attributes&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;checked&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;possibly&lt;/span&gt; &lt;span class="n"&gt;updated&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;
&lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;metaclass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;And&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;James&lt;/span&gt; &lt;span class="n"&gt;Nekbehrd&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;feel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;boss&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;youtube&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;watch&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;NisCkxU544c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="n"&gt;handles&lt;/span&gt;
&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Imports&lt;/span&gt;&lt;span class="p"&gt;:](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bossylobster&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;metaclass&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bad&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="c"&gt;#imports)**&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.appengine.api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;mailfrom&lt;/span&gt; &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appengine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deferred&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;deferfrom&lt;/span&gt; &lt;span class="nn"&gt;google.appengine.ext.webapp&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;RequestHandlerfrom&lt;/span&gt; &lt;span class="nn"&gt;google.appengine.runtime&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;DeadlineExceededErrorimport&lt;/span&gt; &lt;span class="nn"&gt;sysfrom&lt;/span&gt; &lt;span class="nn"&gt;traceback&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;format_exceptionfrom&lt;/span&gt; &lt;span class="nn"&gt;SOME_APP_SPECIFIC_LIBRARY&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;serve_500from&lt;/span&gt; &lt;span class="nn"&gt;LAST_POST&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;email_admins&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;*Pythonic:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;An idea or piece of code which closely follows the most common idioms
of the Python language, rather than implementing code using concepts
common to other languages.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Using&lt;/em&gt;&lt;span class="Apple-style-span"
    style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;grep
    -r "Exception)" . | grep "class "&lt;/span&gt; &lt;em&gt;I have convinced myself
    (for now) that the only errors AppEngine will throw that do not
    inherit from&lt;/em&gt;&lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;Exception&lt;/span&gt;&lt;em&gt;are&lt;/em&gt;&lt;span
    class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;DeadlineExceededError&lt;/span&gt;&lt;em&gt;,&lt;/em&gt;&lt;span
    class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;SystemExit&lt;/span&gt;&lt;em&gt;,
    and&lt;/em&gt;&lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;KeyboardInterrupt&lt;/span&gt;&lt;em&gt;so
    that is why I only catch the timeout.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;You can also use&lt;/em&gt;&lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;webapp2&lt;/span&gt;&lt;em&gt;to
    &lt;a href="http://stackoverflow.com/questions/6853257/how-can-i-setup-a-global-deadlineexceedederror-handler"&gt;catch 500
    errors&lt;/a&gt;,
    even when&lt;/em&gt;&lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;handle_exception&lt;/span&gt;&lt;em&gt;fails
    to catch them.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt;&lt;em&gt;Just because you know what a metaclass is doesn't mean
you should use one:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;"Don't do stuff like this though, what is your use case?" -Ali
    Afshar&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;"Metaclasses are deeper magic than 99% of users should ever worry
    about. If you wonder whether you need them, you don't (the people
    who actually need them know with certainty that they need them, and
    don't need an explanation about why)." -Python Guru Tim Peters&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;"The main use case for a metaclass is creating an API." -Kevin
    Samuel&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="AppEngine"></category><category term="Class as Object"></category><category term="Decorator"></category><category term="Exception"></category><category term="Google App Engine"></category><category term="Metaclass"></category><category term="OOP"></category><category term="Python"></category><category term="Pythonic"></category><category term="Request Handler"></category></entry><entry><title>Handling errors in Google App Engine...and failing</title><link href="/2011/11/handling-errors-in-google-app-engineand.html" rel="alternate"></link><updated>2011-11-27T00:00:00-08:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-11-27:2011/11/handling-errors-in-google-app-engineand.html</id><summary type="html">&lt;p&gt;After spending a nontrivial amount of my nights and weekends working on
an AppEngine app, I wanted a good way to monitor the logs without
checking in on them every day. After a particularly frustrating weekend
of updates that exposed unnoticed bugs that had yet to be triggered by
the app, I set out to find such a way. I set out to find a
&lt;a href="http://docs.python.org/glossary.html#term-pythonic"&gt;Pythonic*&lt;/a&gt;way.&lt;/p&gt;
&lt;p&gt;Since I knew the&lt;a href="http://code.google.com/appengine/docs/python/mail/"&gt;App Engine Mail
API&lt;/a&gt;was&lt;a href="http://t.qkme.me/355773.jpg"&gt;super
easy&lt;/a&gt; to configure, I figured I would just
email myself every time there was an exception, before serving my
default 500 error page. To do so, I just needed to subclass the default
&lt;a href="http://code.google.com/appengine/docs/python/tools/webapp/requesthandlerclass.html"&gt;RequestHandler&lt;/a&gt;
with my own &lt;a href="http://code.google.com/appengine/docs/python/tools/webapp/requesthandlerclass.html#RequestHandler_handle_exception"&gt;&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;handle_exception&lt;/span&gt;&lt;/a&gt;
method. (OK, &lt;a href="http://troll.me/images/war-cat/prepare-yourself-for-war.jpg"&gt;prepare
yourselves&lt;/a&gt;,
a bunch of code is about to happen. See the necessary
&lt;a href="http://blog.bossylobster.com/2011/11/handling-errors-in-google-app-engineand.html#imports"&gt;imports&lt;/a&gt;
at the bottom of the post.)&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
class ExtendedHandler(RequestHandler):    def handle_exception(self, exception, debug_mode):        traceback_info = ''.join(format_exception(*sys.exc_info()))        email_admins(traceback_info, defer_now=True)        serve_500(self)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Awesome! By making all my handlers inherit from &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;ExtendedHandler&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,
I can use the native Python modules &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;traceback&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
and &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;sys&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;to
get the traceback and my handy dandy

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
def email_admins(error_msg, defer_now=False):    if defer_now:        defer(email_admins, error_msg, defer_now=False)        return    sender = &amp;#39;YOUR APP Errors &lt;span class="nt"&gt;&amp;lt;errors&lt;/span&gt;&lt;span class="err"&gt;@your_app_id_here.appspotmail.com&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;    to = &amp;#39;Robert Admin &lt;span class="nt"&gt;&amp;lt;bob&lt;/span&gt;&lt;span class="err"&gt;@example.com&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;, James Nekbehrd &lt;span class="nt"&gt;&amp;lt;jim&lt;/span&gt;&lt;span class="err"&gt;@example.com&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;    subject = &amp;#39;YOUR APP Error: Admin Notify&amp;#39;    body = &amp;#39;\n&amp;#39;.join([&amp;#39;Dearest Admin,&amp;#39;,                      &amp;#39;&amp;#39;,                      &amp;#39;An error has occurred in YOUR APP:&amp;#39;,                      error_msg,                      &amp;#39;&amp;#39;])    mail.send_mail(sender=sender, to=to,                   subject=subject, body=body)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to send out the email in the &lt;a href="http://code.google.com/appengine/articles/deferred.html"&gt;deferred
queue**&lt;/a&gt;so
as not to hold up the handler serving the page.&lt;a href="http://www.realdigitalmedia.com/digital-signage-blog/wp-content/uploads/2011/04/Mission-accomplished.jpg"&gt;Mission
accomplished&lt;/a&gt;,
right? &lt;span class="Apple-style-span"
style="font-size: large;"&gt;WRONG!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;handle_exception&lt;/span&gt;
&lt;a href="http://code.google.com/p/googleappengine/issues/detail?id=2110"&gt;only
handles&lt;/a&gt;
the "right" kind of exceptions. That is, exceptions which inherit
directly from Python's &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;Exception&lt;/span&gt;.
From the
&lt;a href="http://media.comicvine.com/uploads/3/37572/1705127-sea_horse_your_argument_is_invalid_super.jpg"&gt;horse&lt;/a&gt;'s
&lt;a href="http://docs.python.org/tutorial/errors.html#user-defined-exceptions"&gt;mouth&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exceptions should typically be derived from the
&lt;a href="http://docs.python.org/library/exceptions.html#exceptions.Exception"&gt;Exception&lt;/a&gt;
class, either directly or indirectly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But. &lt;a href="http://www.youtube.com/watch?v=a1Y73sPHKxw"&gt;But&lt;/a&gt;! If the app fails
because a request times out, a&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;DeadlineExceededError&lt;/span&gt;is
thrown and &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;handle_exception&lt;/span&gt;
falls on its face. Why? Because&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;DeadlineExceededError&lt;/span&gt;&lt;a href="http://code.google.com/p/googleappengine/source/browse/trunk/python/google/appengine/runtime/__init__.py#32"&gt;inherits&lt;/a&gt;directlyfrom&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;Exception&lt;/span&gt;'s
parent class:&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;BaseException&lt;/span&gt;.
(&lt;a href="http://vipdictionary.com/img/gasp_by_dokuro-png.jpg"&gt;Gasp&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;It's OK little ones, in my &lt;a href="http://blog.bossylobster.com/2011/11/python-metaclass-for-extra-bad-errors.html"&gt;next
post&lt;/a&gt;
I explain how I did it while keeping my code Pythonic by using
&lt;a href="http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python#6581949"&gt;metaclasses&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.blogger.com/blogger.g?blogID=1697307561385480651"&gt;Imports:&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
from google.appengine.api import mailfrom google.appengine.ext.deferred import deferfrom google.appengine.ext.webapp import RequestHandlerimport sysfrom traceback import format_exceptionfrom SOME_APP_SPECIFIC_LIBRARY import serve_500
~~~~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*Pythonic:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;An idea or piece of code which closely follows the most common idioms
of the Python language, rather than implementing code using concepts
common to other languages.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;**&lt;strong&gt;Deferred Queue&lt;/strong&gt;: &lt;em&gt;Make sure to enable the deferred library in
your&lt;/em&gt;&lt;span class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;app.yaml&lt;/span&gt;&lt;em&gt;by
using&lt;/em&gt;&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;deferred:
on&lt;/span&gt;&lt;em&gt;in your builtins.&lt;/em&gt;&lt;/p&gt;</summary><category term="AppEngine"></category><category term="Deferred Library"></category><category term="Exception"></category><category term="Google App Engine"></category><category term="Mail API"></category><category term="Metaclass"></category><category term="Python"></category><category term="Pythonic"></category><category term="Request Handler"></category><category term="Task Queue API"></category></entry><entry><title>Quick and Dirty: Santa's Coming</title><link href="/2011/11/quick-and-dirty-santas-coming.html" rel="alternate"></link><updated>2011-11-17T00:00:00-08:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-11-17:2011/11/quick-and-dirty-santas-coming.html</id><summary type="html">&lt;p&gt;I have been wanting to write a post for awhile, but was travelling for a
&lt;a href="https://sites.google.com/site/barcelonadevfest/"&gt;work event&lt;/a&gt; and while
on the road I decided to be lazy.&lt;/p&gt;
&lt;p&gt;Since I just so happen to use a few&lt;a href="http://code.google.com/apis/gdata/"&gt;GData
APIs&lt;/a&gt;occasionally in my day to day
work, most of the post ideas revolve around quirky things I have done or
want to do with the APIs. Also, due to my obscene love for Python, all
my mashups seem to end up using the &lt;a href="http://code.google.com/p/gdata-python-client/"&gt;Python Client for
GData&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Back-story:&lt;/strong&gt; As I was finalizing travel and giftsfor my winter
holiday back home, I called an old friend to let him know I'd be home in
40 days. After relaying this information to a few other people, I noted
to my girlfriend that it would be nice if a computer would remind me of
the count every day. This is where this quick and dirty pair of scripts
come in to remind me when Santa is coming.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pre-work &amp;mdash; Account Settings:&lt;/strong&gt;To allow an app to make requests on my
behalf, I signed up to &lt;a href="https://accounts.google.com/ManageDomains"&gt;Manage my
Domain&lt;/a&gt;for use with Google
Apps, etc. For illustration purposes, let's say I used &lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;http://example.com&lt;/span&gt;(in
reality, I used a pre-existing App of mine, I really just needed an
OAuth token for one time use, no real safety concerns there). After
adding this domain in the management page, I am able to get my&lt;em&gt;"OAuth
Consumer Key"&lt;/em&gt;and &lt;em&gt;"OAuth Consumer Secret"&lt;/em&gt; which we'll say are&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;EXAMPLE_KEY&lt;/span&gt;and
&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;EXAMPLE_SECRET&lt;/span&gt;in
this example. Also in the management page, I set my &lt;em&gt;"OAuth 2.0 Redirect
URIs"&lt;/em&gt; and made sure my app can serve that page (even if it is a 404).
Again for illustration, let's pretend I used&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;http://example.com/verify&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;After doing this settings pre-work, I have two scripts to do the work
for me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First script &amp;mdash; get the OAuth Token:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
import gdata.calendar.clientimport gdata.gauthgcal = gdata.calendar.client.CalendarClient()oauth_callback = 'http://example.com/verify'scopes = ['https://www.google.com/calendar/feeds/']consumer_key = 'EXAMPLE_KEY'consumer_secret = 'EXAMPLE_SECRET'request_token = gcal.get_oauth_token(scopes, oauth_callback,                                     consumer_key, consumer_secret)out_str = ('Please visit https://www.google.com/accounts/OAuthAuthorize'           'Token?hd=default&amp;amp;oauth_token=%s' % request_token.token)print out_strfollow = raw_input('Please entry the follow link after authorizing:\n')gdata.gauth.authorize_request_token(request_token, follow)gcal.auth_token = gcal.get_access_token(request_token)print 'TOKEN:', gcal.auth_token.tokenprint 'TOKEN_SECRET:', gcal.auth_token.token_secret&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This script &amp;quot;spoofs&amp;quot; the OAuth handshake by asking the user (me) to go
directly to the [OAuth Authorize
page](https://www.google.com/accounts/OAuthAuthorizeToken). After doing
so and authorizing the App, I am redirected to&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;http://example.com/verify&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;with
query parameters for&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;oauth\_verifier&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
and &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;oauth\_token&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.
These are then used by the &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;gauth&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
section of the GData library to finish the OAuth handshake. Once the
handshake is complete, the script prints out a necessary token and token
secret to be used by the second script. I would advise piping the output
to a file, augmenting the script to write them to a file, orwriting
these down (this is a joke, please don&amp;#39;t write down 40 plus character
goop that was ***produced by your computer***). For the next script,
let&amp;#39;s pretend our token is&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;FAKE\_TOKEN&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;and
our token secret is &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;FAKE\_TOKEN\_SECRET&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.

**Second script &lt;span class="ni"&gt;&amp;amp;mdash;&lt;/span&gt; insert the events:**

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
# General librariesfrom datetime import datefrom datetime import timedelta# Third-party librariesimport atomimport gdata.gauthimport gdata.calendar.clientimport gdata.calendar.datagcal = gdata.calendar.client.CalendarClient()auth_token = gdata.gauth.OAuthHmacToken(consumer_key=&amp;#39;EXAMPLE_KEY&amp;#39;,                                        consumer_secret=&amp;#39;EXAMPLE_SECRET&amp;#39;,                                        token=&amp;#39;FAKE_TOKEN&amp;#39;,                                        token_secret=&amp;#39;FAKE_TOKEN_SECRET&amp;#39;,                                        auth_state=3)gcal.auth_token = auth_tokentoday = date.today()days_left = (date(year=2011, month=12, day=23) - today).dayswhile days_left &amp;gt;= 0:    event = gdata.calendar.data.CalendarEventEntry()    if days_left &amp;gt; 1:        msg = &amp;#39;%s Days Until Home for Christmas&amp;#39; % days_left    elif days_left == 1:        msg = &amp;#39;1 Day Until Home for Christmas&amp;#39;    elif days_left == 0:        msg = &amp;#39;Going Home for Christmas&amp;#39;    event.title = atom.data.Title(msg)    # When    start_time = &amp;#39;2011-%02d-%02dT08:00:00.000-08:00&amp;#39; % (today.month, today.day)    end_time = &amp;#39;2011-%02d-%02dT09:00:00.000-08:00&amp;#39; % (today.month, today.day)    event.when.append(gdata.calendar.data.When(        start=start_time,        end=end_time,        reminder=[gdata.data.Reminder(hours=&amp;#39;1&amp;#39;)]))    gcal.InsertEvent(event)    today += timedelta(days=1)    days_left -= 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This script first authenticates by using the key/secret pair for the
application (retrieved from the settings page) and the key/secret pair
for the user token (that we obtained from the first script). To
authenticate, we explicitly construct an HMAC-SHA1 signed token in the
final auth state (3) of two-legged OAuth and then set the token on our
calendar client (&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;gcal&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;After authenticating, we start with today and figure out the number of
days in the countdown given my return date of December 23, 2011. With
these in hand, we can loop through until there are no days left,
creating a &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;CalendarEventEntry&lt;/span&gt;
with title as the number of days left in the countdown and occurring
from 8am to 9am PST (UTC -8). Notice also I include a &lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;gdata.data.Reminder&lt;/span&gt;
so I get an email at 7am every morning (60 minutes before the
event)updating my brain on the length of the countdown!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cleanup:&lt;/strong&gt;Be sure to go to your &lt;a href="https://accounts.google.com/IssuedAuthSubTokens"&gt;issued tokens
page&lt;/a&gt; and revoke access
to the App (e.g. &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;http://example.com&lt;/span&gt;)
after doing this to avoid any unwanted security issues.&lt;/p&gt;
&lt;div&gt;

**References:***I have never read this, but I'm sure the documentation
on[Registration for Web-Based
Applications](http://code.google.com/apis/accounts/docs/RegistrationForWebAppsAuto.html)is
very helpful.*

**Notes:**
-   *You can annoy other people by inviting them to these events for
    them as well. To do so, simply add the following two lines before
    inserting the event*

    ~~~~ {.prettyprint style="background-color: white;"}
    who_add = gdata.calendar.data.EventWho(email='name@mail.com')event.who.append(who_add)
    ~~~~

-   *Sometimes inserting an item results in a RedirectError, so it may
    be safer to try the insert multiple times with a helper function
    such as the following:*

    ~~~~ {.prettyprint style="background-color: white;"}
    def try_insert(attempts, gcal, event):    from time import sleep    from gdata.client import RedirectError    while attempts &gt; 0:      try:          gcal.InsertEvent(event)          break      except RedirectError:          attempts -= 1          sleep(3)          pass    if attempts == 0:        print 'Insert "%s" failed' % event.title.text
    ~~~~

-   *In what I swear was a complete coincidence, v3 of the Calendar API
    was
    [announced](http://googleappsdeveloper.blogspot.com/2011/11/introducing-next-version-of-google.html)
    today. I will try to use the [new
    documentation](https://code.google.com/apis/calendar/v3/getting_started.html)
    to redo this quick and dirty example with v3.*

&lt;/div&gt;</summary><category term="API"></category><category term="Christmas"></category><category term="GCal"></category><category term="GData"></category><category term="Google Calendar"></category><category term="OAuth"></category><category term="OAuth2.0"></category><category term="Python"></category><category term="Santa"></category></entry><entry><title>This Lobster, not so Bossy</title><link href="/2011/10/this-lobster-not-so-bossy.html" rel="alternate"></link><updated>2011-10-17T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-10-17:2011/10/this-lobster-not-so-bossy.html</id><summary type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/baby_lobster_collegehumor.jpg)](http://www.bossylobster.com/images/blog/baby_lobster_collegehumor.jpg)

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: center;"&gt;

&lt;/div&gt;</summary><category term=""></category></entry><entry><title>Protecting Sensitive Information in Public Git Repositories</title><link href="/2011/10/protecting.html" rel="alternate"></link><updated>2011-10-05T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-10-05:2011/10/protecting.html</id><summary type="html">&lt;p&gt;On the (much too early) bus to work this morning, I was reading my
Twitter feed and saw an &lt;a href="https://twitter.com/#!/robhawkes/status/121593545202216960"&gt;interesting
question&lt;/a&gt;from
&lt;a href="https://twitter.com/#!/robhawkes"&gt;Rob Hawkes&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;div id="post-container"&gt;&lt;/p&gt;
&lt;div id="container-bg"&gt;

&lt;div id="post-bg"&gt;

&lt;span id="top-span"&gt; &lt;span id="follow-span"&gt;&lt;/span&gt; &lt;span
id="name-span"&gt; [![Rob
Hawkes](http://www.bossylobster.com/images/blog/robhawkes.jpg)](http://twitter.com/intent/user?screen_name=robhawkes "Rob Hawkes")
**[@robhawkes](http://twitter.com/intent/user?screen_name=robhawkes "Rob Hawkes")**
&lt;span style="color: #999999; font-size: 14px;"&gt;
Rob Hawkes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div style="margin: 1em 0em .5em 0em;"&gt;

How do you handle config files in your apps when you use Git? I keep
accidentally adding config files with sensitive data to Git. :(

&lt;/div&gt;

&lt;div style="font-size: 12px;"&gt;

[October 5, 2011 7:32
am](https://twitter.com/#!/robhawkes/status/121593545202216960 "tweeted on October 5, 2011 7:32 am")
via [TweetDeck](http://www.tweetdeck.com/)
[**Reply**](https://twitter.com/intent/tweet?in_reply_to=121593545202216960 "Reply")
[**Retweet**](https://twitter.com/intent/retweet?tweet_id=121593545202216960 "Retweet")
[**Favorite**](https://twitter.com/intent/favorite?tweet_id=121593545202216960 "Favorite")

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;&lt;/center&gt;
Rob's Twitter followers made all kinds of recommendations and Rob
eventually decided it was a solved problem, declaring "Best method I've
found so far is creating a temporary config file and keeping that in
git, then .gitignoring the real one." and then "Thanks for the config
file tips! In the end I went with a "config.example.js" file stored in
&lt;a href="http://git-scm.com/"&gt;Git&lt;/a&gt; and a "config.js" file that is ignored." For
those following along at home, they mean the same thing.&lt;/p&gt;
&lt;p&gt;As Rob was probably intending, this can be used for deploying an app on
your personal server, or for a sample App on a PaaS like &lt;a href="http://code.google.com/appengine/"&gt;Google App
Engine&lt;/a&gt; or
&lt;a href="http://www.heroku.com/"&gt;Heroku&lt;/a&gt;. When testing such an app, the ability
to have a native environment locally is a huge convenience, but the
overhead of remembering which private keys need to be hidden is a
headache and sometimes completely neglected. But it shouldn't be,
because git never forgets!&lt;/p&gt;
&lt;p&gt;Anyone who has used git for any substantial amount of time probably
initially conceived of this hack when on first thought. (This is no
insult to Rob, just the inevitability of the pattern.) But, by the time
Rob posted his solution, I had moved on from this and came up a solution
that I think does the trick a bit more thoroughly. I envisioned a
solution which assumes people who checkout my code will want to keep
their config in a specified path that is already in the repo; of course,
I also wanted to share this with the interwebs.&lt;/p&gt;
&lt;p&gt;&lt;span class="Apple-style-span"&gt;Anyhow, this is quick and dirty. First,
create &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;config.js&lt;/span&gt;
and&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;_config.js&lt;/span&gt;in
the root directory of your git repository (the same directory that &lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;.git&lt;/span&gt;
lives in). I intend&lt;/span&gt;&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;config.js&lt;/span&gt;&lt;span
class="Apple-style-span"&gt;to be the local copy with my actual passwords
and keys and&lt;/span&gt;&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;_config.js&lt;/span&gt;to
hold the master contents that actually show up in the public repo. For
example, the contents of&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;config.js
are&lt;/span&gt;:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;

&lt;span class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;var
SECRET = 'Nnkrndkmn978489MDkjw';&lt;/span&gt;

&lt;/div&gt;

&lt;p&gt;and the contents of&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;_config.js&lt;/span&gt;are:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;

&lt;span class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;var
SECRET = 'SECRET';&lt;/span&gt;

&lt;/div&gt;

&lt;p&gt;Since I &lt;strong&gt;&lt;em&gt;don't&lt;/em&gt;&lt;/strong&gt; want a duplicate in my repo, I put a rule in my
&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;.gitignore&lt;/span&gt;
&lt;a href="http://progit.org/book/ch2-2.html#ignoring_files"&gt;file&lt;/a&gt;to ignore&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;_config.js&lt;/span&gt;.
(For those unfamiliar, this can be done just by including&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;_config.js&lt;/span&gt;on
its own line in the&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;.gitignore&lt;/span&gt;file.)
After doing so, I set up two &lt;a href="http://progit.org/book/ch7-3.html"&gt;git
hooks&lt;/a&gt;, a pre-commit and post-commit
hook.&lt;/p&gt;
&lt;p&gt;To "&lt;em&gt;install&lt;/em&gt;" the hooks, just add the files&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;pre-commit&lt;/span&gt;and&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;post-commit&lt;/span&gt;to
the &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;.git/hooks&lt;/span&gt;
subdirectory in your repo.They are nearly identical files, with a
one-line difference. Both files simply swap the contents of&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;config.js&lt;/span&gt;&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;&lt;/span&gt;and&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;_config.js&lt;/span&gt;,
while&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;pre-commit&lt;/span&gt;also
adds&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;config.js&lt;/span&gt;to
the changelist. First I'll give you the contents of&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;pre-commit&lt;/span&gt;,
and then explain why it's cool/safe:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}&lt;/p&gt;
&lt;h1&gt;!/usr/bin/env pythonimport oshooks_dir = os.path.dirname(os.path.abspath(&lt;strong&gt;file&lt;/strong&gt;))relative_dir = os.path.join(hooks_dir, '../..')project_root = os.path.abspath(relative_dir)git_included_config = os.path.join(project_root, 'config.js')confidential_config = os.path.join(project_root, '_config.js')with open(git_included_config, 'rU') as fh:  git_included_contents = fh.read()with open(confidential_config, 'rU') as fh:  confidential_contents = fh.read()with open(git_included_config, 'w') as fh:  fh.write(confidential_contents)with open(confidential_config, 'w') as fh:  fh.write(git_included_contents)os.system('git add %s' % git_included_config)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(Also note the contents of&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;post-commit&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;are
exactly the same, except without the final statement: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white; color: purple; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;os.system(&amp;#39;git
add %s&amp;#39; % git\_included\_config)&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;.)

So what is happening in this file:

1.  Uses the Python &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;os&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    module to determine the absolute path to the root directory in your
    project by using the absolute path of the hook file, backing up two
    directories and again find that absolute path.
2.  Determines the two files which need to swap contents
3.  Loads the contents into string variables and then writes them to the
    opposite files
4.  (only in&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;pre-commit&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;)
    Adds the included file to the changelist before the commit occurs.

Step 4 is actually the secret sauce. It puts cleaned, non-sensitive data
into the checked in&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;config.js&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;file
and then updates the changelist before making a commit, to ensure only
the non-sensitive data goes in. Though you could do this yourself by
making an initial commit with clean data and then never&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;git
add&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;ing the file with your actual data, these hooks prevent an
accident and allow you to update your local&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\_config.js&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;file
with more fields as your config spec changes.

But wait bossylobster, you say, what if one of the hooks doesn&amp;#39;t occur?
You are right! As&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;pre-commit&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;stands
above, if the changelist is empty we have problems. Since the pre-commit
hook changes&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;config.js&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;to
the same value in HEAD, git will tell us either &amp;quot;***nothing to
commit***&amp;quot; or &amp;quot;***no changes added to commit***&amp;quot;. In this case, the
commit will exit and the post-commit hook will never occur. **&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;font-size: large;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is very
bad&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;**, since the contents of&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;config.js&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;and&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
&lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;\_config.js&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;will
be switched but not switched back. So, to account for this, we need to
append the following code to the end of&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;pre-commit&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;:

~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
with os.popen(&amp;#39;git st&amp;#39;) as fh:  git_status = fh.read()if (&amp;#39;nothing to commit&amp;#39; in git_status or    &amp;#39;no changes added to commit&amp;#39; in git_status or    &amp;#39;nothing added to commit&amp;#39; in git_status):  import sys  msg = &amp;#39;# From pre-commit hook: No commit necessary, &amp;#39; \        &amp;#39;sensitive config unchanged. #&amp;#39;  hash_head = &amp;#39;#&amp;#39; * len(msg)  print (&amp;#39;%s\n%s\n%s\n\n&amp;#39; % (hash_head, msg, hash_head)),  with open(git_included_config, &amp;#39;w&amp;#39;) as fh:    fh.write(git_included_contents)  with open(confidential_config, &amp;#39;w&amp;#39;) as fh:    fh.write(confidential_contents)  sys.exit(1)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For final versions see
the&lt;a href="http://www.bossylobster.com/scripts/pre-commit"&gt;pre-commit&lt;/a&gt; and
&lt;a href="http://www.bossylobster.com/scripts/post-commit"&gt;post-commit&lt;/a&gt;files.
Thanks again to&lt;a href="https://twitter.com/#!/robhawkes"&gt;Rob Hawkes&lt;/a&gt;for the
idea/work break over lunch!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;One of Rob's followers, &lt;a href="https://twitter.com/#!/nrocy"&gt;Paul
King&lt;/a&gt;, found and
&lt;a href="https://twitter.com/#!/nrocy/status/124468167086051328"&gt;tweeted&lt;/a&gt; a very
different alternative that is also pretty cool. Check out the
&lt;a href="http://archive.robwilkerson.org/2010/03/02/git-tip-ignore-changes-to-tracked-files/"&gt;post&lt;/a&gt;he
found by &lt;a href="https://twitter.com/#!/robwilkerson"&gt;Rob Wilkerson&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;:&lt;em&gt;I swapped out a screen shot of the tweet for a CSS-ified
version, inspired by and based on a design used on Mashable.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;Some change in gitcauses empty commits to be allowed.I
either didn't notice this before or it just showed up in git. So I
added&lt;/em&gt;&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;sys.exit(1)&lt;/span&gt;&lt;em&gt;to
force the pre-commit script to fail when nothing is changed and added a
check for the phrase&lt;/em&gt;&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;nothing
added to commit&lt;/span&gt;&lt;em&gt;as well.&lt;/em&gt;&lt;/p&gt;</summary><category term="AppEngine"></category><category term="Commit Hook"></category><category term="Config Files"></category><category term="Git"></category><category term="Private Key"></category><category term="Protect"></category><category term="Python"></category></entry><entry><title>Finding (Fibonacci) Golden Nuggets Part 2</title><link href="/2011/08/finding-fibonacci-golden-nuggets-part-2.html" rel="alternate"></link><updated>2011-08-29T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-08-29:2011/08/finding-fibonacci-golden-nuggets-part-2.html</id><summary type="html">&lt;p&gt;This is the&lt;em&gt;mostly code&lt;/em&gt;second half of a &lt;a href="http://blog.bossylobster.com/2011/08/finding-fibonacci-golden-nuggets.html"&gt;two part
post&lt;/a&gt;
that delivers on a promise of meaningful uses of some theory I
overviewed in my last set of posts.If you see words like topograph,
river, and base and you aren't sure what I mean, you may want to read
that last&lt;a href="http://blog.bossylobster.com/2011/08/conways-topograph-part-3.html"&gt;set of
posts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the first half of this post, I outlined a solution to Project Euler
&lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=137"&gt;problem
137&lt;/a&gt;and will
continue with the solution here.Stop reading now if you don't want to
be spoiled. There was no code in the first post, so this post will be
mostly code, providing a pretty useful abstraction for dealing with
binary quadratic forms.&lt;/p&gt;
&lt;p&gt;In the very specific solution, I was able to use one picture to
completely classify all integer solutions to the equation \(5 x\^2 -
y\^2 = 4\) due to some dumb luck. In the solution, we were able to use
"Since every edge protruding from the river on the positive side has a
value of 4 on a side...by the climbing lemma, we know all values above
those on the river have value greater than 4," butthis is no help when
trying to find solutions to \(5 x\^2 - y\^2 = 9\), for example.&lt;/p&gt;
&lt;p&gt;To answer the question\(5 x\^2 - y\^2 = 9\), we'll use the same
pretty picture, but emphasize different parts of it. As you can see
below, to classify all the values, we only need to travel from the
initial base&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/golden_nugget_first_base.png)](http://www.bossylobster.com/images/blog/golden_nugget_first_base.png)

&lt;/div&gt;

&lt;p&gt;along the river until we arrive at an identical base as the blue circles
indicate below:&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/golden_nugget_next.png)](http://www.bossylobster.com/images/blog/golden_nugget_next.png)

&lt;/div&gt;

&lt;p&gt;As noted above,for problem 137, we luckily were concerned about finding
values \(4\) or \(1\), and the climbing lemma saved us from leaving
the river. However, as I've noted above with &lt;span
class="Apple-style-span" style="color: #6fa8dc;"&gt;#1&lt;/span&gt;,&lt;span
class="Apple-style-span" style="color: #6fa8dc;"&gt;#2&lt;/span&gt;,&lt;span
class="Apple-style-span" style="color: #6fa8dc;"&gt;#3&lt;/span&gt;, and&lt;span
class="Apple-style-span" style="color: #6fa8dc;"&gt;#4&lt;/span&gt;, there are
four &lt;em&gt;tributaries&lt;/em&gt;coming from the river where we can consider larger
values. Using the&lt;em&gt;Arithmetic Progression Rule&lt;/em&gt;, we find values
\(19\),\(11\),\(11\), and\(19\) as the first set of values
above the river. From this point, we can stop checking for solutions to
\(f(x, y) = 9\) since the climbing lemma says all further values above
the tributaries will be \(11\) or greater. Thus, the only solutions
come via scaling solutions of \(f(x, y) = 1\) by a factor of \(3\)
(using homogeneity of a quadratic form).&lt;/p&gt;
&lt;p&gt;Now for the (Python) code.&lt;/p&gt;
&lt;p&gt;First, the data structure will be representative of a base along the
river, but will also include the previous and next faces (on the shared
superbases) and so we'll call it a &lt;em&gt;juncture&lt;/em&gt;(my term, not Conway's).
Each face in a juncture needs to be represented by both the pair \((x,
y)\) and the value that \(f\) takes on this face. For our sanity, we
organize a juncture as a tuple \((B, P, N, F)\), (in that order)&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/juncture.png)](http://www.bossylobster.com/images/blog/juncture.png)

&lt;/div&gt;

&lt;p&gt;where \(P\) and\(N\) form a base straddling the river, with \(P\)
taking the positive value and \(N\) negative, as well as \(B\) the
face "back" according to our orientation and \(F\) the face
"forward". Note, depending on the value of the form at \(F\), the
river may "turn left" or "turn right" at the superbase formed by
\(P\), \(N\) and \(F\).&lt;/p&gt;
&lt;p&gt;To move "along the river until we arrive at an identical base", we need
a way to move "forward" (according to our imposed orientation)to the
next juncture on the river.Moving along the river, we'll often come to
superbases \((B, N, P)\) and need to calculate the forward face
\(F\). To calculate \(F\), assume we have &lt;a href="http://code.google.com/p/dhermes-project-euler/source/browse/python_code/conway_topograph.py#33"&gt;already
written&lt;/a&gt;
a &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;plus&lt;/span&gt;functionthat
determines the vector at \(F\)by adding the vectors from \(P\) and
\(N\) and determines the value at \(F\) by using the arithmetic
progression rule with the values at all three faces in the superbase.
Using this helper function, we can define a way to get the next juncture
by turning left or right:&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
def next_juncture_on_river(juncture):    B, P, N, F = juncture    forward_val = F[1]    if forward_val &amp;lt; 0:        # turn left        NEXT = plus(P, F, N[1])        return (N, P, F, NEXT)    elif forward_val &amp;gt; 0:        # turn right        NEXT = plus(N, F, P[1])        return (P, F, N, NEXT)    else:        raise Exception("No infinite river here.")&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;footnote&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;Next&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;know&lt;/span&gt; &lt;span class="nt"&gt;when&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;stop&lt;/span&gt; &lt;span class="nt"&gt;crawling&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;river&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;we&lt;/span&gt; &lt;span class="nt"&gt;need&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;know&lt;/span&gt; &lt;span class="nt"&gt;when&lt;/span&gt;
&lt;span class="nt"&gt;we&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;returned&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;an&lt;/span&gt; &lt;span class="nt"&gt;identical&lt;/span&gt; &lt;span class="nt"&gt;juncture&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;so&lt;/span&gt; &lt;span class="nt"&gt;we&lt;/span&gt; &lt;span class="nt"&gt;define&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;def&lt;/span&gt; &lt;span class="nt"&gt;juncture_ident&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;juncture1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;juncture2&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;    &lt;span class="nt"&gt;B1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;P1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;N1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;F1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;juncture1&lt;/span&gt;    &lt;span class="nt"&gt;B2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;P2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;N2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;F2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;juncture2&lt;/span&gt;    &lt;span class="nt"&gt;return&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nt"&gt;B1&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nt"&gt;B2&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;P1&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nt"&gt;P2&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt;            &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;N1&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nt"&gt;N2&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;F1&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nt"&gt;F2&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using these functions, we can first find the recurrence that will take
us from a base of solutions to all solutions and second, keep track of
the positive faces on the river to generalize the solution of \(f(x, y)
= z\). For both of these problems, we impose a simplification for the
sake of illustration. We will only be considering quadratic forms
\[f(x, y) = a x\^2 + b y\^2\] where \(a &gt; 0\), \(b \&amp;lt; 0\) and
\(\sqrt{\left|\frac{a}{b}\right|}\) is not rational.This
guarantees the existence of a river. We will pass such forms as an
argument &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;form=(a,
b)&lt;/span&gt; to our functions. We start our river at the juncture defined
by the trivial base \((1, 0), (0, 1)\)
&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bossylobster.com/images/blog/trivial_base.png"&gt;&lt;img alt="" src="http://www.bossylobster.com/images/blog/trivial_base.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;and crawl the river using the functions defined above. (&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/em&gt;
\(f(1, -1) = a(1)\^2 + b(-1)\^2 = a + b\), &lt;em&gt;etc.&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;To find the recurrence, we need just walk along the river until we get
an identical juncture where the trivial base is replaced by the base
\((p, q), (r, s)\). Using the same terminology as in &lt;a href="http://blog.bossylobster.com/2011/08/finding-fibonacci-golden-nuggets.html"&gt;part
one&lt;/a&gt;,
let the base vectors define a sequence\(\left\{(u_k,
v_k)\right\}_{k \geq 0}\) with \(u_0 = (1, 0)\) and\(v_0 =
(0, 1)\), then we have a recurrence\begin{align*}u_{k + 1} &amp;amp;= p
u_k + q v_k \\ v_{k + 1} &amp;amp;= r u_k + s v_k. \end{align*} Using
this -- \(u_{k + 2} - p u_{k + 1} - s(u_{k + 1} - p u_k) = q v_{k
+ 1} - s (q v_k) = q(r u_k)\) -- hence \(u\) satisfies the
recurrence\(u_{k + 2} = (r q - p s)u_k + (p + s)u_{k + 1}\). (You
can check that \(v\) satisfies this as well.) Hence our function to
spit out the recurrence coefficients is:
~~~~ {.prettyprint style="background-color: white;"}
def get_recurrence(form):    a, b = form    B = ((1, -1), a + b)    P = ((1, 0), a)    N = ((0, 1), b)    F = ((1, 1), a + b)    J_init = (B, P, N, F)    J_curr = next_juncture_on_river(J_init)    while not juncture_ident(J_init, J_curr):        J_curr = next_juncture_on_river(J_curr)    final_B, final_P, final_N, final_F = J_curr    p, q = final_P[0]    r, s = final_N[0]    return (r&lt;em&gt;q - p&lt;/em&gt;s, p + s)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;For solving \\(f(x, y) = z\\), (\\(z\\) positive) we need to consider
all the positive tributaries coming out of the river and let them grow
and grow until the climbing lemma tells us we no longer need to consider
values larger than \\(z\\).In order to consider tributaries, we
describe a new kind of juncture. Instead of having a positive/negative
base in the center of the juncture, we have two consecutive faces from
the positive side
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;separator&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;clear: both; text-align: center;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

[![](http://www.bossylobster.com/images/blog/positive_root.png)](http://www.bossylobster.com/images/blog/positive_root.png)

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

and have the negative from across the river as the &amp;quot;back&amp;quot; face. With
this definition, we first write a function to return all tributaries:
~~~~ {.prettyprint style=&amp;quot;background-color: white;&amp;quot;}
def all_positive_tributaries(form):    # ...Initialization logic...    new_positives = []    J_curr = next_juncture_on_river(J_init)    while not juncture_ident(J_init, J_curr):        # we add a new positive if the forward        # value is positive        forward = J_curr[-1]        if forward[1] &amp;gt; 0:            new_positives.append(J_curr)        J_curr = next_juncture_on_river(J_curr)    # For each (B, P, N, F) in new_positives, we want to    # transform to a juncture with positive values, which will    # be (N, P_1, P_2, P_F)    result = []    for new_positive in new_positives:        B, P, N, F = new_positive        new_face = plus(P, F, N[1])        tributary = (N, P, F, new_face)        result.append(tributary)    return result
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For each tributary, we can climb up away from the river until our values
are too large. So we write a helper function to take a given tributary
and a max value and recursively "climb" the topograph until we exceed
the value. This function will naively return all possible faces (value
and vector) without checking the actual values.
~~~~ {.prettyprint style="background-color: white;"}
def seek_up_to_val(juncture, max_value):    N, P_1, P_2, P_F = juncture    if P_F[1] &amp;gt; max_value:        return []    result = [P_F]    turn_left = plus(P_1, P_F, P_2[1])    J_left = (P_2, P_F, P_1, turn_left)    result.extend(seek_up_to_val(J_left, max_value))    turn_right = plus(P_2, P_F, P_1[1])    J_right = (P_1, P_F, P_2, turn_right)    result.extend(seek_up_to_val(J_right, max_value))    return result&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;Finally&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;we&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="nx"&gt;combine&lt;/span&gt; &lt;span class="nx"&gt;these&lt;/span&gt; &lt;span class="nx"&gt;two&lt;/span&gt; &lt;span class="nx"&gt;helper&lt;/span&gt; &lt;span class="nx"&gt;functions&lt;/span&gt; &lt;span class="nx"&gt;into&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt;
&lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;find&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="nx"&gt;solutions&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;above&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;river&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;We&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt;
&lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;pair&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;pairs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;topograph&lt;/span&gt; &lt;span class="nx"&gt;where&lt;/span&gt; &lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="nx"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;integer&lt;/span&gt; &lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;so&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;gives&lt;/span&gt; &lt;span class="nx"&gt;rise&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;
&lt;span class="nx"&gt;solution&lt;/span&gt; &lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;kx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ky&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt; &lt;span class="nx"&gt;we&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;ll&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;sure&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;account&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;our&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{.&lt;/span&gt;&lt;span class="nx"&gt;prettyprint&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;def&lt;/span&gt; &lt;span class="nx"&gt;all_values_on_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Use&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;helper&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;factors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="nx"&gt;integer&lt;/span&gt; &lt;span class="nx"&gt;factors&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;    &lt;span class="nx"&gt;factor_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;factors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Use&lt;/span&gt; &lt;span class="nx"&gt;another&lt;/span&gt; &lt;span class="nx"&gt;helper&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;is_square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;determine&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt; &lt;span class="nx"&gt;factors&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt;    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;written&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="nx"&gt;integer&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;    &lt;span class="nx"&gt;valid_factors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;factor&lt;/span&gt; &lt;span class="nx"&gt;for&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;factor_list&lt;/span&gt;                     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;is_square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;    &lt;span class="nx"&gt;tributaries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;all_positive_tributaries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;tributary&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;tributaries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="nx"&gt;candidates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;seek_up_to_val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tributary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;candidate&lt;/span&gt; &lt;span class="nx"&gt;for&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;candidates&lt;/span&gt;                      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;candidate&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;valid_factors&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;        &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Since&lt;/span&gt; &lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;tributary&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;P_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;P_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;P_F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;        &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;P_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;P_2&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;river&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;we&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;only&lt;/span&gt; &lt;span class="nx"&gt;consider&lt;/span&gt; &lt;span class="nx"&gt;P_1&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;P_2&lt;/span&gt; &lt;span class="nx"&gt;since&lt;/span&gt;        &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;those&lt;/span&gt; &lt;span class="nx"&gt;faces&lt;/span&gt; &lt;span class="nx"&gt;above&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;candidates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;But&lt;/span&gt; &lt;span class="nx"&gt;P_2&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;always&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;        &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="nx"&gt;tributary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;so&lt;/span&gt; &lt;span class="nx"&gt;we&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;may&lt;/span&gt; &lt;span class="nx"&gt;assume&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;ignores&lt;/span&gt;        &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;very&lt;/span&gt; &lt;span class="kr"&gt;final&lt;/span&gt; &lt;span class="nx"&gt;tributary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt; &lt;span class="nx"&gt;P_2&lt;/span&gt; &lt;span class="nx"&gt;actually&lt;/span&gt; &lt;span class="nx"&gt;lies&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt;         &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;second&lt;/span&gt; &lt;span class="nx"&gt;period&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;river&lt;/span&gt;        &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;P_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;P_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tributary&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;P_1&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;valid_factors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;            &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P_1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;Finally&lt;/span&gt; &lt;span class="nx"&gt;we&lt;/span&gt; &lt;span class="nx"&gt;must&lt;/span&gt; &lt;span class="nx"&gt;scale&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;factors&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;account&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;reduction&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt; &lt;span class="nx"&gt;multiple&lt;/span&gt;    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cp"&gt;[]&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;face&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;face&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;            &lt;span class="nx"&gt;ratio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;            &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="nx"&gt;ratio&lt;/span&gt;            &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="nx"&gt;ratio&lt;/span&gt;        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Combining &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;all_values_on_form&lt;/span&gt;
with&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;get_recurrence&lt;/span&gt;,
we can parameterize every existing solution!&lt;/p&gt;
&lt;p&gt;As far as Project Euler is concerned, in addition to Problem 137, I was
able to write lightning fast solutions to &lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=66"&gt;Problem
66&lt;/a&gt;, &lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=94"&gt;Problem
94&lt;/a&gt;,&lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=100"&gt;Problem100&lt;/a&gt;,&lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=138"&gt;Problem138&lt;/a&gt;
and&lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=140"&gt;Problem140&lt;/a&gt;using
tools based on the above -- a general purpose library for solving binary
quadratic forms over integers!&lt;/p&gt;
&lt;/div&gt;</summary><category term="Binary Quadratic Form"></category><category term="Conway"></category><category term="Conway's Topograph"></category><category term="Math"></category><category term="Number Theory"></category><category term="Project Euler"></category></entry><entry><title>Finding (Fibonacci) Golden Nuggets Part 1</title><link href="/2011/08/finding-fibonacci-golden-nuggets.html" rel="alternate"></link><updated>2011-08-28T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-08-28:2011/08/finding-fibonacci-golden-nuggets.html</id><summary type="html">&lt;p&gt;As I mentioned in my last set ofposts, the content would go somewhere
and this post will be the first to deliver on that. In fact this is the
&lt;em&gt;all math, no code&lt;/em&gt; first half of a two part post that will deliver. If
you see words like topograph, river, and base and you aren't sure what I
mean, you may want to read that last&lt;a href="http://blog.bossylobster.com/2011/08/conways-topograph-part-3.html"&gt;set of
posts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post, I outline a solution to Project Euler &lt;a href="http://projecteuler.net/index.php?section=problems&amp;amp;id=137"&gt;problem
137&lt;/a&gt;, so stop
reading now if you don't want to be spoiled. There is no code here, but
the &lt;a href="http://blog.bossylobster.com/2011/08/finding-fibonacci-golden-nuggets-part-2.html"&gt;second
half&lt;/a&gt;of
this post has a pretty useful abstraction.&lt;/p&gt;
&lt;p&gt;The problems asks us to consider \[A_F(z) = z F_1 + z\^2 F_2 + z\^3
F_3 + \ldots,\] the generating polynomial for the Fibonacci
sequence&lt;a href="http://www.blogger.com/post-edit.g?blogID=1697307561385480651&amp;amp;postID=8793933354039507148#footnote"&gt;*&lt;/a&gt;.
The problem defines (without stating so), a sequence
\(\left\{z_n\right\}_{n &gt; 0}\) where \(A_F(z_n) = n\) and
asks us to find the values \(n\) for which \(z_n\) is rational.
Such a value \(n\) is called a &lt;em&gt;golden nugget&lt;/em&gt;.As noted in the
problem statement, \(A_F(\frac{1}{2}) = 2\), hence \(z_2 =
\frac{1}{2}\) is rational and \(2\) is the first golden nugget.&lt;/p&gt;
&lt;p&gt;As a first step, we determine a criterion for \(n\) to be a golden
nugget by analyzing the equation \(A_F(z) = n\). With the recurrence
relation given by the Fibonacci sequence as inspiration, we consider
\begin{align*}(z + z\^2)A_F(z) =z\^2 F_1 &amp;amp;+ z\^3 F_2 + z\^4 F_3
+ \ldots\\ &amp;amp;+z\^3 F_1 + z\^4 F_2 + z\^5 F_3 + \ldots.
\end{align*}Due to the fact that \(F_2 = F_1 = 1\) and the nature
of the recurrence relation, we have \[(z +z\^2)A_F(z) = z\^2 F_2 +
z\^3 F_3 + z\^4 F_4 + \ldots = A_F(z) -z\] which implies \[A_F(z)
= \frac{z}{1 - z -z\^2}.\] Now solving\(A_F(z) = n\), we have
\[z = n - n z - n z\^2 \Rightarrow n z\^2 + (n + 1)z - n = 0.\] In
order for \(n\) to be a golden nugget, we must have the solutions
\(z\) rational. This only occurs if the discriminant \[(n + 1)\^2 -
4(n)(-n) = 5 n\^2 + 2 n + 1\] in the quadratic is the square of a
rational.&lt;/p&gt;
&lt;p&gt;So we now positive seek values \(n\) such that \(5 n\^2 + 2 n + 1 =
m\^2\) for some integer \(m\) (the value \(m\) must be an integer
since a rational square root of an integer can only be an integer.) This
equation is equivalent to \[25n\^2 + 10n + 5 = 5m\^2\] which is
equivalent to \[5m\^2 - (5 n + 1)\^2 = 4.\] This is where Conway's
topograph comes in. We'll use the topograph with the quadratic form
\(f(x, y) = 5 x\^2 - y\^2\) to find our solutions. First note, a
solution is only valuable if \(y \equiv 1 \bmod{5}\) since \(y = 5
n + 1\) must hold. Also, since \(\sqrt{5}\) is irrational, \(f\)
can never take the value \(0\), but \(f(1, 0) = 5\) and\(f(0, 1) =
-1\), hence there is a river on the topograph and the values of \(f\)
occur in a periodic fashion.Finally, since we take pairs \((x, y)\)
that occur on the topograph, we know \(x\) and \(y\) share no
factors. Hence solutions \(f(x, y) = 4\) can come either come from
pairs on the topograph or by taking a pair which satisfies\(f(x, y) =
1\) and scaling up by a factor of \(2\) (we will have \(f(2x, 2y) =
2\^2 \cdot 1 = 4\) due to the homogeneity of \(f\)).&lt;/p&gt;
&lt;p&gt;Starting from the trivial base \(u = (1, 0)\) and\(v = (0, 1)\),
the full period of the river has length \(8\) as seen below:&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/golden_nugget.png)](http://www.bossylobster.com/images/blog/golden_nugget.png)

&lt;/div&gt;

&lt;p&gt;(&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: in the above, the values denoted as combinations of \(u\)
and \(v\) are the vectors for each face on the topograph while the
numbers are the values of \(f\) on these vectors.&lt;/em&gt;) Since every edge
protruding from the river on the positive side has a value of \(4\) on
a side (the value pairs are \((5, 4)\),\((4, 1)\),\((1, 4)\),
and\((4, 5)\)), by the climbing lemma, we know all values above those
on the river have value greater than \(4\). Thus, the only solutions
we are concerned with -- \(f(x, y) = 1\) or \(4\) -- must appear on
the river. Notice on the river, the trivial base \((u, v)\) is
replaced by the base \((9 u + 20 v, 4 u + 9 v)\). This actually gives
us a concrete recurrence for the river and with it we can get a complete
understanding of our solution set.&lt;/p&gt;
&lt;p&gt;When we startfrom the trivial base, we only need consider moving to the
right (orientation provided by the above picture) along the river since
we only care about the absolute value of the coordinates (\(n\) comes
from \(y\), so it must be positive). As such, we have a sequence of
bases \(\left\{(u_k, v_k)\right\}_{k \geq 0}\) with \(u_0 =
(1, 0)\),\(v_0 = (0, 1)\) and recurrence \begin{align*}u_{k + 1}
&amp;amp;= 9 u_k + 20 v_k \\ v_{k + 1} &amp;amp;= 4 u_k + 9 v_k. \end{align*}
This implies that both\(\left\{u_k\right\}\)
and\(\left\{v_k\right\}\)satisfy the same
relation\begin{align*}u_{k + 2} - 9 u_{k + 1} - 9(u_{k + 1} - 9
u_k) &amp;amp;=20 v_{k + 1} - 9(20 v_k) = 20(4 u_k) \\v_{k + 2} - 9
v_{k + 1} - 9(v_{k + 1} - 9 v_k) &amp;amp;=4 u_{k + 1} - 9(4 u_k) = 4(20
v_k). \end{align*} With these recurrences, you can take the three
base solutions on the river and quickly find each successive golden
nugget. Since each value is a coordinate in a vector, it satisfies the
same linear recurrence as the vector. Also, since each of the solution
vectors occur as linear combinations of \(u_k\) and \(v_k\), they
must satisfy the same recurrence as well.&lt;/p&gt;
&lt;p&gt;Since the recurrence is degree two, we need the first two values to
determine the entire sequence. For the first solution we start with
\(u_0 + v_0 = (1, 1)\) and\(u_1 + v_1 = (13, 29)\); for the
second solution we start with \(u_0 + 2 v_0) = (2, 4)\) and\(u_1
+ 2 v_1 = (17, 38)\); andfor the third solution we start with \(5
u_0 + 11 v_0 = (5, 11)\) and\(5 u_1 + 11 v_1 = (89, 199)\). For
the second solution, since \(f(1, 2) = 1\), we use homogeneity to
scale up to \((2, 4)\) and \((34, 76)\) to start us off. With these
values, we take the second coordinate along the recurrence and get the
following values:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border="1" style="border-collapse: collapse;"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;
n&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th&gt;
First&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th&gt;
Second&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th&gt;
Third&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
0&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
1&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;29&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;76&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;199&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;521&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;1364&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;3571&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
3&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;9349&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;24476&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;64079&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
4&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;167761&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;439204&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;1149851&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
5&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;3010349&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;7881196&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;20633239&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
6&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;54018521&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;141422324&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;370248451&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
7&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;969323029&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;2537720636&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;6643838879&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
8&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;17393796001&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;45537549124&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;119218851371&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
9&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;312119004989&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;817138163596&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;2139295485799&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
10&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;5600748293801&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;14662949395604&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;div style="text-align: center;"&gt;&lt;/p&gt;
&lt;p&gt;38388099893011&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;We don't get our fifteenth golden nugget candidate (value must be one
more than a multiple of \(5\)) until \(5600748293801\), which yields
\(\boxed{n = 1120149658760}\). By no means did I do this by hand in
real life; I didn't make a pretty representation of the river either. I
just wanted to make the idea clear without any code. To get to the code
(and the way you should approach this stuff), move on to the&lt;a href="http://blog.bossylobster.com/2011/08/finding-fibonacci-golden-nuggets-part-2.html"&gt;second
half&lt;/a&gt;
of this post.&lt;/p&gt;
&lt;div id="footnote"&gt;

*\*The Fibonacci sequence is given by \\(F\_0 = 0\\),\\(F\_1 =
1\\),and\\(F\_{n} =F\_{n - 1} +F\_{n - 2}\\).*

&lt;/div&gt;</summary><category term="Binary Quadratic Form"></category><category term="Conway"></category><category term="Conway's Topograph"></category><category term="Math"></category><category term="Number Theory"></category><category term="Project Euler"></category></entry><entry><title>Conway's Topograph Part 1</title><link href="/2011/08/conways-topograph-part-1.html" rel="alternate"></link><updated>2011-08-23T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-08-23:2011/08/conways-topograph-part-1.html</id><summary type="html">&lt;p&gt;This is the first in a series of three blog posts. In the following
we'll investigate a few properties of an object called Conway's
topograph. &lt;a href="http://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John
Conway&lt;/a&gt; conjured up a
way to understand a binary quadratic form &amp;ndash; a very important algebraic
object &amp;ndash; in a geometric context. This is by no means original work, just
my interpretation of some key points from his&lt;a href="http://www.amazon.com/Sensual-Quadratic-Carus-Mathematical-Monographs/dp/0883850303"&gt;The Sensual (Quadratic)
Form&lt;/a&gt;that
I'll need for some other posts.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="p1"&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

**Definition**: A binary quadratic form \\(f\\) is an equation of the
form:

&lt;/div&gt;

&lt;div class="p1"&gt;

\\[f(x, y) = A x\^2 + H x y + B y\^2.\\]

&lt;/div&gt;

&lt;div class="p1"&gt;

That is, a function of two variables which is homogeneous of degree two.
The coefficients \\(A\\), \\(H\\), and \\(B\\) and variables \\(x\\) and
\\(y\\) are often real numbers, rational numbers or integers.&lt;span
class="Apple-style-span"&gt;\\(\\Box\\)&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;
&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;When we require the coefficients \\(A\\),
\\(H\\), and \\(B\\) as well as the variables \\(x, y\\) to be integers,
we get an integer--valued form. In his *Disquisitiones Arithmeticae*,
Gauss asked (and largely answered) the fundamental question: what
integer values can each form take? For example, you may have seen the
form&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;\\[f(x, y) = x\^2 + y\^2,\\]&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;where it was determined that the only
primes (Gaussian primes) occuring were \\(2\\) and those odd primes
congruent to 1 modulo 4.&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;
&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;As each form \\(f\\) is homogenous degree
two, \\(f(\\lambda x, \\lambda y) = \\lambda\^2 f(x, y)\\). As a result,
if we can understand the values of \\(f\\) for pairs \\((x, y)\\) which
don't share any factors, we can understand the entire set of values that
\\(f\\) takes. Also, letting \\(\\lambda = -1\\), there is no change in
the value of \\(f\\) since \\(\\lambda\^2 = 1\\), hence it suffices to
think of \\(v = (x, y)\\) as \\(\\pm v\\), i.e. \\(\\left\\{(x, y), (-x,
-y)\\right\\}\\).&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;
&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;For integers \\(x\\) and \\(y\\), any
point \\((x, y)\\) can be expressed as an integral linear combination of
the vectors \\(e\_1 = (1, 0)\\) and \\(e\_2 = (0, 1)\\). So if we like,
we can express all relevant inputs for \\(f\\) in terms of two vectors.
However, instead considering \\(e\_2 = (1, 1)\\), we have&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;\\[(x - y) \\cdot e\_1 + y \\cdot e\_2 =
(x, y)\\]&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;and realize a different pair \\(e\_1,
e\_2\\) which again yield all possible integer valued vectors as
integral linear combinations.&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;
&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;**Definition**:A *strict base*is an
ordered pair \\((e\_1, e\_2)\\) whose integral linear combinations are
exactly all vectors with integer coordinates. A *lax base*is a set
\\(\\left\\{\\pm e\_1, \\pm e\_2\\right\\}\\) obtained from a strict
base.\\(\\Box\\)&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;
&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;**Definition**:A *strict superbase*is
an ordered triple \\((e\_1, e\_2, e\_3)\\), for which \\(e\_1 + e\_2 +
e\_3 = (0, 0)\\) and \\((e\_1, e\_2)\\) is a strict base (i.e., with
strict vectors), and a *lax superbase*is a set\\(\\langle\\pm e\_1,
\\pm e\_2, \\pm e\_3\\rangle\\) where \\((e\_1, e\_2, e\_3)\\) is a
strict superbase.\\(\\Box\\)&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;
&lt;/span&gt;

&lt;/div&gt;

&lt;div class="p1"&gt;

&lt;span class="Apple-style-span"&gt;For our (and Conway's) purposes, it is
useful to consider the lax notions and leave the strict notions as an
afterthought since a binary quadratic form is unchanged given a sign
change. From here forward, for a vector \\(v\\), we use the notation
\\(v\\) interchangeably with \\(\\pm v\\) and when referring to a
base/superbase, we are referring to the lax equivalent of these
notions.&lt;/span&gt;

Follow along to [Part
2](http://blog.bossylobster.com/2011/08/conways-topograph-part-2.html).

**Update**: *This material is intentionally aimed at an intermediate
(think college freshman/high school senior) audience. One can go deeper
with it, and I'd love to get more technical off the post.*

&lt;/div&gt;</summary><category term="Algebra"></category><category term="Binary Quadratic Form"></category><category term="Conway"></category><category term="Conway's Topograph"></category><category term="Math"></category><category term="Number Theory"></category></entry><entry><title>Conway's Topograph Part 2</title><link href="/2011/08/conways-topograph-part-2.html" rel="alternate"></link><updated>2011-08-23T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-08-23:2011/08/conways-topograph-part-2.html</id><summary type="html">&lt;p&gt;This is the second (continued from&lt;a href="http://blog.bossylobster.com/2011/08/conways-topograph-part-1.html"&gt;Part
1&lt;/a&gt;)in
a series of three blog posts. In the following we'll investigate a few
properties of an object called Conway's topograph.&lt;a href="http://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John
Conway&lt;/a&gt;conjured up a
way to understand a binary quadratic form &amp;ndash; a very important algebraic
object &amp;ndash; in a geometric context. This is by no means original work, just
my interpretation of some key points from his&lt;a href="http://www.amazon.com/Sensual-Quadratic-Carus-Mathematical-Monographs/dp/0883850303"&gt;The Sensual (Quadratic)
Form&lt;/a&gt;that
I'll need for some other posts.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;In the following, as mentioned in Part 1, "when referring to a
base/superbase, we are referring to the lax equivalent of these
notions."&lt;/p&gt;
&lt;p&gt;To begin to form the topograph, note each superbase \(\left\{e_1,
e_2, e_3\right\}\) contains only three bases
\[\left\{e_1, e_2\right\}, \left\{e_2, e_3\right\},
\left\{e_3, e_1\right\}\]
as subsets. Going the other direction, a base \(\left\{e_1,
e_2\right\}\) can only possibly be contained as a subset of two
superbases:
\[\langle e_1, e_2, (e_1 + e_2)\rangle, \langle e_1, e_2,
(e_1 - e_2)\rangle.\]
With these two facts in hand, we can begin to form the geometric
structure of the topograph. The interactions between bases and
superbases (as well as the individual vectors themselves) give us the
form. In the graph, we join each superbase (\(\bigcirc\)) to the
three bases (\(\square\)) in it.&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_edges_nodes.png)](http://www.bossylobster.com/images/blog/conway_edges_nodes.png)

&lt;/div&gt;

&lt;p&gt;Each edge connecting two superbases (\(\bigcirc\)) represents a base
and we mark each of these edges with a (\(\square\)) in the middle.
Since each base can only be in two superbases, we have well--defined
endpoints for each base (edge). Similarly, since each superbase contains
three bases as subsets, each superbase (endpoint) has three bases
(edges) coming out of it.&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_face.png)](http://www.bossylobster.com/images/blog/conway_face.png)

&lt;/div&gt;

&lt;p&gt;As we traverse each edge (base) surrounding a given vector (\(e_1\)
above), we move from superbase (vertex) to superbase (vertex), and form
a face. Starting from a base \(e_1, e_2\), traveling along each of
the new faces encountered we begin to form the full (labeled) topograph
below:&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_growing_graph.png)](http://www.bossylobster.com/images/blog/conway_growing_graph.png)

&lt;/div&gt;

&lt;p&gt;Notice the &lt;em&gt;values&lt;/em&gt; of \(f\) on the combinations of \(e_1\) and
\(e_2\) is immaterial to the above discussion, hence the shape of the
topograph doesn't depend on \(f\).&lt;/p&gt;
&lt;p&gt;If we know the values of \(f\) at some superbase, it is actually
possibly to find the values of \(f\) at vectors (faces) we encounter
on the topograph without actually knowing \(f\).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Claim&lt;/strong&gt;:For vectors \(v_1, v_2\),
\[f(v_1 + v_2) + f(v_1 - v_2) = 2\left(f(v_1) +
f(v_2)\right)\]
&lt;strong&gt;Proof&lt;/strong&gt;: Exercise. (If you really can't get it, let me know in the
comments.) \(\Box\)&lt;/p&gt;
&lt;p&gt;This implies that if
\[a = f(v_1), \quad b = f(v_2), \quad c = f(v_1 + v_2), \quad d
= f(v_1 - v_2)\]
then \(d\), \(a + b\), \(c\) form an arithmetic progression with
common difference \(h\). This so--called &lt;em&gt;Arithmetic Progression
Rule&lt;/em&gt;allows us to mark each edge with a direction based on the value of
\(h\). Hence if \(d \&amp;lt; a + b \&amp;lt; c\), we have \(h &gt; 0\) and the
following directed edge:&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_directed_edge.png)](http://www.bossylobster.com/images/blog/conway_directed_edge.png)

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: left;"&gt;

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: left;"&gt;

Obviously starting from a base \\(e\_1, e\_2\\), one wonders if it is
possible to move to any pair \\((x, y)\\) with \\(x\\) and \\(y\\)
coprime along the topograph. It turns out that we can; the topograph
forms a structurecalled a tree, and all nodes are connected.

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: left;"&gt;



&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: left;"&gt;

**Lemma**: (Climbing Lemma) Given a superbase \\(Q\\) with the
surrounding faces taking values \\(a\\), \\(b\\), and \\(c\\) as below,
if the \\(a\\), \\(b\\) and the common difference \\(h\\) are all
positive, then \\(c\\) is positive and the other two edges at
\\(Q\\)point away from \\(Q\\).

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_directed_edge_superbase.png)](http://www.bossylobster.com/images/blog/conway_directed_edge_superbase.png)

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:First \(c\) is positive because \(h = c - (a + b)\),
hence \(c = a + b + h &gt; 0\). The two other edges at \(Q\) have
common differences \((a + c) - b\) and \((b + c) - a\). Since \(c =
a + b + h\) is greater than both \(a\)and \(b\), these differences
are positive.\(\Box\)&lt;/p&gt;
&lt;p&gt;Notice also that this establishes two new triples \((a, a + b + h, 2 a
+ h)\) and \((b, a + b + h, 2 b + h)\) that continue to point away
from each successive superbase and hence &lt;em&gt;climb&lt;/em&gt;the topograph. We can
use this lemma (along with a specific form) to show that there are no
cycles in the topograph, i.e. the topograph doesn't loop back on
itself.&lt;/p&gt;
&lt;p&gt;Consider the form which takes the following values at a given
superbase:&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_no_cycle.png)](http://www.bossylobster.com/images/blog/conway_no_cycle.png)

&lt;/div&gt;

&lt;p&gt;Due to the symmetry, we may consider traveling along an edge in any
direction from this superbase identically. Picking an arbitrary
direction, we reach the following superbase:&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_connected.png)](http://www.bossylobster.com/images/blog/conway_connected.png)

&lt;/div&gt;

&lt;p&gt;Since the values must increase indefinitely as laid out by the climbing
lemma, the form can't loop back on itself; if it were to, it would need
to loop back to a smaller value. Since this holds in all directions from
the original well, there are no cycles.&lt;/p&gt;
&lt;p&gt;Follow along to &lt;a href="http://blog.bossylobster.com/2011/08/conways-topograph-part-3.html"&gt;Part
3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;This material is intentionally aimed at an intermediate
(think college freshman/high school senior) audience. One can go deeper
with it, and I'd love to get more technical off the post.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;All images were created with the
&lt;a href="http://www.texample.net/tikz/examples/"&gt;tikz&lt;/a&gt; LaTeX library and can be
compiled with native LaTeX if pgf is installed.&lt;/em&gt;&lt;/p&gt;</summary><category term="Algebra"></category><category term="Binary Quadratic Form"></category><category term="Conway"></category><category term="Conway's Topograph"></category><category term="Math"></category><category term="Number Theory"></category></entry><entry><title>Conway's Topograph Part 3</title><link href="/2011/08/conways-topograph-part-3.html" rel="alternate"></link><updated>2011-08-23T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-08-23:2011/08/conways-topograph-part-3.html</id><summary type="html">&lt;p&gt;This is the third (continued from&lt;a href="http://blog.bossylobster.com/2011/08/conways-topograph-part-2.html"&gt;Part
2&lt;/a&gt;)in
a series of three blog posts. In the following we'll investigate a few
properties of an object called Conway's topograph.&lt;a href="http://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John
Conway&lt;/a&gt;conjured up a
way to understand a binary quadratic form &amp;ndash; a very important algebraic
object &amp;ndash; in a geometric context. This is by no means original work, just
my interpretation of some key points from his&lt;a href="http://www.amazon.com/Sensual-Quadratic-Carus-Mathematical-Monographs/dp/0883850303"&gt;The Sensual (Quadratic)
Form&lt;/a&gt;that
I'll need for some other posts.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;: For the form \(f(x, y) = a x\^2 + h x y + b y\^2\), we
define the &lt;em&gt;discriminant&lt;/em&gt;as the value \(ab -
\left(\frac{1}{2}h\right)\^2\).\(\Box\)&lt;/p&gt;
&lt;p&gt;The base \((1, 0)\) and \((0, 1)\) take values \(a\)and \(b\)
on the form in the Definition above and are part of a sequence with
common difference \(h\). In fact, if we know the values \(a'\),
\(b'\) and the difference \(h'\) at any base (edge in the
topograph), the value \(a'b' - \left(\frac{1}{2}h'\right)\^2\) is
independent of the base and the direction (left or right) which
determines the sign of \(h'\) and hence equal to the discriminant. To
see this,first note the sign of \(h'\) is immaterial since it is
squared. Also,consider the two other bases (edges) in the superbase. As
in the proof of the climbing lemma, one base takes values \(a' = a\)
and \(b' = a + b + h\) with common difference \(h' = 2a + h\) which
gives
\begin{align*}
a'b' - \left(\frac{1}{2}h'\right)\^2 &amp;amp;= a(a + b + h) -
\frac{1}{4}\left(2a + h\right)\^2 \\
&amp;amp;= a\^2 + a b + a h - \left(a\^2 + a h + \frac{1}{4} h\^2\right)
\\
&amp;amp;= ab - \left(\frac{1}{2}h\right)\^2.
\end{align*}
Similarly the other base in the given superbase gives
\begin{align*}
a'b' - \left(\frac{1}{2}h'\right)\^2 &amp;amp;= (a + b + h)b -
\frac{1}{4}\left(2b + h\right)\^2 \\
&amp;amp;= b\^2 + a b + b h - \left(b\^2 + b h + \frac{1}{4} h\^2\right)
\\
&amp;amp;= ab - \left(\frac{1}{2}h\right)\^2.
\end{align*}
Having showed that there are no cycles when starting from a given
superbase, our work in understanding the topographis not complete. We
haven't actually showed that we can get from one superbase to any other
superbases within the topograph. To show this, we'll use the
discriminant and the following.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;: A superbase \(W\) is called a well if all the edges at
\(W\) point away from \(W\).&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_well.png)](http://www.bossylobster.com/images/blog/conway_well.png)\\(\\Box\\)

&lt;/div&gt;

&lt;p&gt;Notice a well is dependent on the values, hence depends on the form
\(f\). In a positive--valued topograph, we may find a well by
traveling along the topograph in the opposite direction of the edges.
Eventually, we must encounter a superbase where all arrows point out (as
above), leaving us nowhere to travel and thus becoming our well. This is
because, assuming the topograph is positive--valued, we can only
decrease in value for so long (eventually the values must approach the
minimum).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lemma&lt;/strong&gt;: (The Well Lemma) For a positive--valued form \(f\) and a
well (with respect to \(f\)) \(W\), the three values \(f\) takes
on the faces in \(W\) are the smallest values that \(f\) takes on
the topograph.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;:Using the labels from the well in the definition above, the
&lt;em&gt;Arithmetic Progression Rule&lt;/em&gt;for our differences gives
\[2\alpha = b + c - a, \quad 2\beta = c + a - b, \quad 2\gamma = a
+ b - c\]
and solving,
\[a = \beta + \gamma, \quad b = \alpha + \gamma, \quad c = \beta
+ \alpha.\]
Let the superbase \(W = \left\{e_1, e_2, e_3\right\}\). Since
\(W\) is a superbase, we may write any vector as
\[v = m_1 e_1 + m_2 e_2 + m_3 e_3\]
for \(m_1\), \(m_2\), \(m_3 \in \mathbf{Z}\). Also due to the
fact that \(W\) is a superbase, \(e_1 + e_2 + e_3 = (0, 0)\) and
so we may also write
\[v = (m_1 - k) e_1 + (m_2 - k) e_2 + (m_3 - k) e_3\]
for \(k \in \mathbf{Z}\). From this it is clear only the differences
of the \(m_i\) matter. With this as our inspiration we write
\[f(v) = \alpha(m_2 - m_3)\^2 + \beta(m_1 - m_3)\^2 +
\gamma(m_1 - m_2)\^2,\]
a formula discovered by Selling.&lt;/p&gt;
&lt;p&gt;To verify this, notice both sides of the equation are quadratic forms in
\(v\) and
\begin{align*}
f(e_1) = a &amp;amp;= \beta + \gamma = \alpha \cdot 0\^2 + \beta \cdot
1\^2 + \gamma \cdot 1\^2 \\
f(e_2) = b &amp;amp;= \alpha + \gamma = \alpha \cdot 1\^2 + \beta \cdot
0\^2 + \gamma \cdot (-1)\^2 \\
f(e_3) = c &amp;amp;= \beta + \alpha = \alpha \cdot (-1)\^2 + \beta \cdot
(-1)\^2 + \gamma \cdot 0\^2.
\end{align*}
hence they must be equal since both sides are quadratics that agree on
more than two points.&lt;/p&gt;
&lt;p&gt;If two of the \(m_i\) are equal, then \(v\) must be an integral
multiple of the third vector, hence the value \(f(v)\) will be at
least as largeas the value of \(f\) on the third vector. If not, all
the differences must be non--zero (hence greater than or equal to
\(1\) in absolute value, since integers), thus
\[f(v) \geq \alpha \cdot 1\^2 + \beta \cdot 1\^2 + \gamma \cdot
1\^2\]
which is greater than or equal to each of \(a = \beta + \gamma\),
\(b = \alpha + \gamma\), and \(c = \beta + \alpha\) since all
of\(\alpha\), \(\beta\), and \(\gamma\) are non--negative.
\(\Box\)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Corollary&lt;/strong&gt;: The topograph is connected; one may travel along the
topograph from any given superbase to any other.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: Using the same quadratic form \(f\) as we did to show the
topograph had no cycles, we can show it is connected. Any arbitrary
superbase is on the topograph, hence must be in some connected component
of the topograph, but there may be more than one component. Since
\(f\) is positive--valued, we must have some well in this component.
But, by the above, the values at a well must be the absolute lowest
values \(f\) takes on the topograph. This implies the well must take
the values \(1\),\(1\),\(1\)and shows all superbases must be in
the same component. \(\Box\)&lt;/p&gt;
&lt;p&gt;From this point, we will concentrate on a special type of form relevant
to our discussion. For a form \(f\) which takes both positive and
negative values, but never \(0\), the topograph has a special path
thatseparates the which separates the faces where takes a positive
value and those where \(f\) takes a negative value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Claim&lt;/strong&gt;: If a form \(f\) takes both positive and negative values,
but not zero, then there is a unique path of connected edges separating
the positive and negative values. What's more, the values that occur on
this river do so periodically.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: Since the topograph is connected, there must be some edge
where positive and negative values meet. As we proceed along adjacent
edges, we can choose to follow a path of edges which will separate
positive and negative (each subsequent value must be positive or
negative, allowing us to "turn" left or right).&lt;/p&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;

[![](http://www.bossylobster.com/images/blog/conway_river.png)](http://www.bossylobster.com/images/blog/conway_river.png)

&lt;/div&gt;

&lt;p&gt;On first sight, there is no reason that this path should be unique.
However, with the climbing lemma in mind, starting on the positive side
of the path and moving away from the negative values, we must have only
positive values. Using the logic of the climbing lemma instead with
negative values, we similarly see that starting on the negative side and
more away from the positive values will yield all negative numbers below
the path. Hence nowhere above the path can positive and negative values
meet and similarly below. Thus the path must be unique.&lt;/p&gt;
&lt;p&gt;To show this path is periodic, we must utilize the discriminant. For
each edge along the path, we have some positive value \(a\) and a
negative \(b\) (by definition of the path) and the common difference
\(h\).Thus the determinant \(D\) must be negative since the product
\(ab\) is, hence
\[\left|D\right| = \left|ab\right| +
\left(\frac{1}{2}h\right)\^2.\]
Thus, both \(\left(\frac{1}{2}h\right)\^2\) and
\(\left|ab\right|\) are bounded by \(\left|D\right|\). So
\(a\), \(b\) and \(h\) are bounded (by \(\left|D\right|\).
Thus we have finitely many possible triples \((a, b, h)\), hence some
value must be repeated in the path. This forces the path to be periodic
since the triple starting from one triple \((a, b, h)\) determines
next triple along the path and hence the entire path.&lt;/p&gt;
&lt;p&gt;This path is so crucial that we give it it's own name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;: If a form \(f\) takes both positive and negative
values, but not zero, we call the path separating the positive and
negative values the &lt;strong&gt;river&lt;/strong&gt;. \(\Box\)&lt;/p&gt;
&lt;p&gt;Thanks for reading, I'll make use of all this in a few days!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;:&lt;em&gt;This material is intentionally aimed at an intermediate
(think college freshman/high school senior) audience. One can go deeper
with it, and I'd love to get more technical off the post.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span class="Apple-style-span"
style="font-style: normal;"&gt;&lt;strong&gt;Update&lt;/strong&gt;:&lt;/em&gt;All images were created with
the&lt;a href="http://www.texample.net/tikz/examples/"&gt;tikz&lt;/a&gt;LaTeX library and can
be compiled with native LaTeX if pgf is installed.&lt;em&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;</summary><category term="Algebra"></category><category term="Binary Quadratic Form"></category><category term="Conway"></category><category term="Conway's Topograph"></category><category term="Math"></category><category term="Number Theory"></category></entry><entry><title>The Lesson V8 Can Teach Python and Other Dynamic Languages</title><link href="/2011/08/lesson-v8-can-teach-python-and-other.html" rel="alternate"></link><updated>2011-08-17T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-08-17:2011/08/lesson-v8-can-teach-python-and-other.html</id><summary type="html">&lt;p&gt;Being unable to completely give up math for computers, I am naturally
drawn to &lt;a href="http://projecteuler.net/"&gt;Project Euler&lt;/a&gt;and as a result
solved a &lt;a href="http://code.google.com/p/dhermes-project-euler/source/browse/#git%2Fpython_code%2Fcomplete"&gt;ridiculous
number&lt;/a&gt;
of the problems posted there while learning Python. A few months
ago(March 13), after reading &lt;a href="http://jsninja.com/"&gt;Secrets of a Javascript
Ninja&lt;/a&gt;, I decided to begin converting my&lt;a href="https://github.com/dhermes/ProjectEuler/commit/663ee638c6b8255d00b84173b0ecad1af2c53af1"&gt;solutions
to
Javascript&lt;/a&gt;.A
month and a half later I &lt;a href="https://github.com/dhermes/ProjectEuler/commit/72c092ccf82c3933944584c2479d2e7ca0ef06f7"&gt;came
back&lt;/a&gt;
to it, and then finally two months after that, I &lt;a href="https://github.com/dhermes/ProjectEuler/commit/f19f85978aeeac3310b2175812d53bbea884d73b"&gt;began to take it
seriously&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After making this decision, I noticed the prime Sieve of Eratosthenes
was mighty fast when I ran it in Chrome, maybe even faster than my
beloved Python. I tabled the thought for a little, but never really
forgot it. So a few weeks ago (early August 2011), I &lt;em&gt;finally&lt;/em&gt; got a
working install of &lt;a href="http://nodejs.org/"&gt;node&lt;/a&gt; running on my machine and
was able to make more of this thought. (I say &lt;em&gt;finally installed&lt;/em&gt;
because on two previous tries I gave up because of conflicts with my
version of gcc, coupled with the fact that I had no good reason to use
node.)&lt;/p&gt;
&lt;p&gt;When I originally did the conversion, I had skipped problem 8, because
my implementation required pulling in the problem data as text from a
file. While hanging out with &lt;a href="http://twitter.com/#!/borismus"&gt;Boris&lt;/a&gt; and
&lt;a href="https://twitter.com/#!/ebidel"&gt;Eric&lt;/a&gt; from on the Chrome Developer
Relations team, I decided to give it another go on node (xhr requests
not allowed) and found it to be quite simple with &lt;span
class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;readFileSync&lt;/span&gt;
in the node native &lt;span class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;fs&lt;/span&gt;
module. After witnessing this,over this weekend, I decided to harness
the power of &lt;a href="http://code.google.com/p/v8/"&gt;V8&lt;/a&gt; -- the Javascript engine
that powers Chrome and node -- and run all my scripts locally with node.
So over a two day period, I
&lt;a href="http://code.google.com/p/dhermes-project-euler/source/detail?r=87b2cf2128be9d13d3b374d8eba9cb4ad808c982"&gt;hack-hack-hacked&lt;/a&gt;
my way into converting the Python solutions for problems 11 through 50
(theremaining unconverted)into their Javascript equivalents, while
also converting a good portion of my hefty
&lt;a href="http://code.google.com/p/dhermes-project-euler/source/browse/python_code/functions.py"&gt;functions&lt;/a&gt;
module.&lt;/p&gt;
&lt;p&gt;Once this was done, I had also found I could replace most of the nice
parts about Python with my own equivalent. For example, I was able to
replace functionality I needed from the Python&lt;span
class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;set&lt;/span&gt;
datatype with&lt;/p&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
function uniq(arr) {  var result = {};  for (var i = 0, val; val = arr[i]; i++) {    result[val] = true;  }  return Object.keys(result);};
~~~~&lt;/p&gt;
&lt;p&gt;and I was able to replace the (amazingly) useful Python handling of
&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;long&lt;/span&gt;
integers with a non-native node package called
&lt;a href="https://github.com/substack/node-bigint"&gt;bigint&lt;/a&gt;that uses libgmp among
other usings. Of course, for Python's secret sauce -- the list
comprehension -- I was able to substitute enough &lt;span
class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;filter&lt;/span&gt;,
&lt;span class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;reduce&lt;/span&gt;
and &lt;span class="Apple-style-span"
style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;map&lt;/span&gt;
statements to almost make it seem like I had never left Pythonland.
After doing all this, I also ended up writing my own
&lt;a href="http://code.google.com/p/dhermes-project-euler/source/browse/js/operator.js"&gt;operator.js&lt;/a&gt;
to replace the wonderful Python native
module&lt;a href="http://docs.python.org/library/operator.html"&gt;operator&lt;/a&gt;, and my
own
&lt;a href="http://code.google.com/p/dhermes-project-euler/source/browse/js/timer.js"&gt;timer.js&lt;/a&gt;
to stand in for the Python native
module&lt;a href="http://docs.python.org/library/time.html"&gt;time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, I had working code and could do a side by side comparison of V8
and the Python interpreter.&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;I added a column
for&lt;a href="http://pypy.org/"&gt;PyPy&lt;/a&gt;, a just in time implementation of
Python.&lt;/em&gt;Here is what I found (averaging the runtime over 10 separate
calls to each function, the results are):&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border="1" style="border-collapse: collapse;"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th align="left"&gt;
Problem&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th align="left"&gt;
Answer&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th align="left"&gt;
Python&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th align="left"&gt;
Javascript&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th align="left"&gt;
Ratio (PY/JS)&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;th align="left"&gt;
PyPy&lt;/p&gt;
&lt;p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
1*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
233168&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1804ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1215ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1.48&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
385ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
2*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4613732&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
247ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
102ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2.42&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
85ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
3*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6857&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4725ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1508ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3.13&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
582ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
4&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
906609&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8708ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
149ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
58.44&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
282ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
5*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
232792560&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
136ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
186ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
0.73&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
114ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
6*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
25164150&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
10ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2.50&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
7&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
104743&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
656ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
12ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
54.67&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
11ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
8*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
40824&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
18045ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5014ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3.60&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
7042ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
9&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
31875000&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
610ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
203.33&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
10&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
142913828922&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6628ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
167ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
39.69&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
116ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
11&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
70600674&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
49ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
24.50&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
11ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
12&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
76576500&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5127ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
203ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
25.26&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
100ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
13*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5537376230&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1795ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
10710ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
0.17&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1423ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
14&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
837799&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5572ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1712ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3.25&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
362ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
15*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
137846528820&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
54ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
18ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3.00&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
55ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
16*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1366&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1844ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
265ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6.96&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
462ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
17&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
21124&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
87ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
21.75&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
7ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
18*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1074&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2291ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1790ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1.28&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1090ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
19*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
171&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2254ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
336ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6.71&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
342ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
20*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
648&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1061ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
9154ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
0.12&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
374ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
21&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
31626&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
18910ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1038ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
18.22&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
728ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
22&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
871198282&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
188ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
7ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
26.86&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
23&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4179871&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
83318ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1120ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
74.39&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1295ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
24*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2783915460&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
206ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
210ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
0.98&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
139ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
25&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4782&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5865ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
35ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
167.57&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
232ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
26&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
983&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
28ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
18ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1.56&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
27&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
-59231&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
645738ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
22536ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
28.65&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
28288ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
28*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
669171001&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8509ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1037ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8.21&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
981ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
29&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
9183&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
184ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
96ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1.92&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
20ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
30&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
443839&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
52167ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1037ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
50.31&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
877ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
31&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
73682&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
9606ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
257ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
37.38&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
154ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
32&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
45228&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
206888ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
12096ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
17.10&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4266ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
33&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
100&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
300ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
50.00&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
15ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
34&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
40730&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
7462ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2447ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3.05&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
247ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
35&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
55&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8617ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
848ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
10.16&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
242ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
36&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
872187&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
189788ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2183ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
86.94&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3532ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
37&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
748317&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2389022ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
71845ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
33.25&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
61551ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
38&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
932718654&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
506ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
10ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
50.60&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
12ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
39&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
840&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
178ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
29.67&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
12ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
40*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
210&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
326ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
202ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1.61&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
119ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
41&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
7652413&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2627ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
133ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
19.75&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
65ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
42&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
162&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
65ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
7ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
9.29&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
43&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
16695334890&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
38ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
19.00&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
44&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5482660&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
384013ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
27744ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
13.84&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6621ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
45*&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
1533776805&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
17ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4.25&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
46&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
5777&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2864ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
202ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
14.18&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
65ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
47&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
134043&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
400967ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
12838ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
31.23&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
4425ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
48&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
9110846700&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
46ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
16ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
2.88&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
6ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
49&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
296962999629&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
115ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
8ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
14.38&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
13ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
50&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
997651&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
3277ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
80ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
40.96&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;td&gt;
51ms&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan="6"&gt;
*These were very quick to run, so the runtimes are the time taken to
run 10000 times.&lt;/p&gt;
&lt;p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;As you'll notice, standard Python gets its butt kicked. I was kind of
saddened by this, but in the end, just giddy that our web is faster
because of it (90% of my life is digital) and also that we can do
scripting faster on the server side (attribute to&lt;a href="http://twitter.com/#!/borismus"&gt;Boris
Smus&lt;/a&gt;) because of the node project
(thanks Ryan Dahl).&lt;/p&gt;
&lt;p&gt;Standard Python is actually slower in 46 of the 50 problems. In 28 of
the 46 node is faster by a factor of 10 or greater, in 9 of those 28 by
a factor of 50 or greater and in 2 of the 9 by a factor of 100 or
greater! The only 4 in which Python was faster were from the &lt;strong&gt;&lt;em&gt;n =
10000&lt;/em&gt;&lt;/strong&gt; sample. In fact, I was able to pinpoint exactly why:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#5 - My own Javascript implementation of &lt;span
    class="Apple-style-span"
    style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;gcd&lt;/span&gt;
    is slower than the native (&lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;from
    fractions import gcd&lt;/span&gt;) Python library (resulting in a
    difference of 50 ms over 10000iterations)&lt;/li&gt;
&lt;li&gt;#13 - The node package &lt;span class="Apple-style-span"
    style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;bigint&lt;/span&gt;
    is slower than the Python native &lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;long
    int&lt;/span&gt;(Javascript is slower by a factor of 6)&lt;/li&gt;
&lt;li&gt;#20 - The node package&lt;span class="Apple-style-span"
    style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;bigint&lt;/span&gt;is
    slower than the Python native&lt;span class="Apple-style-span"
    style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;long
    int&lt;/span&gt;(Javascript isslower by a factor of 8.5)&lt;/li&gt;
&lt;li&gt;#24 - Having to perform two&lt;span class="Apple-style-span"
    style="background-color: white; color: purple; font-family: 'Courier New', Courier, monospace;"&gt;slice&lt;/span&gt;s
    is slower in Javascript than in Python and there is no good way to
    just remove one element (resulting in adifference of 4 ms over
    10000 iterations; a little bit about that
    &lt;a href="http://ejohn.org/blog/javascript-array-remove/"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;

So what, you ask, is that lesson I speak of? Well, Javascript didn't
used to be this fast. How did it get that way? The brilliant and
inspired people behind V8 rethought the Javascript compile steps and
after much work, we now have code that is closer to the metal (attribute
to: [Eric Bidelman](https://twitter.com/#!/ebidel), i.e. closer to
machine code) than we had ever had before. The use of just-in-time
compilation and other incredible techniques has taken a formerly slow
and clunky language (Javascript) which was used well beyond its original
intended scope, and turned it into a damn fast dynamic language.
Hopefully, this movement will make its way to Python and other dynamic
languages and we can all have our code end up this close to the metal.

**Update**: *In response to the comments, I ran the same code on the
same machine, but with PyPy in place of Python. This is the direction I
hope standard Python goes in and commend the guys pumping out faster and
faster just in time implementations over at PyPy. I went through and
counted 20 node wins, 29 PyPy wins and 1 tie. (I reserve the right to
update the post with more detailed metrics.) While I do commend them,
the results don't really belong in this post because PyPy is still an
offshoot. (However, as I understand, they both have ties to C, as PyPy
uses GCC to compile to bytecode and V8 is written in C++. Feel free to
supplement my knowledge in the comments.)*

**Update**: *All benchmarking was run on my Mac Pro Desktop with a3.2
GHz Quad-Core Intel Xeon processor and 4 cores for a total of12 GB 1066
MHz DDR3 memory. I used Python version 2.6.1, node version 0.4.9, and
PyPy version 1.5 (running on top of Python 2.7.1 with GCC 4.0.1).*

&lt;/div&gt;</summary><category term="Benchmark"></category><category term="Comparison"></category><category term="Dynamic Language"></category><category term="Javascript"></category><category term="Javascript Engine"></category><category term="JIT"></category><category term="Just-in Time Compile"></category><category term="node.js"></category><category term="Performance"></category><category term="Project Euler"></category><category term="PyPy"></category><category term="Python"></category><category term="V8"></category></entry><entry><title>Woo hoo</title><link href="/2011/07/woo-hoo.html" rel="alternate"></link><updated>2011-07-22T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-07-22:2011/07/woo-hoo.html</id><summary type="html">&lt;p&gt;It's official, I am a grown up!
&lt;a href="http://code.google.com/apis/inapppayments/articles/index.html"&gt;http://code.google.com/apis/inapppayments/articles/index.html&lt;/a&gt;&lt;/p&gt;</summary><category term="Google"></category><category term="Google Codesite"></category><category term="In-App Payments"></category></entry><entry><title>Continued fraction expansions of irrational square roots</title><link href="/2011/07/continued-fraction-expansions-of.html" rel="alternate"></link><updated>2011-07-18T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-07-18:2011/07/continued-fraction-expansions-of.html</id><summary type="html">&lt;p&gt;I had no idea (until this Thursday, July 16) that I had never seen a
proof of the fact that the continued fraction expansion of
\(\sqrt{D}\) is periodic whenever \(D\) is not a perfect square.
But have no fear, I found out about something called a &lt;em&gt;reduced
quadratic irrational&lt;/em&gt; and now have a proof. Here we go.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;:An irrational root \(\alpha\) of a quadratic equation
with integer coefficients is called &lt;em&gt;reduced&lt;/em&gt; if \(\alpha &gt; 1\) and
its conjugate\(\tilde{\alpha}\) satisfies \(-1 \&amp;lt; \tilde{\alpha}
\&amp;lt; 0\).\(\Box\)&lt;/p&gt;
&lt;p&gt;Solutions (since assumed real) of such quadratics can be written
as\$\$\alpha = \frac{\sqrt{D} + P}{Q}\$\$ where \(D, P, Q \in
\mathbf{Z}\) and \(D, Q &gt; 0\). It is also possible (though not
required) to ensure that \(Q\) divides \(D - P\^2\). This is
actually a necessary assumption for some of the stuff I do, is
mentioned&lt;a href="http://en.wikipedia.org/wiki/Periodic_continued_fraction#Relation_to_quadratic_irrationals"&gt;here&lt;/a&gt;and
generally frustrated the heck out of me, so that. As an example for some
enlightenment, notice \$\$\alpha = \frac{2 + \sqrt{7}}{4}\$\$ is
reduced but \(4\) does not divide \(7 - 2\^2\). However, if we write
this as \(\frac{8 + \sqrt{112}}{16}\), we have our desired
condition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;: We say a reduced quadratic irrational \(\alpha\) is
&lt;em&gt;associated&lt;/em&gt; to \(D\) if we can write \$\$\alpha = \frac{P +
\sqrt{D}}{Q}\$\$ and \(Q\) divides \(D - P\^2\).\(\Box\)
&lt;strong&gt;
&lt;/strong&gt;
&lt;strong&gt;Lemma 1&lt;/strong&gt;: Transforming a reduced irrational root \(\alpha\)
associated to \(D\) into its integer part and fractional partvia
\$\$\alpha = \lfloor \alpha \rfloor + \frac{1}{\alpha'},\$\$ the
resulting quadratic irrational \(\alpha'\) is reduced andassociated
to \(D\)as well.(This is what one does during continued fraction
expansion, and as I did with \(\sqrt{2}\) during my&lt;a href="http://blog.bossylobster.com/2011/07/continued-fractions-for-greater-good.html"&gt;last
post&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: Letting \$\$\alpha = \frac{\sqrt{D} + P}{Q}\$\$ and \(X
=\lfloor \alpha \rfloor\), we have \$\$\frac{1}{\alpha'} =
\frac{\sqrt{D} - (QX - P)}{Q}.\$\$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Since \(\sqrt{D}\) is irrational, we must have
    \(\frac{1}{\alpha'} &gt; 0\) and since \(\frac{1}{\alpha'}\)
    is the fractional part we know \$\$0 \&amp;lt;\frac{1}{\alpha'} \&amp;lt; 1
    \Rightarrow\alpha' &gt; 1.\$\$&lt;/li&gt;
&lt;li&gt;Transforming \$\$\alpha' = \frac{Q}{\sqrt{D} - (QX - P)}
    \cdot\frac{\sqrt{D} + (QX - P)}{\sqrt{D} + (QX - P)}
    =\frac{\sqrt{D} + (QX - P)}{\frac{1}{Q}\left(D - (QX -
    P)\^2\right)},\$\$ we have \(P' = QX - P\) and\(Q'
    =\frac{1}{Q}\left(D - (QX - P)\^2\right)\) and need to show
    \(Q' \in \mathbf{Z}\).But \(D - (QX - P)\^2 \equiv D - P\^2
    \bmod{Q}\) and since \(\alpha\) is associated to \(D\),
    \(Q\) must divide this quantity, hence \(Q'\) is an integer.&lt;/li&gt;
&lt;li&gt;Since \(X = \lfloor\frac{\sqrt{D} + P}{Q}\rfloor\) is an
    integer and \(\alpha\) is irrational, we know\(X \&amp;lt;
    \frac{\sqrt{D} + P}{Q}\) hence \(P' = QX - P \&amp;lt; \sqrt{D}\)
    forcing \(\tilde{\alpha}' \&amp;lt; 0\).&lt;/li&gt;
&lt;li&gt;Since \(\alpha &gt; 1\) we know \(X \geq 1 \Leftrightarrow 0
    \leq X - 1\). Thus \begin{align*}\tilde{\alpha} = \frac{P -
    \sqrt{D}}{Q} &amp;amp;\&amp;lt; 0 \leq X - 1 \\ \Rightarrow Q &amp;amp;\&amp;lt; \sqrt{D} +
    (QX - P) \\\Rightarrow Q(\sqrt{D} - (QX - P))&amp;amp;\&amp;lt; D - (QX -
    P)\^2 \\\Rightarrow -\tilde{\alpha}' = \frac{\sqrt{D} - (QX&lt;ul&gt;
&lt;li&gt;P)}{\frac{1}{Q}\left(D - (QX - P)\^2\right)} &amp;amp;\&amp;lt;
1\end{align*} hence \(\tilde{\alpha}' &gt; -1\) and
\(\alpha'\) is reduced.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Since\(Q' =\frac{1}{Q}\left(D - (P')\^2\right)\), we know
    \$\$D - (P')\^2 \equiv Q Q' \equiv 0 \bmod{Q'}\$\$ hence
    \(\alpha'\) is associated to \(D\).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="Apple-style-span" style="font-weight: normal;"&gt;Thus
\(\alpha'\) is both reduced and associated to \(D\).
\(\Box\)&lt;/span&gt;&lt;/strong&gt;
&lt;strong&gt;
&lt;/strong&gt;
&lt;strong&gt;Lemma 2&lt;/strong&gt;: There are finitely many reduced quadratic irrationals
associated to a fixed \(D\).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: As above write an arbitrary reduced irrational as \(\alpha
= \frac{\sqrt{D} + P}{Q}\). Since \(\alpha &gt; 1\)
and\(\tilde{\alpha} &gt; -1\), we know \(\alpha + \tilde{\alpha}
= \frac{2P}{Q} &gt; 0\) hence with the assumption \(Q &gt; 0\) we have
\(P &gt; 0\). Since \(\tilde{\alpha} \&amp;lt; 0\) we also have \(P \&amp;lt;
\sqrt{D}\). Also, since \(\alpha &gt; 1\) by assumption we have \(Q
\&amp;lt; P + \sqrt{D} \&amp;lt; 2\sqrt{D}\) thus there are finitely many choices
for both \(P\) and \(Q\), forcing finitely many reduced quadratic
irrationals associated to a fixed \(D\) (this amount is strictly
bounded above by \(2D\)). \(\Box\)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Claim&lt;/strong&gt;:The continued fraction expansion of \(\sqrt{D}\) is
periodic whenever \(D\) is not a perfect square.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Proof&lt;/strong&gt;: We'll use Lemma 1 to establish a series of reduced quadratic
irrationals associated to \(D\) and then use Lemma 2 to assert this
series must repeat (hence be periodic) due to the finite number of such
irrationals.&lt;/p&gt;
&lt;p&gt;Write \(a_0 = \lfloor \sqrt{D} \rfloor\) and \(\sqrt{D} = a_0 +
\frac{1}{\alpha_0}\). From here, we will prove&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(\alpha_0\) is a reduced quadratic irrational associated to
    \(D\).&lt;/li&gt;
&lt;li&gt;By defining \(a_{i+1} = \lfloor \alpha_i \rfloor\) and
    \(\alpha_i = a_{i + 1} + \frac{1}{\alpha_{i +
    1}}\),\(\alpha_{i + 1}\) is also a reduced quadratic
    irrational associated to \(D\) (assuming all \(\alpha\) up
    until \(i\) are as well).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since \(\frac{1}{\alpha_0}\) is the fractional part of the
irrational \(\sqrt{D}\), we have\$\$0 \&amp;lt; \frac{1}{\alpha_0} \&amp;lt; 1
\Rightarrow \alpha_0 &gt; 1.\$\$By simple algebra, we have
\$\$\alpha_0 = \frac{a_0 + \sqrt{D}}{D - a_0\^2}, \qquad
\tilde{\alpha_0} = \frac{a_0 - \sqrt{D}}{D - a_0\^2}.\$\$ Since
\(a_0\) is the floor, we know \(a_0 - \sqrt{D} \&amp;lt; 0
\Rightarrow\tilde{\alpha_0} \&amp;lt; 0\). Since \(D \in \mathbf{Z}
\Rightarrow \sqrt{D} &gt; 1\) and \(\sqrt{D} &gt; a_0\), we have
\$\$1 \&amp;lt; \sqrt{D} + a_0 \Rightarrow\sqrt{D} - a_0 \&amp;lt; D -
a_0\^2\Rightarrow a_0 - \sqrt{D} &gt; -(D - a_0\^2)\Rightarrow
\tilde{\alpha_0} &gt; -1.\$\$ Thus \(\alpha_0\) is a reduced
quadratic irrational. Since \(P_0 = a_0\) and \(Q_0 = D - a_0\^2
= D - P_0\^2\), \(Q_0\) clearly divides \(D - P_0\^2\) so
\(\alpha_0\) is associated to \(D\) as well.&lt;/p&gt;
&lt;p&gt;Following the recurrence defined, since each \(\alpha_i\) is a
reduced quadratic irrational, each \(a_i \geq 1\). Also, by Lemma 1,
each \(\alpha_{i + 1}\) is reduced and associated to \(D\) since
\(\alpha_0\) is. By Lemma 2, we only have finitely many choices for
these, hence there must be some smallest \(k\) for which \(\alpha_k
= \alpha_0\). Since \(\alpha_{i + 1}\) is determined completely
by \(\alpha_i\) we will then have \(\alpha_{k + j} =
\alpha_j\) for all \(j &gt; 0\), hence the \(\alpha_i\) are
periodic. Similarly, as the \(a_i\) for \(i &gt; 0\) are determined
completely by \(\alpha_{i - 1}\), the \(a_i\) must be periodic as
well, forcing the continued fraction expansion \$\$\sqrt{D} = a_0 +
\cfrac{1}{a_1 +\cfrac{1}{a_2 +\ddots}}\$\$ to be
periodic.\(\Box\)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I
&lt;a href="http://www.proofwiki.org/wiki/Continued_Fraction_Expansion_of_Irrational_Square_Root"&gt;posted this&lt;/a&gt;
on&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="ProofWiki logo" src="/images/175px-Logo.png" /&gt;&lt;/p&gt;
&lt;/div&gt;</summary><category term="Algebra"></category><category term="Continued Fractions"></category><category term="Math"></category><category term="Quadratic Irrational"></category><category term="Square Root"></category></entry><entry><title>Continued Fractions for the Greater Good part 1</title><link href="/2011/07/continued-fractions-for-greater-good.html" rel="alternate"></link><updated>2011-07-10T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-07-10:2011/07/continued-fractions-for-greater-good.html</id><summary type="html">&lt;p&gt;OK, maybe not for the greater good, but still fun. This first post will
be relatively short and sweet, intended to give an introduction for the
posts that will follow.&lt;/p&gt;
&lt;p&gt;Before the introduction, some
&lt;a href="http://en.wikipedia.org/wiki/Continued_fraction#Motivation"&gt;motivation&lt;/a&gt;
courtesy of &lt;a href="http://en.wikipedia.org/wiki/Main_Page"&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;div&gt;

&gt; "...decimal representation has some problems. One problem is that many
&gt; rational numbers lack finite representations in this system. For
&gt; example, the number \\(\\frac{1}{3}\\) is represented by the infinite
&gt; sequence \\((0, 3, 3, 3, 3, \\ldots )\\). Another problem is that the
&gt; constant \\(10\\) is an essentially arbitrary choice, and one which
&gt; biases the resulting representation toward numbers that have some
&gt; relation to the integer \\(10\\). For example, \\(\\frac{137}{1600}\\)
&gt; has a finite decimal representation, while \\(\\frac{1}{3}\\) does
&gt; not, not because \\(\\frac{137}{1600}\\)is simpler than
&gt; \\(\\frac{1}{3}\\), but because \\(1600\\)happens to divide a power
&gt; of \\(10\\) (\\(10\^6 = 1600 \\times 625\\)). Continued fraction
&gt; notation is a representation of the real numbers that avoids both
&gt; these problems.Let us consider how we might describe a number like
&gt; \\(\\frac{415}{93}\\), which is around \\(4.4624\\). This is
&gt; approximately \\(4\\). Actually it is a little bit more than\\(4\\),
&gt; about\\(4 + \\frac{1}{2}\\). But the\\(2\\)in the denominator is
&gt; not correct; the correct denominator is a little bit more
&gt; than\\(2\\) about\\(2 + \\frac{1}{6}\\),
&gt; so\\(\\frac{415}{93}\\)is approximately\$\$4 +
&gt; \\cfrac{1}{2+\\cfrac{1}{6}}.\$\$ But the \\(6\\) in the denominator is
&gt; not correct; the correct denominator is a little bit more than
&gt; \\(6\\), actually \\(6+\\frac{1}{7}\\). So \\(\\frac{415}{93}\\) is
&gt; actually\$\$4 + \\cfrac{1}{2+\\cfrac{1}{6 +\\cfrac{1}{7}}}.\$\$This
&gt; is exact..."

With this in mind, one can define an infinite continued fraction to be
\$\$a\_0 + \\cfrac{1}{a\_1 +\\cfrac{1}{a\_2 +\\ddots}}.\$\$ With the
denominators \\(a\_0, a\_1, a\_2, \\ldots\\), we can define a recurrence
for the finite approximations (convergents) of this value. For example,
the zeroth is \\(a\_0\\) and the first is \\(a\_0 + \\frac{1}{a\_1} =
\\frac{a\_0 a\_1 + 1}{a\_1}\\).

The other motivation (the one I actually learned first in real life) for
continued fractions comes from \\(\\sqrt{2}\\) being represented by an
infinite continued fraction. (Instead of saying a probability of
\\(0.01876\\), people would rather say a \\(1\\) in \\(53\\) chance.) So
we try to write \\(\\sqrt{2} = 1.41421356\\ldots\\) as \\(1 +
\\frac{1}{2.414}\\). But, instead, notice that \$\$\\sqrt{2} = 1 +
(\\sqrt{2} - 1) = 1 + \\frac{1}{\\sqrt{2} + 1}.\$\$ Plugging this into
itself, we have\$\$\\sqrt{2} = 1 + \\cfrac{1}{1 +1 +
\\cfrac{1}{\\sqrt{2} + 1}} =1 + \\cfrac{1}{1 +1 + \\cfrac{1}{1 + 1 +
\\cfrac{1}{\\sqrt{2} + 1}}}\$\$ and notice it can be represented by
\\((1; 2, 2, 2, \\ldots)\\).

Define the \\(n\\)th convergent to be \\(\\frac{h\_n}{k\_n}\\), so above
we have \\(h\_0 = a\_0, k\_0 = 1\\) and\\(h\_1 = a\_0 a\_1 + 1, k\_0 =
a\_1\\).

Claim:\\(h\_n\\) and \\(k\_n\\) satisfy \\begin{align\*}h\_n &amp;= a\_n
h\_{n - 1} + h\_{n - 2} \\\\k\_n &amp;= a\_n k\_{n - 1} + k\_{n -
2}\\end{align\*}along with \\(h\_{-1} = 1, h\_{-2} = 0\\) and
\\(k\_{-1} = 0, k\_{-2} = 1\\).

Proof: The fraction \\(\\frac{h\_n}{k\_n}\\) is converted
into\\(\\frac{h\_{n + 1}}{k\_{n + 1}}\\) simply by changing \\(a\_n\\)
to \\(a\_n + \\frac{1}{a\_{n + 1}}\\) in the final denominator.
Since\$\$\\frac{h\_n}{k\_n} = \\frac{a\_n h\_{n - 1} + h\_{n - 2}}{a\_n
k\_{n - 1} + k\_{n - 2}}\$\$ we similarly have
\\begin{align\*}\\frac{h\_{n + 1}}{k\_{n + 1}} &amp;= \\frac{\\left(a\_n +
\\frac{1}{a\_{n + 1}}\\right)h\_{n - 1} + h\_{n - 2}}{\\left(a\_n +
\\frac{1}{a\_{n + 1}}\\right)k\_{n - 1} + k\_{n - 2}} \\\\ &amp;=
\\frac{a\_{n + 1}(a\_n h\_{n - 1} + h\_{n - 2}) + h\_{n - 1}}{a\_{n +
1}(a\_n k\_{n - 1} + k\_{n - 2}) + k\_{n - 1}} \\\\&amp;= \\frac{a\_{n + 1}
h\_n + h\_{n - 1}}{a\_{n + 1} k\_n + k\_{n - 1}}\\end{align\*}
Thus \\(h\_{n + 1}\\) and \\(k\_{n + 1}\\) satisfy the same recurrence.

It remains to check the initial conditions work, but note
\\begin{align\*}h\_0 &amp;= a\_0 h\_{-1} + h\_{-2} = a\_0 \\cdot 1 + 0 =
a\_0 \\\\k\_0 &amp;= a\_0 k\_{-1} + k\_{-2} = a\_0 \\cdot 0 + 1 =
1\\end{align\*} and\\begin{align\*}h\_1 &amp;= a\_1 h\_{0} + h\_{-1} = a\_0
a\_1 + 1 \\\\k\_1 &amp;= a\_1 k\_{0} + k\_{-1} = a\_1 \\cdot 1 + 0 =
a\_1\\end{align\*} as we checked above. \\(\\Box\\)

Check out my[next
post](http://blog.bossylobster.com/2011/07/continued-fraction-expansions-of.html),
where I actually accomplish something with fractions (or at least
prepare to accomplish something).

&lt;/div&gt;</summary><category term="Algebra"></category><category term="Continued"></category><category term="Fractions"></category><category term="Math"></category></entry><entry><title>Verifying 1and1 Site Ownership with Google Apps</title><link href="/2011/07/verifying-1-site-ownership-with-google.html" rel="alternate"></link><updated>2011-07-03T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-07-03:2011/07/verifying-1-site-ownership-with-google.html</id><summary type="html">&lt;p&gt;Hello freens. I purchased bossylobster.com from &lt;a href="http://1and1.com/"&gt;1&amp;amp;1&lt;/a&gt;
recently with the intent of hosting it on Google App Engine. I soon
found out how delightful this process is. I made a 0.1 version for my
site at &lt;a href="http://bossylobster.appspot.com/"&gt;bossylobster.appspot.com&lt;/a&gt; and
decided to launch by clicking "Add Domain" in the "Application
Settings".&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Application Settings" src="/images/verify1and1_screenshot1.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After clicking this I was greeted with a note: "You must sign up for
Google Apps to register this domain or prove that you already own it."
Great, so now I had to sign up for Google Apps. (As a side note, at the
time this seemed an unnecessary, annoying wrinkle to add my App, but I
now realize the integration with &lt;a href="http://mail.bossylobster.com/"&gt;GMail&lt;/a&gt;,
Calendar, Docs, etc. is fantastic.)&lt;/p&gt;
&lt;p&gt;So here is my ish: prove that you already own it.&lt;/p&gt;
&lt;p&gt;Yesterday morning, I spent several hours trying to verify ownership of
bossylobster.com (which I had purchased a week prior). While I realize
the DNS propagation process takes some time, I didn't want to try one
method, wait 24 hours and then realize at that point it hadn't worked.&lt;/p&gt;
&lt;p&gt;So, Google Apps &lt;a href="http://www.google.com/support/a/bin/answer.py?answer=60216"&gt;gives four
options&lt;/a&gt; on
how to verify:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.google.com/support/a/bin/answer.py?answer=183895"&gt;Create a TXT
    record&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Upload an HTML file to a specific path on your site&lt;/li&gt;
&lt;li&gt;Add a&lt;span class="Apple-style-span"
    style="background-color: white; color: white; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px;"&gt;&lt;span
    class="Apple-style-span"
    style="color: #881280; font-family: monospace; white-space: pre-wrap;"&gt;\&lt;meta&lt;/span&gt;&lt;span
    class="Apple-style-span"
    style="color: #881280; font-family: monospace; white-space: pre-wrap;"&gt;&gt;&lt;/span&gt;&lt;/span&gt;tag
    to your home page&lt;/li&gt;
&lt;li&gt;Verify using your Google Analytics tracking code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well, since I hadn't set my website up, the last three options were off
limits to me (or so I thought). I had a bare minimum package from 1&amp;amp;1,
so hosting was pretty much off limits. Apparently I picked one of the
inept domain hosts because they don't support creation of a CNAME TXT
record!! A quick Google search
&lt;a href="http://webmasters.stackexchange.com/questions/859/how-can-i-create-an-spf-record-on-my-1and1-com-hosted-domain"&gt;reveals&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes, we do understand what an SPF record is. Unfortunately we
do not support in on our hosting plans. We apologize for any
inconvenience.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Verify Ownership Panel" src="/images/verify1and1_screenshot2.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So here I am back to square one, just trying to prove I own something,
an inherently basic task made incredibly frustrating. Hopefully I can
help people avoid some frustration with the following instructions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open terminal and &lt;a href="http://ss64.com/bash/cd.html"&gt;change into the
directory&lt;/a&gt; with code for bossylobster
(your site).&lt;/li&gt;
&lt;li&gt;Create a Django project in that directory via the command
&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;sudo
django-admin.py startproject bossylobster_django&lt;/span&gt;.
(If you don't have Django or you are using Windows, read these
&lt;a href="https://docs.djangoproject.com/en/1.3/intro/install/"&gt;install&lt;/a&gt;
instructions, but DON'T SET UP A DATABASE, not necessary here. For a
more detailed tutorial see &lt;a href="https://docs.djangoproject.com/en/1.3/intro/tutorial01/"&gt;this
page&lt;/a&gt;. Also
note, &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;startproject&lt;/span&gt;
is the function name in the &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;django-admin&lt;/span&gt;
module and &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;bossylobster_django&lt;/span&gt;
can be replaced with your project name.)&lt;/li&gt;
&lt;li&gt;Change the file &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;bossylobster_django/urls.py&lt;/span&gt;
to:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;~~~~ {.prettyprint style="background-color: white;"}
from django.conf.urls.defaults import patternsfrom django.conf.urls.defaults import urlurlpatterns = patterns('', url(r'^$', 'bossylobster_django.views.index', name='home'),)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mf"&gt;5.&lt;/span&gt; &lt;span class="n"&gt;Change&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Apple-style-span&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: lime; font-family: &amp;#39;Courier New&amp;#39;, Courier, monospace;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bossylobster&lt;/span&gt;\&lt;span class="n"&gt;_django&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;~~~~&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettyprint&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;background-color: white;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponsedef&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39; &amp;lt;head&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39;  &amp;lt;meta name=&amp;quot;google-site-verification&amp;quot; content=&amp;quot;XXXX&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39; &amp;lt;/head&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39; &amp;lt;body&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39;  Hello world!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39; &amp;lt;/body&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s"&gt;&amp;#39; &amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where XXXX should be replaced by the content value provided by Google.
6a. &lt;a href="http://www.bitwiseim.com/wiki/index.php?title=Determine_your_LAN_/_Local_/_Internal_IP_Address"&gt;Determine your internal IP
address&lt;/a&gt;
for use in step 7
6b. &lt;a href="http://checkip.dyndns.com/"&gt;Determine your router's (external) IP
address&lt;/a&gt; for use in step 8
7. Set up a &lt;a href="http://portforward.com/dyndns/"&gt;port forwarding rule&lt;/a&gt; in
your router for port 80 (&lt;a href="https://www.grc.com/port_80.htm"&gt;websites&lt;/a&gt;)
with the IP address you found in 6a
8. (After logging in to&lt;a href="http://1and1.com/"&gt;1&amp;amp;1&lt;/a&gt;) &lt;a href="http://faq.1and1.com/domains/domain_admin/dns_settings/13.html"&gt;change IP for
bossylobster.com&lt;/a&gt;
to point to your router (from 6b)
9. From the &lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;bossylobster_django&lt;/span&gt;
directory (or whatever you called it), run the server via
&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;sudo
python manage.py runserver 192.168.XX.YY:80&lt;/span&gt;
where&lt;span class="Apple-style-span"
style="color: lime; font-family: 'Courier New', Courier, monospace;"&gt;192.168.XX.YY&lt;/span&gt;is
the IP you found in 6b.
10. &lt;a href="http://www.whatsmydns.net/#A/bossylobster.com"&gt;Check&lt;/a&gt; to see if
your change has propagated to DNS servers worldwide (wait until it has)
11. Upon propagation, login to &lt;a href="https://www.google.com/a"&gt;Google Apps&lt;/a&gt;
and verify via the meta tag&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Verify Ownership Success" src="/images/verify1and1_screenshot3.png" /&gt;&lt;/p&gt;
&lt;/div&gt;</summary><category term="1and1.com"></category><category term="Django"></category><category term="Google Apps"></category><category term="Verification"></category></entry><entry><title>Getting Divvy-like functionality on Linux</title><link href="/2011/07/i-love-divvy-as-im-sure-many-do-but-its.html" rel="alternate"></link><updated>2011-07-01T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-07-01:2011/07/i-love-divvy-as-im-sure-many-do-but-its.html</id><summary type="html">&lt;p&gt;I &lt;strong&gt;love&lt;/strong&gt; my &lt;a href="http://mizage.com/divvy"&gt;Divvy&lt;/a&gt;, as I'm sure many do, but
it's not available for Linux. (I completely understand why it isn't,
though the fact that they make Divvy a &lt;strong&gt;free&lt;/strong&gt; demo with full
functionality brings into question how much they are trying to monetize
it.) Anyhow, not wanting to give away my left hand for a personal
computer, I run Ubuntu on my home machine (but OS X at work, kind of
funny).&lt;/p&gt;
&lt;p&gt;In reality, all I really need from Divvy is the ability to do three
things without the mouse that I normally couldn't do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Maximize a window&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;2a. Make the window take the entire left half of the screen&lt;/li&gt;
&lt;li&gt;2b. Make the window take the entire right half of the screen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all, I'm not asking for much.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;As a brief side not for those who don't know, with Divvy, I start with a
window&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Before Re-sizing with Divvy" src="/images/divvy_before.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;and then call up Divvy with (a command I set globally) Ctrl-Z&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Divvy Menu" src="/images/divvy_calldivvy.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;and then once Divvy is up, I just hit the letter L (another command I
made) and voil&amp;#0224;&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="After Re-sizing with Divvy" src="/images/divvy_after.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;my window is on the full left half of the screen.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;So, every other weekend for the last five months, I have tried to find a
Divvy-like solution for Linux. I picked up and discarded Bluetile and
PyWO along the way, the former because it is way too heavy a solution
and the latter because it required the keypad, which my laptop keyboard
does not have (of course I could've enabled NumLock to simulate the
keypad, but that is too big a PITA).&lt;/p&gt;
&lt;p&gt;Finally, last night I came to a solution that I want to share (in case
anyone has gone through the pain I have). That solution is Compiz and
here is how I did it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Compiz from the command line via
   &lt;code&gt;sudo apt-get install compizconfig-settings-manager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install the extra plugins via
   &lt;code&gt;apt-get install compiz-fusion-plugins-extra&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Compiz (&lt;code&gt;ccsm&lt;/code&gt; from the command line) or
   &lt;div markdown="1" style="text-align: center;"&gt;
      &lt;img alt="CompixConfig Settings Manager" src="/images/ccsm.png" /&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go into the Window Management subsection
   &lt;div markdown="1" style="text-align: center;"&gt;
      &lt;img alt="Window Management Settings" src="/images/window_manage.png" /&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter Grid and set the "Put Left" and "Put Right" bindings to Alt-F8
   and Alt-F9, while disabling everything else (my choice, doesn't have to
   be yours, if you have a Keypad on your keyboard and NumLock is not going
   to interfere with the letter 'm', then go for it)
   &lt;div markdown="1" style="text-align: center;"&gt;
     &lt;img alt="Grid Settings" src="/images/grid.png" /&gt;
   &lt;/div&gt;
   (Also, another side note, if you are having trouble figuring out how to
   change the binding, just click the first box, the ones that say Disabled
   or whatever the current binding is and then "Grab Key Combination"
   &lt;div markdown="1" style="text-align: center;"&gt;
     &lt;img alt="Set Shortcut Value" src="/images/set_val.png" /&gt;
   &lt;/div&gt;
   to change the binding to your hearts content.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For maximize go to General Options
   &lt;div markdown="1" style="text-align: center;"&gt;
     &lt;img alt="General Compiz Settings" src="/images/general.png" /&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the Key Bindings tab, make sure "Toggle Window Maximized" is set
   to it's default value of Alt-F10
   &lt;div markdown="1" style="text-align: center;"&gt;
     &lt;img alt="Maximize Command" src="/images/maximize.png" /&gt;
   &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So with that, my conditions are satisfied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Condition 1. via Alt-F10&lt;/li&gt;
&lt;li&gt;Condition 2a. via Alt-F8&lt;/li&gt;
&lt;li&gt;Condition 2b. via Alt-F9&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My search is over (for now...unless I make DivvyBuntu...)&lt;/p&gt;</summary><category term="Compiz"></category><category term="Divvy"></category><category term="Linux"></category><category term="Mac OS X"></category><category term="Window Manager"></category></entry><entry><title>Life</title><link href="/2011/06/life.html" rel="alternate"></link><updated>2011-06-02T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-06-02:2011/06/life.html</id><summary type="html">&lt;p&gt;State Bird: Pterodactyl&lt;/p&gt;</summary><category term="Joke"></category></entry><entry><title>Birth Rates and Family Size</title><link href="/2011/05/birth-rates-and-family-size.html" rel="alternate"></link><updated>2011-05-18T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-05-18:2011/05/birth-rates-and-family-size.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.russellsage.org/research/social-inequality/chartbook/income-inequality-households-children/children-by-income"&gt;Family
Size&lt;/a&gt;and&lt;a href="http://mjperry.blogspot.com/2008/08/if-you-subsidize-something-you-get-more.html"&gt;Birth
Rates&lt;/a&gt;,
disproportionate in the wrong direction. Anyone know what this looks
like for other countries?&lt;/p&gt;</summary><category term="Birth Rates"></category><category term="Family Size"></category><category term="Inferior Goods"></category><category term="Social Economics"></category></entry><entry><title>First</title><link href="/2011/04/first.html" rel="alternate"></link><updated>2011-04-14T00:00:00-07:00</updated><author><name>Danny Hermes (dhermes@bossylobster.com)</name></author><id>tag:,2011-04-14:2011/04/first.html</id><summary type="html">&lt;p&gt;Hi everybody!&lt;/p&gt;</summary><category term=""></category></entry></feed>