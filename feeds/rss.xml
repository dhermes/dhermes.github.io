<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Bossy Lobster</title><link>https://blog.bossylobster.com/</link><description>A blog by Danny Hermes; musing on tech, mathematics, etc.</description><lastBuildDate>Fri, 04 Mar 2022 00:00:00 -0800</lastBuildDate><item><title>Epitaph: Blend</title><link>https://blog.bossylobster.com/2022/03/blend-epitaph.html</link><description>&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Auf Wiedersehen" src="/images/so-long-farewell.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;Goodbye&lt;/h3&gt;
&lt;p&gt;I recently made the &lt;strong&gt;very hard&lt;/strong&gt; decision to leave &lt;a href="https://blend.com/"&gt;Blend&lt;/a&gt;. Today
(March 4, 2022) is my last day. I am overwhelmed with emotion thinking about
all of the amazing people I worked with and projects I worked on at Blend.
I want to thank you all from the bottom …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 04 Mar 2022 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2022-03-04:/2022/03/blend-epitaph.html</guid><category>misc</category><category>Blend</category><category>Goodbyes</category><category>Epitaph</category></item><item><title>How to Write GitHub Actions in Go</title><link>https://blog.bossylobster.com/2022/02/how-to-write-github-actions-in-go.html</link><description>&lt;p&gt;&lt;img alt="Go with GitHub Actions" src="/images/go-with-github-actions.png"&gt;&lt;/p&gt;
&lt;p&gt;I recently&lt;sup id=sf-how-to-write-github-actions-in-go-1-back&gt;&lt;a href=#sf-how-to-write-github-actions-in-go-1 class=simple-footnote title="It was recent when I wrote this on February 7, 2022."&gt;1&lt;/a&gt;&lt;/sup&gt; had
the privilege of co-authoring a blog post on the Blend &lt;a href="https://full-stack.blend.com/"&gt;engineering blog&lt;/a&gt;
with my esteemed colleague &lt;a href="https://github.com/thomasnotfound"&gt;Thomas Taylor&lt;/a&gt;. I copied this content over
mostly as-is from the &lt;a href="https://full-stack.blend.com/how-we-write-github-actions-in-go.html"&gt;original post&lt;/a&gt; but wanted to preserve it here as
well.&lt;/p&gt;
&lt;h3&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=#introduction&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=#authoring-an-action&gt;Authoring an Action: Today's Landscape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=#how-we-release&gt;How We …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 07 Feb 2022 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2022-02-07:/2022/02/how-to-write-github-actions-in-go.html</guid><category>misc</category><category>Go</category><category>GitHub Actions</category><category>Continuous Integration</category><category>Golang</category></item><item><title>Bare Metal Kubernetes with Tailscale</title><link>https://blog.bossylobster.com/2021/12/tailsk8s.html</link><description>&lt;p&gt;For my most recent side project &lt;code&gt;tailsk8s&lt;/code&gt;, I've been &lt;a href="https://github.com/dhermes/tailsk8s/tree/v1.20211214.1"&gt;hacking&lt;/a&gt; on a
bare metal Kubernetes cluster that uses &lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt; for networking.
I had a lot of fun and learned a lot, but the TL;DR is that each Kubernetes
node is a Tailscale &lt;a href="https://tailscale.com/kb/1019/subnets/"&gt;subnet router&lt;/a&gt; and uses the &lt;code&gt;kubenet&lt;/code&gt; &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/#kubenet"&gt;CNI …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 14 Dec 2021 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-12-14:/2021/12/tailsk8s.html</guid><category>misc</category><category>Kubernetes</category><category>CNI</category><category>Tailscale</category><category>VPN</category><category>Mesh VPN</category></item><item><title>Remodeling the House While Living in It</title><link>https://blog.bossylobster.com/2021/11/safe-column-renames.html</link><description>&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Rename Name Tag" src="/images/rename_created_at.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;Minor Mismatch&lt;/h3&gt;
&lt;p&gt;When using a database in an application, there are many ways the idioms from
the database ecosystem can disagree with the idioms in the programming language
used to write the application. The object-relational impedance &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_impedance_mismatch"&gt;mismatch&lt;/a&gt; is
one such example of this, but that is mostly about differences between …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 01 Nov 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-11-01:/2021/11/safe-column-renames.html</guid><category>misc</category><category>Databases</category><category>Migrations</category><category>Rolling Update</category></item><item><title>What Is a Milestone Migration and Why Do I Care?</title><link>https://blog.bossylobster.com/2021/10/database-migrations-milestone.html</link><description>&lt;p&gt;&lt;img alt="Database Milestone" src="/images/database_milestone.jpg"&gt;&lt;/p&gt;
&lt;h3 id=motivation&gt;Motivation&lt;/h3&gt;
&lt;p&gt;Over time an application becomes a living thing. When operating a running
service, it's crucial to not only ask the question&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does the code being deployed work?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;it's also crucial to ask&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can I safely deploy this change given the currently running version of my
service?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This second question …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sat, 30 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-10-30:/2021/10/database-migrations-milestone.html</guid><category>misc</category><category>Databases</category><category>Migrations</category><category>Milestone</category></item><item><title>The Case for a Metadata Table for Database Migrations</title><link>https://blog.bossylobster.com/2021/10/database-migrations-table.html</link><description>&lt;p&gt;&lt;img alt="Tracking Migrations" src="/images/Legal_pad_and_pencil.jpg"&gt;&lt;/p&gt;
&lt;h3 id="motivation"&gt;Motivation&lt;/h3&gt;
&lt;p&gt;As features are added, changed or deleted, the data model used by an
application usually changes as well. For most database-backed applications,
this means migrations are needed.&lt;/p&gt;
&lt;p&gt;With this in mind, the fundamental goal of database migrations:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The current database schema should match the currently running code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, achieving …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 29 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-10-29:/2021/10/database-migrations-table.html</guid><category>misc</category><category>Databases</category><category>Migrations</category></item><item><title>When Elementary Becomes Elliptic</title><link>https://blog.bossylobster.com/2021/10/elementary-elliptic.html</link><description>&lt;p&gt;I enjoy watching math videos targeted at advanced high school or undergraduate
students — even if the topics are far away from research level
mathematics. I was recently watching a "quick and easy challenge in
algebra" &lt;a href="https://youtu.be/Wy_uzVX1U_g"&gt;video&lt;/a&gt; from &lt;a href="https://www.youtube.com/c/SyberMath/videos"&gt;SyberMath&lt;/a&gt;&lt;sup id=sf-elementary-elliptic-1-back&gt;&lt;a href=#sf-elementary-elliptic-1 class=simple-footnote title="I also really enjoy Michael Penn videos."&gt;1&lt;/a&gt;&lt;/sup&gt; that used a neat trick to solve the problem.
As the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sat, 23 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-10-23:/2021/10/elementary-elliptic.html</guid><category>misc</category><category>Math</category><category>Number Theory</category><category>Elliptic Curves</category></item><item><title>Go Duration, PostgreSQL Interval</title><link>https://blog.bossylobster.com/2021/10/go-duration-postgresql-interval.html</link><description>&lt;p&gt;Building a web application in Go and using PostgreSQL as the database is a real
joy. Both of these tools are produced by incredibly vibrant open source
projects. These projects represent some of the best attributes of the open
source movement. When used in combination, occasionally idioms from Go don't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 06 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-10-06:/2021/10/go-duration-postgresql-interval.html</guid><category>misc</category><category>Go</category><category>Golang</category><category>PostgreSQL</category><category>Time</category><category>Duration</category><category>Interval</category></item><item><title>Decrypting Vault Ciphertext with a Context</title><link>https://blog.bossylobster.com/2021/10/decrypt-vault-ciphertext-context.html</link><description>&lt;p&gt;In a previous &lt;a href="/2021/07/vault-import.html"&gt;post&lt;/a&gt;, I described a use case for customer provided keys
with Vault. One of the implications of this was the need for decryption after a
bulk data export. In that post, I gave a concrete example of decrypting Vault
ciphertext &lt;strong&gt;directly&lt;/strong&gt; with a customer provided key. However …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 05 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-10-05:/2021/10/decrypt-vault-ciphertext-context.html</guid><category>misc</category><category>Hashicorp</category><category>Vault</category><category>Encryption</category><category>Key Derivation</category></item><item><title>Atomically Idempotent</title><link>https://blog.bossylobster.com/2021/10/atomically-idempotent.html</link><description>&lt;p&gt;Recently, I was analyzing some initialization code in Go with a &lt;a href="https://github.com/mat285"&gt;teammate&lt;/a&gt;.
The value being initialized was meant to be used in concurrent Go, so
initialization had some requirement of atomicity. The code essentially boiled
down to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;atomic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LoadInt32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;Started&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="c1"&gt;// Early Exit …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 04 Oct 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-10-04:/2021/10/atomically-idempotent.html</guid><category>misc</category><category>Go</category><category>Atomic</category><category>Idempotent</category></item><item><title>Wrapping Behavior of context.WithValue()</title><link>https://blog.bossylobster.com/2021/09/go-context-withvalue.html</link><description>&lt;h3&gt;Motivation&lt;/h3&gt;
&lt;p&gt;Throughout the Go monorepo we use &lt;code&gt;context.WithValue()&lt;/code&gt; to "stash" a global
value on a root context. For example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WithLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ... later ...&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GetLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The implementations for stashing a &lt;code&gt;logger.Log&lt;/code&gt; are in the same general form
as most context wrapping helpers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;loggerKey …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 10 Sep 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-09-10:/2021/09/go-context-withvalue.html</guid><category>misc</category><category>Go</category><category>Golang</category><category>Context</category></item><item><title>Setting Per-Connection Timeouts with TypeORM</title><link>https://blog.bossylobster.com/2021/08/typeorm-timeouts.html</link><description>&lt;h3&gt;PostgreSQL Statement Timeout&lt;/h3&gt;
&lt;p&gt;For &lt;strong&gt;most&lt;/strong&gt; applications that use a database, user-facing queries &lt;strong&gt;must&lt;/strong&gt;
complete in a reasonable amount of time. In order to ensure a maximum
query time, PostgreSQL supports a &lt;code&gt;statement_timeout&lt;/code&gt; which will cause a
query to be cancelled if it exceeds the timeout:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ psql
monsters_inc=&amp;gt; SHOW statement_timeout;
 statement_timeout …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 24 Aug 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-08-24:/2021/08/typeorm-timeouts.html</guid><category>misc</category><category>TypeORM</category><category>PostgreSQL</category></item><item><title>Importing External Keys into Vault</title><link>https://blog.bossylobster.com/2021/07/vault-import.html</link><description>&lt;p&gt;&lt;img alt=Vault src="/images/Vault_PrimaryLogo_Black_RGB.png"&gt;&lt;/p&gt;
&lt;h3&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=#motivation&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=#importing-via-restore&gt;"Importing" via Restore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=#decrypting-exported-ciphertext&gt;Decrypting Exported Ciphertext&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=#key-backup-format&gt;Key Backup Format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=motivation&gt;Motivation&lt;/h3&gt;
&lt;p&gt;To understand why it's helpful to import external keys into Vault, it's
important to understand&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How and why encrypted data is stored in databases&lt;/li&gt;
&lt;li&gt;How Vault provides features that aid in encrypting and decrypting data&lt;/li&gt;
&lt;li&gt;Reasons for data …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 09 Jul 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-07-09:/2021/07/vault-import.html</guid><category>misc</category><category>Hashicorp</category><category>Vault</category><category>Import</category><category>Encryption</category></item><item><title>Fixing the Custom CA Problem in Node.js</title><link>https://blog.bossylobster.com/2021/05/node-ca-append.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Using the &lt;code&gt;ca&lt;/code&gt; field to specify custom CAs (certificate
authorities) in Node.js is a &lt;a href="/2021/05/node-ca-footgun.html"&gt;footgun&lt;/a&gt;. It replaces (rather than appends
to) the root trust store which can lead to unintended consequences. I've
seen this behavior cause outages in production when a third party server does
a routine …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 12 May 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-05-12:/2021/05/node-ca-append.html</guid><category>misc</category><category>Node.js</category><category>TLS</category><category>Monkey Patch</category><category>CA</category><category>Certificate Authority</category></item><item><title>The Node.js CA Footgun</title><link>https://blog.bossylobster.com/2021/05/node-ca-footgun.html</link><description>&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Door to Nowhere" src="/images/door-nowhere.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is a story of a brief outage caused by a slightly unintuitive API&lt;sup id=sf-node-ca-footgun-1-back&gt;&lt;a href=#sf-node-ca-footgun-1 class=simple-footnote title="Like a door to nowhere."&gt;1&lt;/a&gt;&lt;/sup&gt; that has some very &lt;a href="https://en.wiktionary.org/wiki/footgun"&gt;sharp corners&lt;/a&gt; for the
uninitiated. The outage, though brief, was of the "wake up at 4am" variety so
the lesson was especially salient.&lt;/p&gt;
&lt;p&gt;This &lt;strong&gt;is not&lt;/strong&gt; a post trying to tear …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 11 May 2021 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-05-11:/2021/05/node-ca-footgun.html</guid><category>misc</category><category>Node.js</category><category>TLS</category><category>CA</category><category>Certificate Authority</category></item><item><title>Custom GitHub Actions</title><link>https://blog.bossylobster.com/2021/03/custom-github-actions.html</link><description>&lt;p&gt;The "obvious" way to write a custom GitHub Action is using Node.js, however
it's not the only way. As it turns out, a GitHub Action really just
communicates with the "orchestrator" via environment variables (as inputs)
and STDOUT (to produce custom outputs).&lt;/p&gt;
&lt;h3&gt;Options&lt;/h3&gt;
&lt;p&gt;When defining an action, there are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 03 Mar 2021 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-03-03:/2021/03/custom-github-actions.html</guid><category>misc</category><category>GitHub Actions</category><category>GitHub</category><category>Actions</category></item><item><title>HTTP Is Just Text</title><link>https://blog.bossylobster.com/2021/02/http-is-just-text.html</link><description>&lt;p&gt;This is a tiny little note that can help with debugging in some situations.
We'll use netcat (&lt;code&gt;nc&lt;/code&gt;) to view the &lt;strong&gt;raw&lt;/strong&gt; data sent to and returned from
an HTTP server&lt;sup id=sf-http-is-just-text-1-back&gt;&lt;a href=#sf-http-is-just-text-1 class=simple-footnote title="Note that HTTP/2 is a binary protocol so this only applies to HTTP/1.1."&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h3&gt;Capture a Request&lt;/h3&gt;
&lt;p&gt;We'll run a dummy listener via &lt;code&gt;nc&lt;/code&gt; and directly inspect the body of an
HTTP …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 24 Feb 2021 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2021-02-24:/2021/02/http-is-just-text.html</guid><category>misc</category><category>HTTP</category><category>Protocol</category></item><item><title>Broken Pipe in a Haystack</title><link>https://blog.bossylobster.com/2020/12/broken-pipe.html</link><description>&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Broken Pipe" src="/images/broken-pipe.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I recently put on my detective hat and tracked down a bug in network error
recovery in a popular PostgreSQL library. Below, we'll walk through
the process of bugfinding and iteratively making the feedback loop smaller
and smaller. In order to find and fix the bug I&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Confirmed the root …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 01 Dec 2020 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-12-01:/2020/12/broken-pipe.html</guid><category>misc</category><category>Go</category><category>Golang</category><category>PostgreSQL</category><category>Networking</category><category>Debugging</category></item><item><title>pow Confusion</title><link>https://blog.bossylobster.com/2020/11/pow-confusion.html</link><description>&lt;p&gt;In my first summer of graduate school my code suddenly stopped working
because Fortran and Python (via &lt;code&gt;pow()&lt;/code&gt; in C) do exponentiation differently.
Once I debugged and understood the problem, I learned about the highly
optimized assembly code produced by Fortran for integer exponents.&lt;/p&gt;
&lt;p&gt;To give a sample of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 25 Nov 2020 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-11-25:/2020/11/pow-confusion.html</guid><category>misc</category><category>Math</category><category>Programming</category><category>Algorithms</category></item><item><title>Running dd-agent Locally</title><link>https://blog.bossylobster.com/2020/09/local-dd-agent.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Running Datadog (&lt;code&gt;dd-agent&lt;/code&gt;) during local development can help
confirm metrics and traces are sent as expected and can help debug when things
go wrong. To run &lt;code&gt;dd-agent&lt;/code&gt; locally just clone the
&lt;a href="https://github.com/dhermes/local-dd-agent"&gt;dhermes/local-dd-agent&lt;/a&gt;&lt;sup id=sf-local-dd-agent-1-back&gt;&lt;a href=#sf-local-dd-agent-1 class=simple-footnote title="As of b5b577154c7bf2c80020a0d87aa3c111e7cead8c"&gt;1&lt;/a&gt;&lt;/sup&gt; repository and &lt;code&gt;make run&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Being able to quickly iterate with a local &lt;code&gt;dd-agent&lt;/code&gt; helped …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 28 Sep 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-09-28:/2020/09/local-dd-agent.html</guid><category>misc</category><category>Datadog</category><category>Docker</category><category>UDS</category></item><item><title>Reading Istio Secrets</title><link>https://blog.bossylobster.com/2020/09/istio-workload-secrets.html</link><description>&lt;p&gt;Adopting a service mesh like Istio is a &lt;strong&gt;huge&lt;/strong&gt; undertaking. (Let's set aside
for this discussion whether it's a &lt;a href="https://twitter.com/rakyll/status/1173663473357574144"&gt;good idea&lt;/a&gt; to undertake.) A fairly
common issue when getting a mesh up and running is misconfiguration. When
trying to debug and determine where and how things are misconfigured, the
network …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 04 Sep 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-09-04:/2020/09/istio-workload-secrets.html</guid><category>misc</category><category>gRPC</category><category>Envoy</category><category>Istio</category><category>SDS</category><category>Go</category><category>Golang</category></item><item><title>Preventing PostgreSQL Deadlocks in Go</title><link>https://blog.bossylobster.com/2020/09/go-pq-prevent-deadlock.html</link><description>&lt;p&gt;&lt;img alt="All About Locks" src="/images/Lock-Up-The-Forest.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I've been writing a library for running PostgreSQL migrations in Go. One
of the primary pieces of advice I &lt;a href="https://www.citusdata.com/blog/2018/02/22/seven-tips-for-dealing-with-postgres-locks/"&gt;keep&lt;/a&gt; coming &lt;a href="https://benchling.engineering/move-fast-and-migrate-things-how-we-automated-migrations-in-postgres-d60aba0fc3d4"&gt;across&lt;/a&gt; is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Beware of lock queues, use lock timeouts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In other words, each migration stage should happen &lt;strong&gt;instantaneously&lt;/strong&gt; (or
almost instantaneously). For real-time applications, if a migration runs "for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 01 Sep 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-09-01:/2020/09/go-pq-prevent-deadlock.html</guid><category>misc</category><category>Go</category><category>Golang</category><category>PostgreSQL</category></item><item><title>How Do Slices Gain Capacity in Go?</title><link>https://blog.bossylobster.com/2020/07/go-slices-gain-capacity.html</link><description>&lt;h3&gt;Looking Inside a Slice&lt;/h3&gt;
&lt;p&gt;The first thing to realize is that a &lt;code&gt;slice&lt;/code&gt; in Go is really just a struct
that wraps "header" information about (1) a pointer to the "real" underlying
data, (2) the length and (3) the capacity without directly exposing those
fields. We can use a &lt;code&gt;struct …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 29 Jul 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-07-29:/2020/07/go-slices-gain-capacity.html</guid><category>misc</category><category>Go</category><category>Golang</category><category>Internals</category></item><item><title>A Day in the Life of a (Secure) Request</title><link>https://blog.bossylobster.com/2020/07/life-of-request.html</link><description>&lt;p&gt;I recently&lt;sup id=sf-life-of-request-1-back&gt;&lt;a href=#sf-life-of-request-1 class=simple-footnote title="It was recent when I wrote this on July 27, 2020."&gt;1&lt;/a&gt;&lt;/sup&gt; had the
privilege of co-authoring a blog post on the Blend &lt;a href="https://full-stack.blend.com/"&gt;engineering blog&lt;/a&gt; with
my esteemed colleague &lt;a href="https://github.com/hapoore"&gt;Austin Poore&lt;/a&gt;. Our engineering organization is
growing like crazy right now and it's a lot of fun so if any of this post is
interesting to you, check out our …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 27 Jul 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-07-27:/2020/07/life-of-request.html</guid><category>misc</category><category>TLS</category><category>Reverse Proxy</category><category>ELB</category><category>HTTP</category></item><item><title>Difference Between localhost and 0.0.0.0</title><link>https://blog.bossylobster.com/2020/07/loopback-vs-any-ip.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In a &lt;code&gt;docker&lt;/code&gt; container, a server can only be available
&lt;strong&gt;outside of the container / pod&lt;/strong&gt; if it is bound to the "any host"
IP&lt;sup id=sf-loopback-vs-any-ip-1-back&gt;&lt;a href=#sf-loopback-vs-any-ip-1 class=simple-footnote title='The "any host" IP is 0.0.0.0 for IPv4 and :: for IPv6'&gt;1&lt;/a&gt;&lt;/sup&gt;.
Binding a server to &lt;code&gt;localhost&lt;/code&gt; / the loopback IP&lt;sup id=sf-loopback-vs-any-ip-2-back&gt;&lt;a href=#sf-loopback-vs-any-ip-2 class=simple-footnote title="The loopback IP is 127.0.0.1 for IPv4 and ::1 for IPv6."&gt;2&lt;/a&gt;&lt;/sup&gt; will mean the server is
only reachable within the container / pod.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Consider the following Express …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 17 Jul 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-07-17:/2020/07/loopback-vs-any-ip.html</guid><category>misc</category><category>Localhost</category><category>Node.js</category></item><item><title>Isolating (Cordoning) a Misbehaving Pod</title><link>https://blog.bossylobster.com/2020/07/cordon-pod.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: You can remove a misbehaving pod from a service without deleting
it. Use &lt;code&gt;kubectl label pod ... cyberdyne-service- ...&lt;/code&gt; to remove a
label / labels. Once the labels are gone it will be removed from the
Kubernetes service that routes traffic to pods.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a Kubernetes &lt;strong&gt;node&lt;/strong&gt; is misbehaving, it's common …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 16 Jul 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-07-16:/2020/07/cordon-pod.html</guid><category>misc</category><category>Kubernetes</category><category>Pod</category><category>Cordon</category></item><item><title>ADDR vs. HOST</title><link>https://blog.bossylobster.com/2020/07/addr-vs-host.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Prefer inclusion of the protocol in configurable environment
variables&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VAULT_ADDR=https://vault.sandbox.invalid:8200&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;over&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VAULT_HOST=vault.sandbox.invalid&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;since this enables targeting a local server, e.g. &lt;code&gt;http://localhost:8200&lt;/code&gt;
without any code changes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We utilize sandbox, staging and other siloed environments to test changes
before …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 08 Jul 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-07-08:/2020/07/addr-vs-host.html</guid><category>misc</category><category>Configuration</category><category>SOA</category></item><item><title>Running vault Locally</title><link>https://blog.bossylobster.com/2020/07/running-vault-locally.html</link><description>&lt;p&gt;In order to run &lt;code&gt;vault&lt;/code&gt; locally (I did this because I was on an airplane),
first start the server with a known root token&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="go"&gt;export VAULT_TOKEN=root VAULT_ADDR=http://localhost:8200&lt;/span&gt;
&lt;span class="go"&gt;vault server -dev -dev-root-token-id=&amp;quot;${VAULT_TOKEN}&amp;quot;&lt;/span&gt;

&lt;span class="go"&gt;vault version  # As a baseline, this is the version of `vault` I am using …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 07 Jul 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-07-07:/2020/07/running-vault-locally.html</guid><category>misc</category><category>Vault</category><category>Docker</category></item><item><title>Express Trust Proxy</title><link>https://blog.bossylobster.com/2020/05/trust-proxy.html</link><description>&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;Using &lt;code&gt;app.use('trust proxy', true)&lt;/code&gt; is likely too permissive, this post
explains concretely why.&lt;/p&gt;
&lt;h3&gt;Example Applications&lt;/h3&gt;
&lt;p&gt;Consider two Express applications &lt;code&gt;index-first.js&lt;/code&gt; that uses
&lt;code&gt;app.set("trust proxy", true)&lt;/code&gt;&lt;/p&gt;
&lt;div class=highlight&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=kd&gt;const&lt;/span&gt; &lt;span class=nx&gt;express&lt;/span&gt; &lt;span class=o&gt;=&lt;/span&gt; &lt;span class=nx&gt;require&lt;/span&gt;&lt;span class=p&gt;(&lt;/span&gt;&lt;span class=s2&gt;"express"&lt;/span&gt;&lt;span class=p&gt;);&lt;/span&gt;
&lt;span class=kd&gt;const&lt;/span&gt; &lt;span class=nx&gt;app&lt;/span&gt; &lt;span class=o&gt;=&lt;/span&gt; &lt;span class=nx&gt;express&lt;/span&gt;&lt;span class=p&gt;();&lt;/span&gt;
&lt;span class=kd&gt;const&lt;/span&gt; &lt;span class=nx&gt;port&lt;/span&gt; &lt;span class=o&gt;=&lt;/span&gt; &lt;span class=mf&gt;3000&lt;/span&gt;&lt;span class=p&gt;;&lt;/span&gt;

&lt;span class=nx&gt;app&lt;/span&gt;&lt;span class=p&gt;.&lt;/span&gt;&lt;span class=nx&gt;set&lt;/span&gt;&lt;span class=p&gt;(&lt;/span&gt;&lt;span class=s2&gt;"trust proxy"&lt;/span&gt;&lt;span class=p&gt;,&lt;/span&gt; &lt;span class=kc&gt;true&lt;/span&gt;&lt;span class=p&gt;);&lt;/span&gt;
&lt;span class=nx&gt;app&lt;/span&gt;&lt;span class=p&gt;.&lt;/span&gt;&lt;span class=nx&gt;get&lt;/span&gt;&lt;span class=p&gt;(&lt;/span&gt;&lt;span class=s2&gt;"/"&lt;/span&gt;&lt;span class=p&gt;,&lt;/span&gt; &lt;span class=p&gt;(&lt;/span&gt;&lt;span class=nx&gt;req&lt;/span&gt;&lt;span class=p&gt;,&lt;/span&gt; &lt;span class=nx&gt;res …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 14 May 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-05-14:/2020/05/trust-proxy.html</guid><category>misc</category><category>Node.js</category><category>Proxy</category></item><item><title>A Threadsafe Connection Pool for Requests</title><link>https://blog.bossylobster.com/2020/04/threadsafe-connection-pool.html</link><description>&lt;p&gt;I've been load testing quite a bit recently. So far I've been impressed by the
&lt;code&gt;wrk&lt;/code&gt; &lt;a href="https://github.com/wg/wrk"&gt;project's&lt;/a&gt; use of sockets to pour on a ridiculously high amount of
load. When I had stretched the system under load &lt;strong&gt;past&lt;/strong&gt; its limits, finding
the &lt;code&gt;fortio&lt;/code&gt; &lt;a href="https://github.com/fortio/fortio"&gt;project&lt;/a&gt; was a breath of fresh air …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 22 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2020-04-22:/2020/04/threadsafe-connection-pool.html</guid><category>misc</category><category>Programming</category><category>TCP</category><category>Python</category><category>Threads</category></item><item><title>Decoding HTTP/2 and gRPC</title><link>https://blog.bossylobster.com/2019/08/http2-note.html</link><description>&lt;p&gt;In order to learn a bit more about how both the TCP and HTTP/2 protocols work,
I recently created the &lt;code&gt;tcp-h2-describe&lt;/code&gt; &lt;a href="https://pypi.org/project/tcp-h2-describe/0.1.0/"&gt;reverse proxy&lt;/a&gt; in Python. I was
excited about some of the insights I was able to glean from the process, in
particular a full &lt;a href="https://github.com/dhermes/tcp-h2-describe/blob/0.1.0/EXAMPLE-gRPC.md"&gt;example&lt;/a&gt; tracing a connection …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sat, 31 Aug 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2019-08-31:/2019/08/http2-note.html</guid><category>misc</category><category>Programming</category><category>TCP</category><category>HTTP/2</category><category>gRPC</category><category>Reverse Proxy</category><category>Proxy Protocol</category></item><item><title>Type Guards for Union Types in TypeScript</title><link>https://blog.bossylobster.com/2019/06/type-guards-for-union-types.html</link><description>&lt;p&gt;In my day job at &lt;a href="https://blend.com/careers/"&gt;Blend&lt;/a&gt;, I write a lot of TypeScript&lt;sup id=sf-type-guards-for-union-types-1-back&gt;&lt;a href=#sf-type-guards-for-union-types-1 class=simple-footnote title="This may surprise many of my colleagues from the Python world"&gt;1&lt;/a&gt;&lt;/sup&gt;. One great feature of
TypeScript is the ability to specify an enum with a finite set of values
as a &lt;a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html#union-types"&gt;union type&lt;/a&gt;:&lt;/p&gt;
&lt;div class=highlight&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=kd&gt;type&lt;/span&gt; &lt;span class=nx&gt;Coordinate&lt;/span&gt; &lt;span class=o&gt;=&lt;/span&gt; &lt;span class=s1&gt;'x'&lt;/span&gt; &lt;span class=o&gt;|&lt;/span&gt; &lt;span class=s1&gt;'y'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which then gives compile time checking for values of this type …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 09 Jun 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2019-06-09:/2019/06/type-guards-for-union-types.html</guid><category>misc</category><category>Programming</category><category>TypeScript</category><category>Types</category></item><item><title>Attack of Ruby Stack Traces</title><link>https://blog.bossylobster.com/2019/05/ruby-stack-traces.html</link><description>&lt;p&gt;First, let me say I'm not posting this to shame any company or language
community. Getting to the scale Twitter reached in a short amount of time
can quickly make past engineering decisions look foolish in hindsight. But
almost always they are decisions made in good faith with the current …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 27 May 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2019-05-27:/2019/05/ruby-stack-traces.html</guid><category>misc</category><category>Twitter</category><category>Programming</category><category>Ruby</category><category>Abstractions</category></item><item><title>Learn You a LAPACK for Great Good</title><link>https://blog.bossylobster.com/2018/09/learn-you-a-lapack.html</link><description>&lt;p&gt;Linear Algebra is an incredibly powerful tool. A joke among mathematicians
is that the only way we can solve a hard problem is to boil it down to
Linear Algebra&lt;sup id=sf-learn-you-a-lapack-1-back&gt;&lt;a href=#sf-learn-you-a-lapack-1 class=simple-footnote title="This actually happened to me. My undergraduate research project (REU) eventually boiled down to showing that a particularly special matrix had a nonzero determinant."&gt;1&lt;/a&gt;&lt;/sup&gt;. Harnessing the &lt;strong&gt;numerical&lt;/strong&gt; power of
Linear Algebra has been done via &lt;a href="https://en.wikipedia.org/wiki/LAPACK"&gt;LAPACK&lt;/a&gt; for the last 40+ years.&lt;/p&gt;
&lt;p&gt;In my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 13 Sep 2018 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2018-09-13:/2018/09/learn-you-a-lapack.html</guid><category>misc</category><category>Linear Algebra</category><category>Applied Mathematics</category><category>Mathematics</category><category>Programming</category></item><item><title>Graduated</title><link>https://blog.bossylobster.com/2018/09/graduated.html</link><description>&lt;p&gt;After five years, I'm excited to say I've finished &lt;a href="https://github.com/dhermes/phd-thesis"&gt;my PhD&lt;/a&gt;. I certainly
learned a lot and met a lot of great people along the way.&lt;/p&gt;
&lt;p&gt;One of the biggest lessons I learned was about myself: I need to &lt;strong&gt;say no&lt;/strong&gt;
more often. I continued to say yes, to &lt;a href="https://github.com/GoogleCloudPlatform/google-cloud-python/"&gt;side …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 07 Sep 2018 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2018-09-07:/2018/09/graduated.html</guid><category>misc</category><category>Education</category><category>Research</category><category>Applied Mathematics</category><category>PhD</category></item><item><title>Installing Python on OS X</title><link>https://blog.bossylobster.com/2017/09/python-on-os-x.html</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Caveat&lt;/strong&gt;: I stopped using a Mac for my development machine way
back in the fall of 2014. You probably shouldn't listen to me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;What Not to Do&lt;/h3&gt;
&lt;p&gt;The first rule of using Python on any operating system: &lt;strong&gt;don't use
system Python&lt;/strong&gt;. The OS &lt;strong&gt;relies&lt;/strong&gt; on that Python, including the packages …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 19 Sep 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2017-09-19:/2017/09/python-on-os-x.html</guid><category>misc</category><category>Programming</category><category>Mac OS X</category><category>Python</category><category>pyenc</category></item><item><title>How Does Go Compute a Logarithm</title><link>https://blog.bossylobster.com/2017/02/golang-and-log-x.html</link><description>&lt;p&gt;About a year ago, I was reading the Go &lt;a href="https://golang.org/src/math/log.go"&gt;source&lt;/a&gt; for computing
&lt;span class=katex&gt;&lt;span class=katex-mathml&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mo stretchy=false&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=false&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;\log(x)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=katex-html aria-hidden=true&gt;&lt;span class=base&gt;&lt;span class=strut style=height:1em;vertical-align:-0.25em;&gt;&lt;/span&gt;&lt;span class=mop&gt;lo&lt;span style=margin-right:0.01389em;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=mopen&gt;(&lt;/span&gt;&lt;span class="mord mathnormal"&gt;x&lt;/span&gt;&lt;span class=mclose&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and was very surprised by the
implementation.&lt;sup id=sf-golang-and-log-x-1-back&gt;&lt;a href=#sf-golang-and-log-x-1 class=simple-footnote title="Why would anyone look in this source? I was trying to explain to a student that a computer would compute this with minimal error when I realized I didn't know how."&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Even three years into a PhD in Applied Math (i.e. numerics), I still
managed to learn something by diving in and trying …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 06 Feb 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2017-02-06:/2017/02/golang-and-log-x.html</guid><category>misc</category><category>Math</category><category>Programming</category><category>Logarithm</category><category>Approximation</category><category>Remez</category></item><item><title>Newton's (Method's) Failure</title><link>https://blog.bossylobster.com/2016/11/newtons-failure.html</link><description>&lt;p&gt;Finding zeros of any old function is a common task, and using
&lt;a href="https://en.wikipedia.org/wiki/Newton's_method"&gt;Newton's method&lt;/a&gt; is one of the best tools for carrying
out this task. I've even &lt;a href="/2012/05/reverse-calculating-interest-rate.html"&gt;written&lt;/a&gt; an old post that used this
method.&lt;/p&gt;
&lt;p&gt;However, Newton's method loses some of it's luster around
repeated roots. Consider the iteration&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex-display"&gt;&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML" display="block"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;x …&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 24 Nov 2016 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2016-11-24:/2016/11/newtons-failure.html</guid><category>misc</category><category>Math</category><category>Floating Point</category><category>Programming</category></item><item><title>How Many Ways to Make a (Football) Score</title><link>https://blog.bossylobster.com/2016/01/how-many-ways-to-make-a-football-score.html</link><description>&lt;p&gt;While watching today's &lt;a href="https://twitter.com/NFL_Memes/status/686293582672715778"&gt;Seahawks-Vikings game&lt;/a&gt;, my wife asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How did the Seahawks score 9 points? Did they get a field goal
and miss an extra point after a touchdown?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I had been head down coding and didn't know the answer. I quickly
jotted down the possibilities (like solving the
&lt;a href="https://en.wikipedia.org/wiki/Change-making_problem"&gt;coin-change …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 10 Jan 2016 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2016-01-10:/2016/01/how-many-ways-to-make-a-football-score.html</guid><category>misc</category><category>Programming</category><category>JavaScript</category><category>Football</category></item><item><title>An Interesting Bug</title><link>https://blog.bossylobster.com/2015/07/an-interesting-bug.html</link><description>&lt;p&gt;A fairly &lt;a href="http://stackoverflow.com/q/169713/1068170"&gt;common&lt;/a&gt; interview &lt;a href="http://www.quora.com/Whats-the-hardest-bug-youve-debugged"&gt;question&lt;/a&gt; is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the "hardest" bug you've dealt with?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've both asked it and answered it in interviews. It's pretty rare
that the answer is useful and actionable, but I'll hold off on
commenting on the state of the art in tech interviews today.
(Usually …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 09 Jul 2015 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2015-07-09:/2015/07/an-interesting-bug.html</guid><category>misc</category><category>Debugging</category><category>Programming</category><category>Python</category><category>Interview</category></item><item><title>Constantly Seek Criticism</title><link>https://blog.bossylobster.com/2014/12/constantly-seek-criticism.html</link><description>&lt;p&gt;I was recently catching up on articles and videos I'd been putting off
and came across a great quote from &lt;a href="https://flic.kr/p/d83K9o"&gt;Elon Musk&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A well thought out critique ... is as valuable as gold.
And you should seek that from everyone you can, but particularly your
friends ... It doesn't mean your friends …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 31 Dec 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-12-31:/2014/12/constantly-seek-criticism.html</guid><category>misc</category><category>Feedback</category><category>Criticism</category><category>Self-Improvement</category><category>Advice</category><category>Elon Musk</category></item><item><title>Brand New Blog</title><link>https://blog.bossylobster.com/2014/12/brand-new-blog.html</link><description>&lt;p&gt;After a happy 3-year run with &lt;a href="http://bossylobster.blogspot.com/"&gt;Blogger&lt;/a&gt;, I've decided to
revamp my blog with viewers in mind.&lt;/p&gt;
&lt;h2&gt;Why?&lt;/h2&gt;
&lt;p&gt;When I &lt;a href="https://blog.bossylobster.com/2011/04/first.html"&gt;started&lt;/a&gt; my blog, I was still learning the ropes as a
programmer. I was happy to have a place to share the things I learned,
but didn't have much context …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 04 Dec 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-12-04:/2014/12/brand-new-blog.html</guid><category>misc</category><category>Pelican</category><category>Octopress</category><category>GitHub Pages</category><category>Blogger</category><category>Presentation</category></item><item><title>Quantitative Interview Brain Teaser: Computer Assistance</title><link>https://blog.bossylobster.com/2014/09/quantitative-interview-brain-teaser.html</link><description>&lt;p&gt;In a &lt;a href="/2014/09/quantitative-brain-teaser-brain-only.html"&gt;previous post&lt;/a&gt;
I discussed a recent brain teaser I had come across:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a &lt;strong&gt;10-digit number&lt;/strong&gt;, where each digit represents the
number of that ordinal number in the whole number. So, the
&lt;strong&gt;first digit represents the number of 0's&lt;/strong&gt; in the whole 10 digits. The
second digit represents …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 28 Sep 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-09-28:/2014/09/quantitative-interview-brain-teaser.html</guid><category>misc</category><category>Brain Teaser</category><category>Combinatorics</category><category>Digit Counting</category><category>Interview Questions</category><category>itertools</category><category>Mathematics</category><category>Programming</category><category>Python</category></item><item><title>Quantitative Brain Teaser: Brain Only</title><link>https://blog.bossylobster.com/2014/09/quantitative-brain-teaser-brain-only.html</link><description>&lt;p&gt;I've recently been working some atrophied mental muscles and came across
a brain teaser that was pretty nifty:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a &lt;strong&gt;10-digit number&lt;/strong&gt;, where each digit represents the
number of that ordinal number in the whole number. So, the
&lt;strong&gt;first digit represents the number of 0's&lt;/strong&gt; in the whole 10 digits …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 22 Sep 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-09-22:/2014/09/quantitative-brain-teaser-brain-only.html</guid><category>misc</category><category>Brain Teaser</category><category>Combinatorics</category><category>Digit Counting</category><category>Interview Questions</category><category>Mathematics</category></item><item><title>Math for Humans, A Second Attempt</title><link>https://blog.bossylobster.com/2014/08/math-for-humans-second-attempt.html</link><description>&lt;p&gt;The morning after posting my latest
&lt;a href="/2014/07/conditional-probabilities-in-thinking.html"&gt;blog post&lt;/a&gt;,
I woke up still thinking about how to explain the concept.&lt;/p&gt;
&lt;p&gt;More importantly, I realized that my goal of writing
&lt;strong&gt;math for humans&lt;/strong&gt; failed miserably.&lt;/p&gt;
&lt;p&gt;So here is a second go at it.&lt;/p&gt;
&lt;p&gt;First we're told we're in a world where &lt;strong&gt;85 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 22 Aug 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-08-22:/2014/08/math-for-humans-second-attempt.html</guid><category>misc</category><category>Bayes</category><category>Bayesian</category><category>Kahneman</category><category>Layman</category><category>Mathematics</category><category>Probability</category></item><item><title>Bayes' Law Primer</title><link>https://blog.bossylobster.com/2014/07/bayes-law-primer.html</link><description>&lt;p&gt;I'm currently writing a blog post that uses
&lt;a href="http://en.wikipedia.org/wiki/Bayes%27_law"&gt;Bayes' Law&lt;/a&gt;
but don't want to muddy the post with a review in layman's terms. So
I have something to link, here is a short description and a chance to flex my
&lt;a href="http://math.berkeley.edu/~dhermes/"&gt;teaching&lt;/a&gt; muscles before the school
year starts.&lt;/p&gt;
&lt;h2&gt;Bayes' Law&lt;/h2&gt;
&lt;p&gt;For …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 29 Jul 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-07-29:/2014/07/bayes-law-primer.html</guid><category>misc</category><category>Bayes</category><category>Layman</category><category>Mathematics</category><category>Probability</category></item><item><title>Conditional Probabilities in "Thinking Fast and Slow"</title><link>https://blog.bossylobster.com/2014/07/conditional-probabilities-in-thinking.html</link><description>&lt;p&gt;I'm currently reading
&lt;a href="http://www.amazon.com/gp/product/0374533555/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0374533555&amp;linkCode=as2&amp;tag=boslobblo-20&amp;linkId=FMJCYK4RKIVWRNFH"&gt;Thinking, Fast and Slow&lt;/a&gt;&lt;img src="//ir-na.amazon-adsystem.com/e/ir?t=boslobblo-20&amp;l=as2&amp;o=1&amp;a=0374533555" width="1" height="1" border="0" alt="AMZN Affiliate Ad" style="border:none !important; margin:0px !important;" /&gt;
by &lt;a href="http://en.wikipedia.org/wiki/Daniel_Kahneman"&gt;Daniel Kahneman&lt;/a&gt;.
(Thanks to Elianna for letting me borrow it.) I'm not finished yet, but
60% of the way through I definitely recommend it.&lt;/p&gt;
&lt;p&gt;While reading the "Causes Trump Statistics" chapter (number 16), there
is a description of a study about cabs …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 29 Jul 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2014-07-29:/2014/07/conditional-probabilities-in-thinking.html</guid><category>misc</category><category>Bayes</category><category>Bayesian</category><category>Kahneman</category><category>Layman</category><category>Mathematics</category><category>Probability</category></item><item><title>Trigonometry and Nested Radicals</title><link>https://blog.bossylobster.com/2013/11/trigonometry-and-nested-radicals.html</link><description>&lt;p&gt;Early last month, I was chatting with one of my officemates about a
curious problem I had studied in high school. I hadn't written any of
the results down, so much of the discussion involved me rediscovering
the results and proving them with much more powerful tools than I once …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 25 Nov 2013 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2013-11-25:/2013/11/trigonometry-and-nested-radicals.html</guid><category>misc</category><category>Approximation</category><category>Infinite Nested Radical</category><category>Math</category><category>Nested Radical</category><category>Pi</category><category>Radical</category><category>Root Two</category><category>Square Root</category></item><item><title>Calculating a Greatest Common Divisor with Dirichlet's Help</title><link>https://blog.bossylobster.com/2013/09/calculating-greatest-common-divisor.html</link><description>&lt;p&gt;Having just left Google and started my PhD in Applied Mathematics at
&lt;a href="http://math.berkeley.edu/"&gt;Berkeley&lt;/a&gt;, I thought it might be
appropriate to write some (more) math-related blog posts. Many of these
posts, I jotted down on napkins and various other places on the web and
just haven't had time to post until …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 10 Sep 2013 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2013-09-10:/2013/09/calculating-greatest-common-divisor.html</guid><category>misc</category><category>Dirichlet</category><category>Math</category><category>Mathematics</category><category>Number Theory</category><category>Prime Number</category></item><item><title>Some Fibonacci Fun with Primes</title><link>https://blog.bossylobster.com/2013/08/some-fibonacci-fun-with-primes.html</link><description>&lt;p&gt;I haven't written in way too long and just wanted to post this fun
little proof.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Assertion:&lt;/strong&gt; Let &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;F_n&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class="katex-html" aria-hidden="true"&gt;&lt;span class="base"&gt;&lt;span class="strut" style="height:0.83333em;vertical-align:-0.15em;"&gt;&lt;/span&gt;&lt;span class="mord"&gt;&lt;span class="mord mathnormal" style="margin-right:0.13889em;"&gt;F&lt;/span&gt;&lt;span class="msupsub"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist" style="height:0.151392em;"&gt;&lt;span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"&gt;&lt;span class="pstrut" style="height:2.7em;"&gt;&lt;/span&gt;&lt;span class="sizing reset-size6 size3 mtight"&gt;&lt;span class="mord mathnormal mtight"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist" style="height:0.15em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; be the &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;n&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class="katex-html" aria-hidden="true"&gt;&lt;span class="base"&gt;&lt;span class="strut" style="height:0.43056em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="mord mathnormal"&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;th
Fibonacci number defined by&lt;/p&gt;
&lt;div class="katex-elt"&gt;&lt;blockquote&gt;
&lt;span class="katex-display"&gt;&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML" display="block"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#8722;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;&amp;#8722;&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo separator="true"&gt;,&lt;/mo&gt;&lt;mspace width="1em"/&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo separator="true"&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1.&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;F_n = F_{n-1 …&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 18 Aug 2013 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2013-08-18:/2013/08/some-fibonacci-fun-with-primes.html</guid><category>misc</category><category>Algebra</category><category>Fibonacci</category><category>Finite Field</category><category>Linear Algebra</category><category>Math</category><category>Number Theory</category></item><item><title>Bridging OAuth 2.0 objects between GData and Discovery</title><link>https://blog.bossylobster.com/2012/12/bridging-oauth-20-objects-between-gdata.html</link><description>&lt;p&gt;My colleague
&lt;a href="http://plus.google.com/110554344789668969711"&gt;+Takashi Matsuo&lt;/a&gt; and I recently
gave a &lt;a href="http://www.youtube.com/watch?v=HoUdWBzUZ-M"&gt;talk&lt;/a&gt; about using
&lt;code&gt;OAuth2Decorator&lt;/code&gt; (from the &lt;code&gt;google-api-python-client&lt;/code&gt;
&lt;a href="http://code.google.com/p/google-api-python-client/"&gt;library&lt;/a&gt;) with
request handlers in
&lt;a href="https://developers.google.com/appengine/"&gt;Google App Engine&lt;/a&gt;. Shortly after, a
&lt;a href="http://stackoverflow.com/questions/13981641"&gt;Stack Overflow question&lt;/a&gt;
sprung up asking about the right way to use the decorator and, as a
follow up, if the decorator could …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 24 Dec 2012 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-12-24:/2012/12/bridging-oauth-20-objects-between-gdata.html</guid><category>misc</category><category>App Engine</category><category>Decorator</category><category>GData</category><category>gdata-python-client</category><category>Google App Engine</category><category>Google Calendar</category><category>google-api-python-client</category><category>OAuth</category><category>OAuth2.0</category><category>Python</category></item><item><title>Last to Cross the Finish Line: Part Three</title><link>https://blog.bossylobster.com/2012/09/last-to-cross-finish-line-part-three.html</link><description>&lt;p&gt;Recently, my colleague
&lt;a href="https://plus.google.com/115640166224745944209"&gt;+Fred Sauer&lt;/a&gt; and I gave a tech
talk called "Last Across the Finish Line: Asynchronous
&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview"&gt;Tasks&lt;/a&gt;
with &lt;a href="https://appengine.google.com/"&gt;App Engine&lt;/a&gt;". This is part three in
a three part series where I will share our
&lt;a href="http://www.forbes.com/pictures/ekij45gdh/learnings/#gallerycontent"&gt;learnings&lt;/a&gt;
and give some helpful references to the
&lt;a href="https://developers.google.com/appengine/docs/"&gt;App Engine documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 10 Sep 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-09-10:/2012/09/last-to-cross-finish-line-part-three.html</guid><category>misc</category><category>App Engine</category><category>Deferred Library</category><category>Google App Engine</category><category>Google Codesite</category><category>Javascript</category><category>jQuery</category><category>Python</category><category>Task Queue API</category></item><item><title>Last to Cross the Finish Line: Part Two</title><link>https://blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-two.html</link><description>&lt;p&gt;Recently, my colleague
&lt;a href="https://plus.google.com/115640166224745944209"&gt;+Fred Sauer&lt;/a&gt; and I gave a tech
talk called "Last Across the Finish Line: Asynchronous
&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview"&gt;Tasks&lt;/a&gt;
with &lt;a href="https://appengine.google.com/"&gt;App Engine&lt;/a&gt;".
This is part two in a three part series where I will share our
&lt;a href="http://www.forbes.com/pictures/ekij45gdh/learnings/#gallerycontent"&gt;learnings&lt;/a&gt;
and give some helpful references to the
&lt;a href="https://developers.google.com/appengine/docs/"&gt;App Engine documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 29 Aug 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-08-29:/2012/08/last-to-cross-finish-line-part-two.html</guid><category>misc</category><category>App Engine</category><category>Deferred Library</category><category>Google App Engine</category><category>Google Codesite</category><category>Javascript</category><category>jQuery</category><category>Python</category><category>Task Queue API</category></item><item><title>Last to Cross the Finish Line: Part One</title><link>https://blog.bossylobster.com/2012/08/last-to-cross-finish-line-part-one.html</link><description>&lt;p&gt;Recently, my colleague
&lt;a href="https://plus.google.com/115640166224745944209"&gt;+Fred Sauer&lt;/a&gt; and I gave a tech
talk called "Last Across the Finish Line: Asynchronous
&lt;a href="https://developers.google.com/appengine/docs/python/taskqueue/overview"&gt;Tasks&lt;/a&gt;
with &lt;a href="https://appengine.google.com/"&gt;App Engine&lt;/a&gt;". This is part one in a
three part series where I will share our
&lt;a href="http://www.forbes.com/pictures/ekij45gdh/learnings/#gallerycontent"&gt;learnings&lt;/a&gt;
and give some helpful references to the
&lt;a href="https://developers.google.com/appengine/docs/"&gt;App Engine documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;Before I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 27 Aug 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-08-27:/2012/08/last-to-cross-finish-line-part-one.html</guid><category>misc</category><category>App Engine</category><category>Deferred Library</category><category>Google App Engine</category><category>Google Codesite</category><category>Javascript</category><category>Python</category><category>Task Queue API</category></item><item><title>A Decorator for App Engine Deferred Tasks</title><link>https://blog.bossylobster.com/2012/08/a-decorator-for-appengine-deferred-tasks.html</link><description>&lt;p&gt;I happen to be a big fan of the
&lt;a href="https://developers.google.com/appengine/articles/deferred"&gt;deferred library&lt;/a&gt;
for both Python runtimes in
&lt;a href="https://developers.google.com/appengine/"&gt;Google App Engine&lt;/a&gt;.
If an application needs to queue up work, breaking the work into easy to
understand units by writing worker methods and then deferring the work into
tasks is a breeze using …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 19 Aug 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-08-19:/2012/08/a-decorator-for-appengine-deferred-tasks.html</guid><category>misc</category><category>App Engine</category><category>Decorator</category><category>Deferred Library</category><category>Environment Variables</category><category>Google App Engine</category><category>Python</category><category>Task Queue API</category></item><item><title>Life of π: Continued Fractions and Infinite Series</title><link>https://blog.bossylobster.com/2012/05/life-of-continued-fractions-and.html</link><description>&lt;p&gt;This is from a talk I gave to the
&lt;a href="http://www.math.ucsc.edu/"&gt;UC Santa Cruz Math&lt;/a&gt; Club back in February.
I have had the slides
&lt;a href="/images/cluttered_desk.jpg"&gt;cluttering my desk&lt;/a&gt;
since I gave the talk as a reminder of putting them up on the web, and
today I finally cleaned them off!&lt;/p&gt;
&lt;p&gt;An interested tidbit …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 17 May 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-05-17:/2012/05/life-of-continued-fractions-and.html</guid><category>misc</category><category>Analysis</category><category>Continued Fractions</category><category>Math</category><category>Pi</category><category>Tangent</category></item><item><title>Reverse Calculating An Interest Rate</title><link>https://blog.bossylobster.com/2012/05/reverse-calculating-interest-rate.html</link><description>&lt;p&gt;I was recently playing around with some loan data and only happened to
have the term (or length, or duration) of the loan, the amount of the
recurring payment (in this case monthly) and the remaining principal
owed on the loan. I figured there was an easy way to get …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 15 May 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-05-15:/2012/05/reverse-calculating-interest-rate.html</guid><category>misc</category><category>Finance</category><category>Interest Rate</category><category>Mortgage</category><category>Newton-Raphson Method</category><category>Numerical Analysis</category><category>Python</category></item><item><title>Silly Pranks on your Friends</title><link>https://blog.bossylobster.com/2012/04/silly-pranks-on-your-friends.html</link><description>&lt;h2&gt;Disclaimer: These are silly little pranks, but I don't encourage messing with someone's computing environment without letting them know you have done so.&lt;/h2&gt;
&lt;h3&gt;First Prank:&lt;/h3&gt;
&lt;p&gt;I have a friend who really likes to read
&lt;a href="http://people.com/"&gt;people.com&lt;/a&gt;, so I figured I would "enrich" her life
a bit with another source of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sat, 07 Apr 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-04-07:/2012/04/silly-pranks-on-your-friends.html</guid><category>misc</category><category>DNS</category><category>DNS Lookup</category><category>Domain Name System</category><category>Hosts file</category><category>Internet Protocol</category><category>Internet Service Provider</category><category>IP Address</category><category>ISP</category><category>Macbook</category><category>nytimes.com</category><category>people.com</category><category>Practical Joke</category><category>Prank</category><category>UNIX</category></item><item><title>Where have I been?</title><link>https://blog.bossylobster.com/2012/03/where-have-i-been.html</link><description>&lt;p&gt;Well, it's been a bit crazy and I haven't written a blog post in ages. I
have several brewing, but had just been too busy at work (and a ton of
travel for personal fun) to really have the excess time to write.&lt;/p&gt;
&lt;p&gt;This return post will not have much …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 28 Mar 2012 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2012-03-28:/2012/03/where-have-i-been.html</guid><category>misc</category><category>App Engine</category><category>Google App Engine</category><category>Google Codesite</category><category>Open Source</category><category>Python</category><category>Stack Overflow</category></item><item><title>A Python Metaclass for "extra bad" errors in Google App Engine</title><link>https://blog.bossylobster.com/2011/11/python-metaclass-for-extra-bad-errors.html</link><description>&lt;p&gt;So now here we are, having tried to
&lt;a href="/2011/11/handling-errors-in-google-app-engineand.html"&gt;handle errors in Google App Engine...and failed&lt;/a&gt;
all because silly &lt;code&gt;DeadlineExceededError&lt;/code&gt;
&lt;a href="https://code.google.com/p/googleappengine/source/browse/trunk/python/google/appengine/runtime/__init__.py?r=491#33"&gt;jumps over&lt;/a&gt;
&lt;code&gt;Exception&lt;/code&gt; in the inheritance chain and goes right for &lt;code&gt;BaseException&lt;/code&gt;.
How can we catch these in our handlers while staying
&lt;a href="http://docs.python.org/glossary.html#term-pythonic"&gt;Pythonic&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;First and foremost, in the case of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 30 Nov 2011 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-11-30:/2011/11/python-metaclass-for-extra-bad-errors.html</guid><category>misc</category><category>App Engine</category><category>Class as Object</category><category>Decorator</category><category>Exception</category><category>Google App Engine</category><category>Metaclass</category><category>OOP</category><category>Python</category><category>Pythonic</category><category>Request Handler</category></item><item><title>Handling errors in Google App Engine...and failing</title><link>https://blog.bossylobster.com/2011/11/handling-errors-in-google-app-engineand.html</link><description>&lt;p&gt;After spending a nontrivial amount of my nights and weekends working on
an App Engine app, I wanted a good way to monitor the logs without
checking in on them every day. After a particularly frustrating weekend
of updates that exposed unnoticed bugs that had yet to be triggered by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 27 Nov 2011 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-11-27:/2011/11/handling-errors-in-google-app-engineand.html</guid><category>misc</category><category>App Engine</category><category>Deferred Library</category><category>Exception</category><category>Google App Engine</category><category>Mail API</category><category>Metaclass</category><category>Python</category><category>Pythonic</category><category>Request Handler</category><category>Task Queue API</category></item><item><title>Quick and Dirty: Santa's Coming</title><link>https://blog.bossylobster.com/2011/11/quick-and-dirty-santas-coming.html</link><description>&lt;p&gt;I have been wanting to write a post for awhile, but was travelling for a
&lt;a href="https://sites.google.com/site/barcelonadevfest/"&gt;work event&lt;/a&gt; and while
on the road I decided to be lazy.&lt;/p&gt;
&lt;p&gt;Since I just so happen to use a few
&lt;a href="http://code.google.com/apis/gdata/"&gt;GData APIs&lt;/a&gt; occasionally in my day to day
work, most of the post ideas …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 17 Nov 2011 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-11-17:/2011/11/quick-and-dirty-santas-coming.html</guid><category>misc</category><category>API</category><category>Christmas</category><category>GCal</category><category>GData</category><category>Google Calendar</category><category>OAuth</category><category>OAuth2.0</category><category>Python</category><category>Santa</category></item><item><title>This Lobster, not so Bossy</title><link>https://blog.bossylobster.com/2011/10/this-lobster-not-so-bossy.html</link><description>&lt;div style="text-align: center;"&gt;
&lt;p&gt;&lt;img alt="Baby Lobster" src="/images/baby_lobster.jpg"&gt;&lt;/p&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 17 Oct 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-10-17:/2011/10/this-lobster-not-so-bossy.html</guid><category>misc</category></item><item><title>Protecting Sensitive Information in Public Git Repositories</title><link>https://blog.bossylobster.com/2011/10/protecting.html</link><description>&lt;p&gt;On the (much too early) bus to work this morning, I was reading my
Twitter feed and saw an
&lt;a href="https://twitter.com/#!/robhawkes/status/121593545202216960"&gt;interesting question&lt;/a&gt;
from &lt;a href="https://twitter.com/#!/robhawkes"&gt;Rob Hawkes&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center" lang="en"&gt;&lt;p&gt;How do you handle config files in your apps when you use Git? I keep accidentally adding config files with sensitive data to Git. :(&lt;/p&gt;&amp;mdash; Robin Hawkes …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 05 Oct 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-10-05:/2011/10/protecting.html</guid><category>misc</category><category>App Engine</category><category>Commit Hook</category><category>Config Files</category><category>Git</category><category>Private Key</category><category>Protect</category><category>Python</category></item><item><title>Finding (Fibonacci) Golden Nuggets Part 2</title><link>https://blog.bossylobster.com/2011/08/finding-fibonacci-golden-nuggets-part-2.html</link><description>&lt;p&gt;This is the &lt;strong&gt;mostly code&lt;/strong&gt; second half of a
&lt;a href="/2011/08/finding-fibonacci-golden-nuggets.html"&gt;two part post&lt;/a&gt;
that delivers on a promise of meaningful uses of some theory I
overviewed in my last set of posts.If you see words like topograph,
river, and base and you aren't sure what I mean, you may want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 29 Aug 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-08-29:/2011/08/finding-fibonacci-golden-nuggets-part-2.html</guid><category>misc</category><category>Binary Quadratic Form</category><category>Conway</category><category>Conway's Topograph</category><category>Math</category><category>Number Theory</category><category>Project Euler</category></item><item><title>Finding (Fibonacci) Golden Nuggets Part 1</title><link>https://blog.bossylobster.com/2011/08/finding-fibonacci-golden-nuggets.html</link><description>&lt;p&gt;As I mentioned in my last set ofposts, the content would go somewhere
and this post will be the first to deliver on that. In fact this is the
&lt;strong&gt;all math, no code&lt;/strong&gt; first half of a two part post that will deliver. If
you see words like topograph, river …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 28 Aug 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-08-28:/2011/08/finding-fibonacci-golden-nuggets.html</guid><category>misc</category><category>Binary Quadratic Form</category><category>Conway</category><category>Conway's Topograph</category><category>Math</category><category>Number Theory</category><category>Project Euler</category></item><item><title>Conway's Topograph Part 3</title><link>https://blog.bossylobster.com/2011/08/conways-topograph-part-3.html</link><description>&lt;p&gt;This is the second (continued from
&lt;a href="/2011/08/conways-topograph-part-2.html"&gt;Part 2&lt;/a&gt;)
in a series of three blog posts. In the following we'll investigate a few
properties of an object called Conway's topograph.
&lt;a href="http://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John Conway&lt;/a&gt; conjured up a
way to understand a binary quadratic form &amp;ndash; a very important algebraic
object &amp;ndash; in a geometric context …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 23 Aug 2011 18:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-08-23:/2011/08/conways-topograph-part-3.html</guid><category>misc</category><category>Algebra</category><category>Binary Quadratic Form</category><category>Conway</category><category>Conway's Topograph</category><category>Math</category><category>Number Theory</category></item><item><title>Conway's Topograph Part 2</title><link>https://blog.bossylobster.com/2011/08/conways-topograph-part-2.html</link><description>&lt;p&gt;This is the second (continued from
&lt;a href="/2011/08/conways-topograph-part-1.html"&gt;Part 1&lt;/a&gt;)
in a series of three blog posts. In the following we'll investigate a few
properties of an object called Conway's topograph.
&lt;a href="http://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John Conway&lt;/a&gt; conjured up a
way to understand a binary quadratic form &amp;ndash; a very important algebraic
object &amp;ndash; in a geometric context …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 23 Aug 2011 14:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-08-23:/2011/08/conways-topograph-part-2.html</guid><category>misc</category><category>Algebra</category><category>Binary Quadratic Form</category><category>Conway</category><category>Conway's Topograph</category><category>Math</category><category>Number Theory</category></item><item><title>Conway's Topograph Part 1</title><link>https://blog.bossylobster.com/2011/08/conways-topograph-part-1.html</link><description>&lt;p&gt;This is the first in a series of three blog posts. In the following
we'll investigate a few properties of an object called Conway's
topograph. &lt;a href="http://en.wikipedia.org/wiki/John_Horton_Conway"&gt;John Conway&lt;/a&gt;
conjured up a way to understand a binary quadratic form &amp;ndash; a very important
algebraic object &amp;ndash; in a geometric context. This is by no …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Tue, 23 Aug 2011 10:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-08-23:/2011/08/conways-topograph-part-1.html</guid><category>misc</category><category>Algebra</category><category>Binary Quadratic Form</category><category>Conway</category><category>Conway's Topograph</category><category>Math</category><category>Number Theory</category></item><item><title>The Lesson V8 Can Teach Python and Other Dynamic Languages</title><link>https://blog.bossylobster.com/2011/08/lesson-v8-can-teach-python-and-other.html</link><description>&lt;p&gt;Being unable to completely give up math for computers, I am naturally
drawn to &lt;a href="http://projecteuler.net/"&gt;Project Euler&lt;/a&gt; and as a result
solved a
&lt;a href="https://github.com/dhermes/project-euler/tree/master/python/complete"&gt;ridiculous number&lt;/a&gt;
of the problems posted there while learning Python. A few months
ago (March 13), after reading
&lt;a href="http://jsninja.com/"&gt;Secrets of a Javascript Ninja&lt;/a&gt;, I decided to begin
converting …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Wed, 17 Aug 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-08-17:/2011/08/lesson-v8-can-teach-python-and-other.html</guid><category>misc</category><category>Benchmark</category><category>Comparison</category><category>Dynamic Language</category><category>Javascript</category><category>Javascript Engine</category><category>JIT</category><category>Just-in Time Compile</category><category>node.js</category><category>Performance</category><category>Project Euler</category><category>PyPy</category><category>Python</category><category>V8</category></item><item><title>Woo hoo</title><link>https://blog.bossylobster.com/2011/07/woo-hoo.html</link><description>&lt;p&gt;It's official, I am a grown up!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/apis/inapppayments/articles/index.html"&gt;http://code.google.com/apis/inapppayments/articles/index.html&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 22 Jul 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-07-22:/2011/07/woo-hoo.html</guid><category>misc</category><category>Google</category><category>Google Codesite</category><category>In-App Payments</category></item><item><title>Continued fraction expansions of irrational square roots</title><link>https://blog.bossylobster.com/2011/07/continued-fraction-expansions-of.html</link><description>&lt;p&gt;I had no idea (until this Thursday, July 16 2011) that I had never seen a
proof of the fact that the continued fraction expansion of
&lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msqrt&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;/msqrt&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;\sqrt{D}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class="katex-html" aria-hidden="true"&gt;&lt;span class="base"&gt;&lt;span class="strut" style="height:1.04em;vertical-align:-0.11333499999999996em;"&gt;&lt;/span&gt;&lt;span class="mord sqrt"&gt;&lt;span class="vlist-t vlist-t2"&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist" style="height:0.9266650000000001em;"&gt;&lt;span class="svg-align" style="top:-3em;"&gt;&lt;span class="pstrut" style="height:3em;"&gt;&lt;/span&gt;&lt;span class="mord" style="padding-left:0.833em;"&gt;&lt;span class="mord mathnormal" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="top:-2.886665em;"&gt;&lt;span class="pstrut" style="height:3em;"&gt;&lt;/span&gt;&lt;span class="hide-tail" style="min-width:0.853em;height:1.08em;"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'&gt;&lt;path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-s"&gt;&amp;#8203;&lt;/span&gt;&lt;/span&gt;&lt;span class="vlist-r"&gt;&lt;span class="vlist" style="height:0.11333499999999996em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is periodic whenever &lt;span class="katex"&gt;&lt;span class="katex-mathml"&gt;&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;D&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class="katex-html" aria-hidden="true"&gt;&lt;span class="base"&gt;&lt;span class="strut" style="height:0.68333em;vertical-align:0em;"&gt;&lt;/span&gt;&lt;span class="mord mathnormal" style="margin-right:0.02778em;"&gt;D&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
is not a perfect square. But have no fear, I found out about something …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Mon, 18 Jul 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-07-18:/2011/07/continued-fraction-expansions-of.html</guid><category>misc</category><category>Algebra</category><category>Continued Fractions</category><category>Math</category><category>Quadratic Irrational</category><category>Square Root</category></item><item><title>Continued Fractions for the Greater Good part 1</title><link>https://blog.bossylobster.com/2011/07/continued-fractions-for-greater-good.html</link><description>&lt;p&gt;OK, maybe not for the greater good, but still fun. This first post will
be relatively short and sweet, intended to give an introduction for the
posts that will follow.&lt;/p&gt;
&lt;p&gt;Before the introduction, some
&lt;a href="http://en.wikipedia.org/wiki/Continued_fraction#Motivation"&gt;motivation&lt;/a&gt;
courtesy of Wikipedia:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...decimal representation has some problems. One problem is that many
rational numbers …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 10 Jul 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-07-10:/2011/07/continued-fractions-for-greater-good.html</guid><category>misc</category><category>Algebra</category><category>Continued</category><category>Fractions</category><category>Math</category></item><item><title>Verifying 1and1 Site Ownership with Google Apps</title><link>https://blog.bossylobster.com/2011/07/verifying-1-site-ownership-with-google.html</link><description>&lt;p&gt;Hello freens. I purchased bossylobster.com from &lt;a href="http://1and1.com/"&gt;1&amp;amp;1&lt;/a&gt;
recently with the intent of hosting it on Google App Engine. I soon
found out how delightful this process is. I made a &lt;code&gt;0.1&lt;/code&gt; version for my
site at &lt;a href="http://bossylobster.appspot.com/"&gt;bossylobster.appspot.com&lt;/a&gt; and
decided to launch by clicking &lt;strong&gt;Add Domain …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Sun, 03 Jul 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-07-03:/2011/07/verifying-1-site-ownership-with-google.html</guid><category>misc</category><category>1and1.com</category><category>Django</category><category>Google Apps</category><category>Verification</category></item><item><title>Getting Divvy-like functionality on Linux</title><link>https://blog.bossylobster.com/2011/07/i-love-divvy-as-im-sure-many-do-but-its.html</link><description>&lt;p&gt;I &lt;strong&gt;love&lt;/strong&gt; my &lt;a href="http://mizage.com/divvy"&gt;Divvy&lt;/a&gt;, as I'm sure many do, but
it's not available for Linux. (I completely understand why it isn't,
though the fact that they make Divvy a &lt;strong&gt;free&lt;/strong&gt; demo with full
functionality brings into question how much they are trying to monetize
it.) Anyhow, not wanting to give …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Fri, 01 Jul 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-07-01:/2011/07/i-love-divvy-as-im-sure-many-do-but-its.html</guid><category>misc</category><category>Compiz</category><category>Divvy</category><category>Linux</category><category>Mac OS X</category><category>Window Manager</category></item><item><title>Life</title><link>https://blog.bossylobster.com/2011/06/life.html</link><description>&lt;p&gt;State Bird: Pterodactyl&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 02 Jun 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-06-02:/2011/06/life.html</guid><category>misc</category><category>Joke</category></item><item><title>First</title><link>https://blog.bossylobster.com/2011/04/first.html</link><description>&lt;p&gt;Hi everybody!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Danny Hermes (dhermes@bossylobster.com)</dc:creator><pubDate>Thu, 14 Apr 2011 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:blog.bossylobster.com,2011-04-14:/2011/04/first.html</guid><category>misc</category></item></channel></rss>